name: Deploy blog

on:
  push:
    branches:
      - main

jobs:
  deploy-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/cache@v2.1.6
        id: node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Deps
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build Blog
        run: yarn run build:webpack

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: dist

  deploy-server:
    runs-on: ubuntu-latest
    needs: deploy-gh-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Configuration environment
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan mrhope.site >> ~/.ssh/known_hosts
          git config --global user.name 'Mr.Hope'
          git config --global user.email 'mister-hope@outlook.com'

      - name: Deploy
        run: |
          git push -f git@mrhope.site:/www/wwwroot/mrhope gh-pages
          ssh git@mrhope.site "cd /www/wwwroot/mrhope && git reset --hard HEAD"

  linter-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          persist-credentials: false
          submodules: true

      - uses: actions/cache@v2.1.6
        id: node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Deps
        if: steps.node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Linter test
        run: yarn run lint
