import{_ as s,X as i,Y as t,$ as e,a0 as h,Z as o,a3 as a,C as n}from"./framework-a91f7991.js";const d="/assets/mainPage-305ff4e1.png",c="/assets/profile-895aefc3.png",p="/assets/personalRepo-c2096fb0.png",u="/assets/repo-8dccd6c0.png",l={},b=a('<h2 id="gayhub-github-是世界上最大的-同性交友-代码托管网站" tabindex="-1"><a class="header-anchor" href="#gayhub-github-是世界上最大的-同性交友-代码托管网站" aria-hidden="true">#</a> <s>Gayhub</s> GitHub 是世界上最大的 <s>同性交友</s> 代码托管网站</h2><p>😋当然在上面交友也是极好的(这是重点，圈起来要考的😎)。</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><h3 id="repository" tabindex="-1"><a class="header-anchor" href="#repository" aria-hidden="true">#</a> Repository</h3><p>仓库。一个仓库即是一个项目。仓库是 GitHub 上的主要内容。每当您新建一个项目并想要在 GitHub。</p><h3 id="star" tabindex="-1"><a class="header-anchor" href="#star" aria-hidden="true">#</a> Star</h3><p>收藏。在每一个仓库主页的上方可以看到 star 按钮。其上的数值为收藏该项目的人数。点击星星即可将当前仓库收藏到您的账号上。您可以收藏一些您比较喜欢，或者项目对您来说有很大价值的项目。同时，点击数字可以看到哪些人收藏了这个项目。</p><h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> Fork</h3><p>复刻。在每一个仓库主页的上方可以看到 Fork 按钮。点击该按钮的作用是将当前项目复刻一份到自己的仓库中，这样，您就可以在此仓库仓库上查看当前、历史的版本，切换分支、或者是随心所欲的进行修改。原项目的新的推送、对历史版本的修改、甚至原作者删除了他的 repo，都不会对您 fork 的项目产生任何影响。</p><h3 id="issue" tabindex="-1"><a class="header-anchor" href="#issue" aria-hidden="true">#</a> Issue</h3><p>议题。你可将这里理解为 Bug 汇报区与新功能提交区。</p><p>如果您在使用该项目的过程中遇到了问题，可以在相应项目的 Issue 板块按照项目的要求提出 Issue。在 Issue 中可以汇报一个 bug，或者是提出一个 Feature Request (功能请求)。项目的拥有者可以针对您汇报的情况对您做出回复。</p><p>同时，项目拥有者还可以:</p><ul><li>为此 issue 增加 label (标签)，以帮助项目成员或是项目的其他使用者更好的理解这个 issue 的分类</li><li>将此 issue assign (分派) 给特定的项目成员解决。</li><li>将此 issue 加入特定的 project (项目) 以安排处理日期与进度。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了 GitHub 的友好交流环境，请在汇报 bug 时永远带上 bug 的一个简易的复现流程，可以直接建立一个简单的 reproduction repo 并把链接放置在您提出的 issue 中。</p></div><h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3><p>发起推送请求，简称 <strong>PR</strong>。如果是您自己的项目，您可以从一个分支向另一个分支发起推送请求。如果您想对别人的(您无权进行推送)项目进行代码的推送请求的化，需要先 fork 这个仓库。在自己 fork 的项目上进行修改，然后提交到自己的项目上，之后，建立一个从自己仓库到对方仓库的 PR。如果对方觉得您的新改动很不错，在经过测试或者 review 后就会接受它，这样原有项目就可拥有这些新的代码了.</p><h3 id="discussion" tabindex="-1"><a class="header-anchor" href="#discussion" aria-hidden="true">#</a> Discussion</h3><p>GitHub 的讨论区，和 Issue 区主要用于 Bug 和 Feature Request 的追踪不同，通常情况下，你可以在讨论区开帖子询问使用中遇到的问题，以便其他人进行答复。你也可以在 Discussion 区提供项目的看法与建议，比如对某个功能进行改进的方式以及相关理由。你也可以展示你自己使用项目的一些新的或是与项目相关的一些内容。</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> Watch</h3><p>关注，在每一个仓库主页的上方可以看到 Watch 按钮。如果您关注了某个项目,那么这个项目有了变化的时候,您就会得到通知.在您点击关注后，您还可以点击下拉列表进一步设置关注级别。您可以选择接受 Release (新发布) 通知，也可以选择 Watching 来监听所有的通知。当您选择 Ignore 的话，即使有人在这个仓库中 mention (提到) 了您，您也不会得到通知。</p><h3 id="review" tabindex="-1"><a class="header-anchor" href="#review" aria-hidden="true">#</a> Review</h3><p>审查。当项目收到 PR 时，项目的拥有成员可以对这份 PR 的代码改动进行审查，在 Review 的过程中，可以对代码的特定行或特定几行通过 comment(评论) 的方式来提出自己对代码改动的意见。</p><h2 id="主页" tabindex="-1"><a class="header-anchor" href="#主页" aria-hidden="true">#</a> 主页</h2><p><img src="'+d+'" alt="个人主页"></p>',25),f={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},g=a('<p>主页，在您登陆后，屏幕的左侧会展示您和您加入团队的项目，以及您的团队详情。中部会显示您关注的项目、人的动态，右侧会根据算法展示一些您可能会感兴趣的 repo。</p><h2 id="个人主页" tabindex="-1"><a class="header-anchor" href="#个人主页" aria-hidden="true">#</a> 个人主页</h2><p><img src="'+c+'" alt="个人主页"></p><p><strong>地址:</strong> <code>https://github.com/&lt;您的用户名&gt;</code></p><p>个人主页会有几个主要面板:</p><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h3><p>个人概览，您可以在上方 pin(固定) 最多六个您想要展示给他人的仓库。</p><p>下方就是您过去一年里向 GitHub 的提交数量分布图，以及您在 GitHub 上的活动比例。</p><p>最下方是近几年您在 GitHub 上的活动记录。</p><h3 id="repositories" tabindex="-1"><a class="header-anchor" href="#repositories" aria-hidden="true">#</a> Repositories</h3><p><img src="'+p+'" alt="个人仓库"></p><p>仓库列表，该面板会按照最后更新时间的倒序，展示该用户拥有的所有 repo，同时也会在面板上展示项目的 Description (描述)、Star 数、Fork 数、语言、协议、标签，以及过去一年内项目的 commit 分布数量。这些都能够帮助浏览者在不进入具体仓库页面的情况下大致了解每一个仓库的内容、欢迎程度与维护情况。</p><h3 id="projects" tabindex="-1"><a class="header-anchor" href="#projects" aria-hidden="true">#</a> Projects</h3><p>个人拥有的项目，在管理自己与团队跨仓库的活动日程时很有用。可以设置涉及到的仓库，提出任务、代办、时间表等。</p><h3 id="packages" tabindex="-1"><a class="header-anchor" href="#packages" aria-hidden="true">#</a> Packages</h3><p>个人在 GitHub 上拥有的包。目前较少人在 GitHub 上发布相关的包。</p><h3 id="stars" tabindex="-1"><a class="header-anchor" href="#stars" aria-hidden="true">#</a> Stars</h3><p>和仓库列表完全相同，只不过展示该用户收藏的 repo。</p><h3 id="followers-following" tabindex="-1"><a class="header-anchor" href="#followers-following" aria-hidden="true">#</a> Followers / Following</h3><p>关注您的人 / 关注的人。在个人主页的左侧就有 follow 按钮，follow 一个人意味着这个人在 GitHub 的的活动会出现在 GitHub 主页的 Activity List 上。</p><h2 id="仓库主页" tabindex="-1"><a class="header-anchor" href="#仓库主页" aria-hidden="true">#</a> 仓库主页</h2><p><img src="'+u+'" alt="仓库主页"></p><p>仓库主页主要显示项目的信息。从左到右的面板依次是: Code(代码)，Issues (问题)、Pull Requests (提交请求)、Actions (自动流程)、 Projects (项目)、 Wiki (项目介绍)、 Security (项目安全)、 Insights (项目数据统计) 与 Settings (项目设置)。</p><p>在下方会展示代码文件以及项目说明 README.md 文件。</p>',24);function _(m,x){const r=n("ExternalLinkIcon");return i(),t("div",null,[b,e("p",null,[e("a",f,[h("https://github.com"),o(r)])]),g])}const k=s(l,[["render",_],["__file","intro.html.vue"]]);export{k as default};
