import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as i,e as r,b as l,f as a,a as e,w as n,r as o,o as d}from"./app-Batje8m-.js";const k="/assets/css-rule-DuNs2G1t.jpg",c={},g={class:"hint-container tip"},A={class:"hint-container info"};function B(y,s){const t=o("RouteLink");return d(),h("div",null,[s[9]||(s[9]=i("p",null,[a("CSS 指层叠样式表 ("),i("strong",null,"C"),a("ascading "),i("strong",null,"S"),a("tyle "),i("strong",null,"S"),a("heets)。")],-1)),r(" more "),s[10]||(s[10]=l(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>和 HTML 类似，CSS 也不是真正的编程语言，甚至不是标记语言。它是一门样式表语言，这也就是说人们可以用它来选择性地为 HTML 元素添加样式。举例来说，要选择一个 HTML 页面里所有的段落元素，然后将其中的文本改成红色，可以这样写 CSS:</p><div class="language-css" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-css"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>您可以很方便的创建一个 <code>&lt;style&gt;</code> 标签并将上述样式表作为该标签的内容，这样页面所有段落的文字就会变成红色。</p><h2 id="css-规则集" tabindex="-1"><a class="header-anchor" href="#css-规则集"><span>CSS 规则集</span></a></h2><p>CSS 规则集由两个主要的部分构成: 选择器，以及一条或多条声明:</p><figure><img src="`+k+'" alt="CSS 规则图示" tabindex="0" loading="lazy"><figcaption>CSS 规则图示</figcaption></figure><ul><li><p><strong>选择器</strong> (Selector): 通常是您需要改变样式的 HTML 元素。</p></li><li><p><strong>声明</strong> (Declaration): 每条声明由一个属性和一个值组成。每个属性有一个值。</p><ul><li><strong>属性</strong> (Properties): 您希望设置的样式属性 (style attribute)，也是改变 HTML 元素样式的途径。(本例中 color 就是 <code>&lt;h1&gt;</code> 元素的属性) CSS 中，由编写人员决定修改哪个属性以改变规则。</li><li><strong>属性的值</strong> (Property value): 在属性的右边，冒号后面即属性的值，它从指定属性的众多外观中选择一个值 (我们除了 blue 之外还有很多属性值可以用于 color )。</li></ul></li></ul>',8)),i("div",g,[s[2]||(s[2]=i("p",{class:"hint-container-title"},"语法",-1)),s[3]||(s[3]=i("ul",null,[i("li",null,[a("每个规则集声明都应该包含在成对的花括号 "),i("code",null,"{}"),a(" 里")]),i("li",null,[a("在每个声明里要用冒号 "),i("code",null,":"),a(" 将属性与属性值分隔开")]),i("li",null,[a("每个声明总是以分号 "),i("code",null,";"),a(" 结束，以分隔多个声明。")])],-1)),i("p",null,[s[1]||(s[1]=a("更多声明详情，请见 ")),e(t,{to:"/code/website/css/guide/declaration.html"},{default:n(()=>s[0]||(s[0]=[a("CSS → 快速上手 → 声明")])),_:1,__:[0]})])]),s[11]||(s[11]=l(`<div class="language-css" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-css"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  text-align: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>CSS 块内的每一条声明都必须以分号结束，否则会报错(最后一条除外)，而每个 CSS 块不是以分号结束的!</p></div><h3 id="css-注释" tabindex="-1"><a class="header-anchor" href="#css-注释"><span>CSS 注释</span></a></h3><p>与 HTML 一样，CSS 也可以包含注释来解释您的代码，浏览器会忽略它。</p><p>CSS 注释以 <code>/*</code> 开始, 以 <code>*/</code> 结束。</p><p><strong>案例</strong>:</p><div class="language-css" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-css"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 这是个注释 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  text-align: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  /* 这是另一个注释 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">black</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  font-family: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">arial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">总结</p><ul><li>样式定义如何显示 HTML 元素</li><li>样式通常存储在样式表中</li><li>CSS 可以将多个样式层叠为一</li></ul></div><h2 id="css-选择器" tabindex="-1"><a class="header-anchor" href="#css-选择器"><span>CSS 选择器</span></a></h2><p>CSS 选择器是 CSS 规则的第一部分。它是元素和其他部分组合起来告诉浏览器哪个 HTML 元素应当是被选为应用规则中的 CSS 属性值的方式。</p><p>选择器所选择的元素，叫做“选择器的对象”。</p>`,11)),i("ul",null,[i("li",null,[e(t,{to:"/code/website/css/guide/selector.html"},{default:n(()=>s[4]||(s[4]=[a("查看详情")])),_:1,__:[4]})])]),s[12]||(s[12]=i("h2",{id:"引入-css",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#引入-css"},[i("span",null,"引入 CSS")])],-1)),s[13]||(s[13]=i("p",null,"共有三种方式引入并应用 CSS。",-1)),i("ul",null,[i("li",null,[e(t,{to:"/code/website/css/guide/import.html"},{default:n(()=>s[5]||(s[5]=[a("查看详情")])),_:1,__:[5]})])]),s[14]||(s[14]=l(`<h2 id="规则" tabindex="-1"><a class="header-anchor" href="#规则"><span>@ 规则</span></a></h2><p><code>@rules</code> 是一些特殊的规则，为 CSS 提供了一些关于如何表现的指导。有些 <code>@rules</code> 规则很简单，有规则名和值。</p><p>例如，要将额外的样式表导入主 CSS 样式表，可以使用 <code>@import</code>:</p><div class="language-css" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-css"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;styles2.css&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre></div><p>最常见的 <code>@rules</code> 之一是 <code>@media</code>，它允许您使用 媒体查询 来应用 CSS，仅当某些条件成立 (例如，当屏幕分辨率高于某一数量，或屏幕宽度大于某一宽度时)。</p><div class="language-css" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-css"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">pink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">@media</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (min-width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">540</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,6)),i("div",A,[s[8]||(s[8]=i("p",{class:"hint-container-title"},"相关信息",-1)),i("p",null,[s[7]||(s[7]=a("更多详情，请见 ")),e(t,{to:"/code/website/css/intro/media.html"},{default:n(()=>s[6]||(s[6]=[a("CSS → 媒体查询")])),_:1,__:[6]})])])])}const S=p(c,[["render",B]]),b=JSON.parse('{"path":"/code/website/css/guide/","title":"快速上手","lang":"zh-CN","frontmatter":{"title":"快速上手","icon":"creative","date":"2019-09-05T00:00:00.000Z","dir":{"collapsible":false,"order":1},"category":"CSS","tag":["快速上手"],"prev":"../","description":"CSS 指层叠样式表 (Cascading Style Sheets)。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速上手\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-09-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T17:47:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.com/code/website/css/guide/"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"快速上手"}],["meta",{"property":"og:description","content":"CSS 指层叠样式表 (Cascading Style Sheets)。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T17:47:26.000Z"}],["meta",{"property":"article:tag","content":"快速上手"}],["meta",{"property":"article:published_time","content":"2019-09-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T17:47:26.000Z"}],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"git":{"createdTime":1604600480000,"updatedTime":1706204846000,"contributors":[{"name":"Mr.Hope","username":"","email":"zhangbowang1998@gmail.com","commits":11}]},"readingTime":{"minutes":2.88,"words":864},"filePathRelative":"code/website/css/guide/README.md","excerpt":"<p>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)。</p>\\n","autoDesc":true}');export{S as comp,b as data};
