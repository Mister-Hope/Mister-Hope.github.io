import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as n,f as e,e as o,b as p,o as t}from"./app-BGIrljxn.js";const r={};function c(i,s){return t(),l("div",null,[s[0]||(s[0]=n("blockquote",null,[n("p",null,[e("GitHub 地址: "),n("a",{href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},"https://github.com/axios/axios")])],-1)),s[1]||(s[1]=n("p",null,"axois 是一个基于 Promise 的 HTTP 客户端，用于浏览器和 node.js",-1)),o(" more "),s[2]||(s[2]=p(`<h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><ul><li>从浏览器发出 XMLHttpRequests</li><li>从 Node.js 发出 HTTP 请求</li><li>支持 Promise API</li><li>拦截请求和响应</li><li>转换请求和响应数据</li><li>取消请求</li><li>JSON 数据的自动转换</li><li>客户端防止 XSRF 支持</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">npm</span><span style="color:#A3BE8C;"> install</span><span style="color:#A3BE8C;"> axois</span></span></code></pre></div><p>或</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">yarn</span><span style="color:#A3BE8C;"> add</span><span style="color:#A3BE8C;"> axios</span></span></code></pre></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><div class="hint-container info"><p class="hint-container-title">CommonJS 用法</p><p>为了在将 CommonJS 导入与 <code>require()</code> 一起使用时获得 TypeScript 类型(用于智能感知/自动完成)，请使用以下方法:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> axios</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> require</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">axios</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">default</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// axios.&lt;method&gt; will now provide autocomplete and parameter typings</span></span></code></pre></div></div><p>进行 GET 请求:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> axios</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> require</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">axios</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Make a request for a user with a given ID</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user?ID=12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // handle success</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // handle error</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> ()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // always executed</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Optionally the request above could also be done as</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">    params</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">      ID</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 12345</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">    },</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> ()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // always executed</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// Want to use async/await? Add the \`async\` keyword to your outer function/method.</span></span>
<span class="line"><span style="color:#81A1C1;">async</span><span style="color:#81A1C1;"> function</span><span style="color:#88C0D0;"> getUser</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  try</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    const</span><span style="color:#D8DEE9;"> response</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> await</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user?ID=12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> catch</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">error</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>async</code> / <code>await</code> is part of ECMAScript 2017 and is not supported in Internet Explorer and older browsers, so use with caution.</p></div><p>进行 POST 请求:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">post</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">    firstName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Fred</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">    lastName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Flintstone</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行多个并发请求:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> getUserAccount</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> getUserPermissions</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345/permissions</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">all</span><span style="color:#D8DEE9FF;">([</span><span style="color:#88C0D0;">getUserAccount</span><span style="color:#D8DEE9FF;">()</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> getUserPermissions</span><span style="color:#D8DEE9FF;">()])</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span></span>
<span class="line"><span style="color:#D8DEE9;">  axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">spread</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">acct</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> perms</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Both requests are now complete</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h2><p>可以通过将相关配置传递给 <code>axios</code> 来发出请求。</p><h3 id="axios-config" tabindex="-1"><a class="header-anchor" href="#axios-config"><span>axios(config)</span></a></h3><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Send a POST request</span></span>
<span class="line"><span style="color:#88C0D0;">axios</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#88C0D0;">  method</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">post</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  url</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  data</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">    firstName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Fred</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">    lastName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Flintstone</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// GET request for remote image</span></span>
<span class="line"><span style="color:#88C0D0;">axios</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#88C0D0;">  method</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">get</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  url</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">http://bit.ly/2mTM3nY</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  responseType</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">stream</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">  response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">data</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">pipe</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">fs</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">createWriteStream</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">ada_lovelace.jpg</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h3 id="axios-url-config" tabindex="-1"><a class="header-anchor" href="#axios-url-config"><span>axios(url[, config])</span></a></h3><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Send a GET request (default method)</span></span>
<span class="line"><span style="color:#88C0D0;">axios</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h3 id="请求别名" tabindex="-1"><a class="header-anchor" href="#请求别名"><span>请求别名</span></a></h3><p>为了方便起见，已为所有受支持的请求方法提供了别名。</p><ul><li><code>axios.request(config)</code></li><li><code>axios.get(url[, config])</code></li><li><code>axios.delete(url[, config])</code></li><li><code>axios.head(url[, config])</code></li><li><code>axios.options(url[, config])</code></li><li><code>axios.post(url[, data[, config]])</code></li><li><code>axios.put(url[, data[, config]])</code></li><li><code>axios.patch(url[, data[, config]])</code></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当使用别名时，<code>url</code>, <code>method</code> 和 <code>data</code> 属性不需要再配置中指定。</p></div><h3 id="并发" tabindex="-1"><a class="header-anchor" href="#并发"><span>并发</span></a></h3><p>一些用于处理并发请求的有用函数:</p><ul><li><p><code>axios.all(iterable)</code></p></li><li><p><code>axios.spread(callback)</code></p></li></ul><h3 id="创建实例" tabindex="-1"><a class="header-anchor" href="#创建实例"><span>创建实例</span></a></h3><p>您可以使用自定义配置创建 axios 的新实例。</p><ul><li><code>axios.create([config])</code></li></ul><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> instance</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">create</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#88C0D0;">  baseURL</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">https://some-domain.com/api/</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  timeout</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1000</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  headers</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">X-Custom-Header</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">foobar</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> },</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h3 id="实例方法" tabindex="-1"><a class="header-anchor" href="#实例方法"><span>实例方法</span></a></h3><p>可用的实例方法在下面列出。指定的配置将与实例配置合并。</p><ul><li><code>axios#request(config)</code></li><li><code>axios#get(url[, config])</code></li><li><code>axios#delete(url[, config])</code></li><li><code>axios#head(url[, config])</code></li><li><code>axios#options(url[, config])</code></li><li><code>axios#post(url[, data[, config]])</code></li><li><code>axios#put(url[, data[, config]])</code></li><li><code>axios#patch(url[, data[, config]])</code></li><li><code>axios#getUri([config])</code></li></ul><h2 id="请求配置" tabindex="-1"><a class="header-anchor" href="#请求配置"><span>请求配置</span></a></h2><p>These are the available config options for making requests. Only the <code>url</code> is required. Requests will default to <code>GET</code> if <code>method</code> is not specified.</p><p>这些是发出请求的可用配置选项。只有 <code>url</code> 是必填的。如果未指定 <code>method</code>，则请求将默认为 <code>GET</code>。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">  // \`url\` is the server URL that will be used for the request</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  url</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">/user</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`method\` is the request method to be used when making the request</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  method</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">get</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`baseURL\` will be prepended to \`url\` unless \`url\` is absolute.</span></span>
<span class="line"><span style="color:#616E88;">  // It can be convenient to set \`baseURL\` for an instance of axios to pass relative URLs</span></span>
<span class="line"><span style="color:#616E88;">  // to methods of that instance.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  baseURL</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">https://some-domain.com/api/</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`transformRequest\` allows changes to the request data before it is sent to the server</span></span>
<span class="line"><span style="color:#616E88;">  // This is only applicable for request methods &#39;PUT&#39;, &#39;POST&#39;, &#39;PATCH&#39; and &#39;DELETE&#39;</span></span>
<span class="line"><span style="color:#616E88;">  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,</span></span>
<span class="line"><span style="color:#616E88;">  // FormData or Stream</span></span>
<span class="line"><span style="color:#616E88;">  // You may modify the headers object.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  transformRequest</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">data</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> headers</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Do whatever you want to transform the data</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> data</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`transformResponse\` allows changes to the response data to be made before</span></span>
<span class="line"><span style="color:#616E88;">  // it is passed to then/catch</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  transformResponse</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">data</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Do whatever you want to transform the data</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> data</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">]</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`headers\` are custom headers to be sent</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  headers</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">X-Requested-With</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">: </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">XMLHttpRequest</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">},</span></span>
<span class="line"><span style="color:#616E88;">  // \`params\` are the URL parameters to be sent with the request</span></span>
<span class="line"><span style="color:#616E88;">  // Must be a plain object or a URLSearchParams object</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  params</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    ID</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 12345</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`paramsSerializer\` is an optional function in charge of serializing \`params\`</span></span>
<span class="line"><span style="color:#616E88;">  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  paramsSerializer</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">params</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> Qs</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">stringify</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">params</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;">arrayFormat</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">brackets</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`data\` is the data to be sent as the request body</span></span>
<span class="line"><span style="color:#616E88;">  // Only applicable for request methods &#39;PUT&#39;, &#39;POST&#39;, and &#39;PATCH&#39;</span></span>
<span class="line"><span style="color:#616E88;">  // When no \`transformRequest\` is set, must be of one of the following types:</span></span>
<span class="line"><span style="color:#616E88;">  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams</span></span>
<span class="line"><span style="color:#616E88;">  // - Browser only: FormData, File, Blob</span></span>
<span class="line"><span style="color:#616E88;">  // - Node only: Stream, Buffer</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  data</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    firstName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Fred</span><span style="color:#ECEFF4;">&#39;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">  // syntax alternative to send data into the body</span></span>
<span class="line"><span style="color:#616E88;">  // method post</span></span>
<span class="line"><span style="color:#616E88;">  // only the value is sent, not the key</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  data</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Country=Brasil&amp;City=Belo Horizonte</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`timeout\` specifies the number of milliseconds before the request times out.</span></span>
<span class="line"><span style="color:#616E88;">  // If the request takes longer than \`timeout\`, the request will be aborted.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  timeout</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1000</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default is \`0\` (no timeout)</span></span>
<span class="line"><span style="color:#616E88;">  // \`withCredentials\` indicates whether or not cross-site Access-Control requests</span></span>
<span class="line"><span style="color:#616E88;">  // should be made using credentials</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  withCredentials</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> false</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`adapter\` allows custom handling of requests which makes testing easier.</span></span>
<span class="line"><span style="color:#616E88;">  // Return a promise and supply a valid response (see lib/adapters/README.md).</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  adapter</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">config</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    /* ... */</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`auth\` indicates that HTTP Basic auth should be used, and supplies credentials.</span></span>
<span class="line"><span style="color:#616E88;">  // This will set an \`Authorization\` header, overwriting any existing</span></span>
<span class="line"><span style="color:#616E88;">  // \`Authorization\` custom headers you have set using \`headers\`.</span></span>
<span class="line"><span style="color:#616E88;">  // Please note that only HTTP Basic auth is configurable through this parameter.</span></span>
<span class="line"><span style="color:#616E88;">  // For Bearer tokens and such, use \`Authorization\` custom headers instead.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  auth</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    username</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">janedoe</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    password</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">s00pers3cret</span><span style="color:#ECEFF4;">&#39;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`responseType\` indicates the type of data that the server will respond with</span></span>
<span class="line"><span style="color:#616E88;">  // options are: &#39;arraybuffer&#39;, &#39;document&#39;, &#39;json&#39;, &#39;text&#39;, &#39;stream&#39;</span></span>
<span class="line"><span style="color:#616E88;">  //   browser only: &#39;blob&#39;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  responseType</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">json</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`responseEncoding\` indicates encoding to use for decoding responses</span></span>
<span class="line"><span style="color:#616E88;">  // Note: Ignored for \`responseType\` of &#39;stream&#39; or client-side requests</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  responseEncoding</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">utf8</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`xsrfCookieName\` is the name of the cookie to use as a value for xsrf token</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  xsrfCookieName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">XSRF-TOKEN</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`xsrfHeaderName\` is the name of the http header that carries the xsrf token value</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  xsrfHeaderName</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">X-XSRF-TOKEN</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`onUploadProgress\` allows handling of progress events for uploads</span></span>
<span class="line"><span style="color:#616E88;">  // browser only</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  onUploadProgress</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">progressEvent</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Do whatever you want with the native progress event</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`onDownloadProgress\` allows handling of progress events for downloads</span></span>
<span class="line"><span style="color:#616E88;">  // browser only</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  onDownloadProgress</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">progressEvent</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Do whatever you want with the native progress event</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`maxContentLength\` defines the max size of the http response content in bytes allowed</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  maxContentLength</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 2000</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`maxBodyLength\` (Node only option) defines the max size of the http request content in bytes allowed</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  maxBodyLength</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 2000</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`validateStatus\` defines whether to resolve or reject the promise for a given</span></span>
<span class="line"><span style="color:#616E88;">  // HTTP response status code. If \`validateStatus\` returns \`true\` (or is set to \`null\`</span></span>
<span class="line"><span style="color:#616E88;">  // or \`undefined\`), the promise will be resolved; otherwise, the promise will be</span></span>
<span class="line"><span style="color:#616E88;">  // rejected.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  validateStatus</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">status</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> status</span><span style="color:#81A1C1;"> &gt;=</span><span style="color:#B48EAD;"> 200</span><span style="color:#81A1C1;"> &amp;&amp;</span><span style="color:#D8DEE9;"> status</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#B48EAD;"> 300</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`maxRedirects\` defines the maximum number of redirects to follow in node.js.</span></span>
<span class="line"><span style="color:#616E88;">  // If set to 0, no redirects will be followed.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  maxRedirects</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 5</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`socketPath\` defines a UNIX Socket to be used in node.js.</span></span>
<span class="line"><span style="color:#616E88;">  // e.g. &#39;/var/run/docker.sock&#39; to send requests to the docker daemon.</span></span>
<span class="line"><span style="color:#616E88;">  // Only either \`socketPath\` or \`proxy\` can be specified.</span></span>
<span class="line"><span style="color:#616E88;">  // If both are specified, \`socketPath\` is used.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  socketPath</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#616E88;">  // \`httpAgent\` and \`httpsAgent\` define a custom agent to be used when performing http</span></span>
<span class="line"><span style="color:#616E88;">  // and https requests, respectively, in node.js. This allows options to be added like</span></span>
<span class="line"><span style="color:#616E88;">  // \`keepAlive\` that are not enabled by default.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  httpAgent</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> new</span><span style="color:#D8DEE9;"> http</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Agent</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> keepAlive</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> true</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  httpsAgent</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> new</span><span style="color:#D8DEE9;"> https</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Agent</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> keepAlive</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> true</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`proxy\` defines the hostname and port of the proxy server.</span></span>
<span class="line"><span style="color:#616E88;">  // You can also define your proxy using the conventional \`http_proxy\` and</span></span>
<span class="line"><span style="color:#616E88;">  // \`https_proxy\` environment variables. If you are using environment variables</span></span>
<span class="line"><span style="color:#616E88;">  // for your proxy configuration, you can also define a \`no_proxy\` environment</span></span>
<span class="line"><span style="color:#616E88;">  // variable as a comma-separated list of domains that should not be proxied.</span></span>
<span class="line"><span style="color:#616E88;">  // Use \`false\` to disable proxies, ignoring environment variables.</span></span>
<span class="line"><span style="color:#616E88;">  // \`auth\` indicates that HTTP Basic auth should be used to connect to the proxy, and</span></span>
<span class="line"><span style="color:#616E88;">  // supplies credentials.</span></span>
<span class="line"><span style="color:#616E88;">  // This will set an \`Proxy-Authorization\` header, overwriting any existing</span></span>
<span class="line"><span style="color:#616E88;">  // \`Proxy-Authorization\` custom headers you have set using \`headers\`.</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  proxy</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    host</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">127.0.0.1</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    port</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 9000</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    auth</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      username</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">mikeymike</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">      password</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">rapunz3l</span><span style="color:#ECEFF4;">&#39;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#616E88;">  // \`cancelToken\` specifies a cancel token that can be used to cancel the request</span></span>
<span class="line"><span style="color:#616E88;">  // (see Cancellation section below for details)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  cancelToken</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> CancelToken</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">cancel</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`decompress\` indicates whether or not the response body should be decompressed</span></span>
<span class="line"><span style="color:#616E88;">  // automatically. If set to \`true\` will also remove the &#39;content-encoding&#39; header</span></span>
<span class="line"><span style="color:#616E88;">  // from the responses objects of all decompressed responses</span></span>
<span class="line"><span style="color:#616E88;">  // - Node only (XHR cannot turn off decompression)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  decompress</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> true</span><span style="color:#616E88;"> // default</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相应模式" tabindex="-1"><a class="header-anchor" href="#相应模式"><span>相应模式</span></a></h2><p>请求的响应包含以下信息。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">  // \`data\` is the response that was provided by the server</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  data</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {},</span></span>
<span class="line"><span style="color:#616E88;">  // \`status\` is the HTTP status code from the server response</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  status</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 200</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`statusText\` is the HTTP status message from the server response</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  statusText</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">OK</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#616E88;">  // \`headers\` the HTTP headers that the server responded with</span></span>
<span class="line"><span style="color:#616E88;">  // All header names are lower cased and can be accessed using the bracket notation.</span></span>
<span class="line"><span style="color:#616E88;">  // Example: \`response.headers[&#39;content-type&#39;]\`</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  headers</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {},</span></span>
<span class="line"><span style="color:#616E88;">  // \`config\` is the config that was provided to \`axios\` for the request</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  config</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {},</span></span>
<span class="line"><span style="color:#616E88;">  // \`request\` is the request that generated this response</span></span>
<span class="line"><span style="color:#616E88;">  // It is the last ClientRequest instance in Node.js (in redirects)</span></span>
<span class="line"><span style="color:#616E88;">  // and an XMLHttpRequest instance in the browser</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  request</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {}</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>then</code> 时，您将收到如下响应:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">then</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">data</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">status</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">statusText</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">headers</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">config</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>当使用 <code>catch</code> 或传递 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then" target="_blank" rel="noopener noreferrer">拒绝回调</a> 作为 <code>then</code> 的第二个参数时， 如 <a href="#%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF">处理错误</a>部分中所述，响应将通过 <code>error</code> 对象提供。</p><h2 id="配置默认值" tabindex="-1"><a class="header-anchor" href="#配置默认值"><span>配置默认值</span></a></h2><p>您可以指定将应用于每个请求的配置默认值。</p><h3 id="全局-axios-默认值" tabindex="-1"><a class="header-anchor" href="#全局-axios-默认值"><span>全局 axios 默认值</span></a></h3><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaults</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">baseURL</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">https://api.example.com</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaults</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">headers</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">common</span><span style="color:#D8DEE9FF;">[</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Authorization</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9;"> AUTH_TOKEN</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaults</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">headers</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">post</span><span style="color:#D8DEE9FF;">[</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Content-Type</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span></span>
<span class="line"><span style="color:#ECEFF4;">  &quot;</span><span style="color:#A3BE8C;">application/x-www-form-urlencoded</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h3 id="自定义实例默认值" tabindex="-1"><a class="header-anchor" href="#自定义实例默认值"><span>自定义实例默认值</span></a></h3><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Set config defaults when creating the instance</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> instance</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">create</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#88C0D0;">  baseURL</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">https://api.example.com</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// Alter defaults after instance has been created</span></span>
<span class="line"><span style="color:#D8DEE9;">instance</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaults</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">headers</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">common</span><span style="color:#D8DEE9FF;">[</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Authorization</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9;"> AUTH_TOKEN</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h3 id="配置优先顺序" tabindex="-1"><a class="header-anchor" href="#配置优先顺序"><span>配置优先顺序</span></a></h3><p>Config 将以优先顺序合并。顺序是在 <a href="https://github.com/axios/axios/blob/master/lib/defaults.js#L28" target="_blank" rel="noopener noreferrer">lib/defaults.js</a> 中找到的库默认值，然后是实例的 <code>defaults</code> 属性，以及 最后是请求的 <code>config</code> 参数。后者将优先于前者。这是一个例子。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Create an instance using the config defaults provided by the library</span></span>
<span class="line"><span style="color:#616E88;">// At this point the timeout config value is \`0\` as is the default for the library</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> instance</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">create</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// Override timeout default for the library</span></span>
<span class="line"><span style="color:#616E88;">// Now all requests using this instance will wait 2.5 seconds before timing out</span></span>
<span class="line"><span style="color:#D8DEE9;">instance</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">defaults</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">timeout</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 2500</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// Override timeout for this request as it&#39;s known to take a long time</span></span>
<span class="line"><span style="color:#D8DEE9;">instance</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/longRequest</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  timeout</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 5000</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拦截器" tabindex="-1"><a class="header-anchor" href="#拦截器"><span>拦截器</span></a></h2><p>您可以先拦截请求或响应，然后再由 <code>then</code> 或 <code>catch</code> 处理。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// Add a request interceptor</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">interceptors</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">use</span><span style="color:#D8DEE9FF;">(</span></span>
<span class="line"><span style="color:#81A1C1;">  function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">config</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Do something before request is sent</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> config</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#81A1C1;">  function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Do something with request error</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#8FBCBB;"> Promise</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">reject</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// Add a response interceptor</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">interceptors</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">use</span><span style="color:#D8DEE9FF;">(</span></span>
<span class="line"><span style="color:#81A1C1;">  function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Any status code that lie within the range of 2xx cause this function to trigger</span></span>
<span class="line"><span style="color:#616E88;">    // Do something with response data</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> response</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#81A1C1;">  function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Any status codes that falls outside the range of 2xx cause this function to trigger</span></span>
<span class="line"><span style="color:#616E88;">    // Do something with response error</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#8FBCBB;"> Promise</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">reject</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以在以后需要时删除拦截器。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> myInterceptor</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">interceptors</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">use</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> ()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">  /*...*/</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">interceptors</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">eject</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">myInterceptor</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>您可以将拦截器添加到 axios 的自定义实例中。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> instance</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">create</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">instance</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">interceptors</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">use</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> ()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">  /*...*/</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h2 id="处理错误" tabindex="-1"><a class="header-anchor" href="#处理错误"><span>处理错误</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">    // The request was made and the server responded with a status code</span></span>
<span class="line"><span style="color:#616E88;">    // that falls out of the range of 2xx</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">data</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">status</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">headers</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#616E88;">    // The request was made but no response was received</span></span>
<span class="line"><span style="color:#616E88;">    // \`error.request\` is an instance of XMLHttpRequest in the browser and an instance of</span></span>
<span class="line"><span style="color:#616E88;">    // http.ClientRequest in node.js</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // Something happened in setting up the request that triggered an Error</span></span>
<span class="line"><span style="color:#D8DEE9;">    console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Error</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">message</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">config</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>validateStatus</code> 配置选项，您可以定义应该抛出错误的 HTTP 代码。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  validateStatus</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">status</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> status</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#B48EAD;"> 500</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // Resolve only if the status code is less than 500</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>使用 <code>toJSON</code>，您将获得一个对象，其中包含有关 HTTP 错误的更多信息。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">  console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">error</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">toJSON</span><span style="color:#D8DEE9FF;">())</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h2 id="取消" tabindex="-1"><a class="header-anchor" href="#取消"><span>取消</span></a></h2><p>您可以使用<em>取消令牌</em>取消请求。</p><blockquote><p>axios 取消令牌 API 是基于撤消的 <a href="https://github.com/tc39/proposal-cancelable-promises" target="_blank" rel="noopener noreferrer">可取消承诺提案</a>.</p></blockquote><p>您可以使用 <code>CancelToken.source</code> 工厂函数创建一个取消令牌，如下所示:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> CancelToken</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">CancelToken</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> source</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> CancelToken</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">source</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">    cancelToken</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> source</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">token</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span></span>
<span class="line"><span style="color:#ECEFF4;">  .</span><span style="color:#88C0D0;">catch</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">thrown</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">isCancel</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">thrown</span><span style="color:#D8DEE9FF;">)) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">      console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Request canceled</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> thrown</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">message</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span><span style="color:#81A1C1;"> else</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">      // handle error</span></span>
<span class="line"><span style="color:#ECEFF4;">    }</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">post</span><span style="color:#D8DEE9FF;">(</span></span>
<span class="line"><span style="color:#ECEFF4;">  &quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  {</span></span>
<span class="line"><span style="color:#88C0D0;">    name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">new name</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#ECEFF4;">  {</span></span>
<span class="line"><span style="color:#88C0D0;">    cancelToken</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> source</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">token</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// cancel the request (the message parameter is optional)</span></span>
<span class="line"><span style="color:#D8DEE9;">source</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">cancel</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Operation canceled by the user.</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您还可以通过将执行程序函数传递给 <code>CancelToken</code> 构造函数来创建取消令牌:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> CancelToken</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">CancelToken</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> cancel</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/user/12345</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  cancelToken</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> CancelToken</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> executor</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">c</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#616E88;">    // An executor function receives a cancel function as a parameter</span></span>
<span class="line"><span style="color:#D8DEE9;">    cancel</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> c</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// cancel the request</span></span>
<span class="line"><span style="color:#88C0D0;">cancel</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>您可以使用相同的取消令牌取消多个请求。</p></div><h2 id="using-application-x-www-form-urlencoded-format" tabindex="-1"><a class="header-anchor" href="#using-application-x-www-form-urlencoded-format"><span>Using application/x-www-form-urlencoded format</span></a></h2><p>默认情况下，axios 将 JavaScript 对象序列化为 <code>JSON</code>。要改为以 <code>application/x-www-form-urlencoded</code> 格式发送数据，可以使用以下选项之一。</p><h3 id="浏览器" tabindex="-1"><a class="header-anchor" href="#浏览器"><span>浏览器</span></a></h3><p>在浏览器中，您可以按以下方式使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams" target="_blank" rel="noopener noreferrer"><code>URLSearchParams</code></a> API:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> params</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> URLSearchParams</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">params</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">append</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">param1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">value1</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">params</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">append</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">param2</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">value2</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">post</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/foo</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> params</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h3 id="node-js" tabindex="-1"><a class="header-anchor" href="#node-js"><span>Node.js</span></a></h3><h4 id="query-string" tabindex="-1"><a class="header-anchor" href="#query-string"><span>Query string</span></a></h4><p>在 Node.js 中，您可以按照如下方式使用 <a href="https://nodejs.org/api/querystring.html" target="_blank" rel="noopener noreferrer"><code>querystring</code></a> 模块:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> querystring</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> require</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">querystring</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">post</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">http://something.com/</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> querystring</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">stringify</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> foo</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">bar</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>您也可以使用 <a href="https://github.com/ljharb/qs" target="_blank" rel="noopener noreferrer"><code>qs</code></a> 库.</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果需要对嵌套对象进行字符串化处理，则最好使用 qs 库，因为 <code>querystring</code> 方法在该用例中存在已知问题(<a href="https://github.com/nodejs/node-v0.x-archive/issues/1665" target="_blank" rel="noopener noreferrer">https://github.com/nodejs/node-v0.x-archive/issues/1665</a>)</p></div><h4 id="表格数据" tabindex="-1"><a class="header-anchor" href="#表格数据"><span>表格数据</span></a></h4><p>在 Node.js 中，您可以使用 <a href="https://github.com/form-data/form-data" target="_blank" rel="noopener noreferrer"><code>form-data</code></a> 库，如下所示:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> FormData</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> require</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">form-data</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> form</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> FormData</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">form</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">append</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">my_field</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">my value</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">form</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">append</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">my_buffer</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> Buffer</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">10</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">form</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">append</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">my_file</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> fs</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">createReadStream</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/foo/bar.jpg</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">))</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">post</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">https://example.com</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> form</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;"> headers</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> form</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getHeaders</span><span style="color:#D8DEE9FF;">() </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>或者，使用拦截器:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">axios</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">interceptors</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">request</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">use</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">config</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">config</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">data</span><span style="color:#81A1C1;"> instanceof</span><span style="color:#D8DEE9FF;"> FormData) </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9;">    Object</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">assign</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">config</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">headers</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> config</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">data</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getHeaders</span><span style="color:#D8DEE9FF;">())</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#D8DEE9;"> config</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div>`,92))])}const F=a(r,[["render",c],["__file","axois.html.vue"]]),d=JSON.parse('{"path":"/code/node-js/package/axois.html","title":"axios","lang":"zh-CN","frontmatter":{"date":"2020-12-27T00:00:00.000Z","title":"axios","category":"Node.js","tag":["Node.js"],"description":"GitHub 地址: https://github.com/axios/axios axois 是一个基于 Promise 的 HTTP 客户端，用于浏览器和 node.js","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/node-js/package/axois.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"axios"}],["meta",{"property":"og:description","content":"GitHub 地址: https://github.com/axios/axios axois 是一个基于 Promise 的 HTTP 客户端，用于浏览器和 node.js"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T17:47:26.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"Node.js"}],["meta",{"property":"article:published_time","content":"2020-12-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T17:47:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"axios\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-12-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T17:47:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":"axios(config)","slug":"axios-config","link":"#axios-config","children":[]},{"level":3,"title":"axios(url[, config])","slug":"axios-url-config","link":"#axios-url-config","children":[]},{"level":3,"title":"请求别名","slug":"请求别名","link":"#请求别名","children":[]},{"level":3,"title":"并发","slug":"并发","link":"#并发","children":[]},{"level":3,"title":"创建实例","slug":"创建实例","link":"#创建实例","children":[]},{"level":3,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[]}]},{"level":2,"title":"请求配置","slug":"请求配置","link":"#请求配置","children":[]},{"level":2,"title":"相应模式","slug":"相应模式","link":"#相应模式","children":[]},{"level":2,"title":"配置默认值","slug":"配置默认值","link":"#配置默认值","children":[{"level":3,"title":"全局 axios 默认值","slug":"全局-axios-默认值","link":"#全局-axios-默认值","children":[]},{"level":3,"title":"自定义实例默认值","slug":"自定义实例默认值","link":"#自定义实例默认值","children":[]},{"level":3,"title":"配置优先顺序","slug":"配置优先顺序","link":"#配置优先顺序","children":[]}]},{"level":2,"title":"拦截器","slug":"拦截器","link":"#拦截器","children":[]},{"level":2,"title":"处理错误","slug":"处理错误","link":"#处理错误","children":[]},{"level":2,"title":"取消","slug":"取消","link":"#取消","children":[]},{"level":2,"title":"Using application/x-www-form-urlencoded format","slug":"using-application-x-www-form-urlencoded-format","link":"#using-application-x-www-form-urlencoded-format","children":[{"level":3,"title":"浏览器","slug":"浏览器","link":"#浏览器","children":[]},{"level":3,"title":"Node.js","slug":"node-js","link":"#node-js","children":[]}]}],"git":{"createdTime":1591204114000,"updatedTime":1706204846000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":5},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":9.56,"words":2867},"filePathRelative":"code/node-js/package/axois.md","localizedDate":"2020年12月27日","excerpt":"<blockquote>\\n<p>GitHub 地址: <a href=\\"https://github.com/axios/axios\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/axios/axios</a></p>\\n</blockquote>\\n<p>axois 是一个基于 Promise 的 HTTP 客户端，用于浏览器和 node.js</p>\\n","autoDesc":true}');export{F as comp,d as data};
