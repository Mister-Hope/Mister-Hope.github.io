import{_ as l,X as u,Y as d,$ as n,a0 as a,Z as s,a1 as r,a2 as c,a3 as t,C as p}from"./framework-a91f7991.js";const k={},h=t(`<h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><p>Object object</p><p>以下是常用参数:</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>Object</td><td>页面的初始数据</td></tr><tr><td>onLoad</td><td>function</td><td>生命周期回调—监听页面加载</td></tr><tr><td>onShow</td><td>function</td><td>生命周期回调—监听页面显示</td></tr><tr><td>onReady</td><td>function</td><td>生命周期回调—监听页面初次渲染完成</td></tr><tr><td>onHide</td><td>function</td><td>生命周期回调—监听页面隐藏</td></tr><tr><td>onUnload</td><td>function</td><td>生命周期回调—监听页面卸载</td></tr><tr><td>onShareAppMessage</td><td>function</td><td>用户点击右上角转发</td></tr><tr><td>onShareTimeline</td><td>function</td><td>用户点击右上角转发到朋友圈</td></tr><tr><td>onAddToFavorites</td><td>function</td><td>用户点击右上角收藏</td></tr></tbody></table><p>以下是较少用到的参数:</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>onPullDownRefresh</td><td>function</td><td>监听用户下拉动作</td></tr><tr><td>onReachBottom</td><td>function</td><td>页面上拉触底事件的处理函数</td></tr><tr><td>onPageScroll</td><td>function</td><td>页面滚动触发事件的处理函数</td></tr><tr><td>onResize</td><td>function</td><td>页面尺寸改变时触发，详见 响应显示区域变化</td></tr><tr><td>onTabItemTap</td><td>function</td><td>当前是 tab 页时，点击 tab 时触发</td></tr><tr><td>其他</td><td>any</td><td>开发者可以添加任意的函数或数据到 Object 参数中，在页面的函数中用 <code>this</code> 可以访问</td></tr></tbody></table><p>示例代码:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;This is page data.&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do some initialize when page load.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page ready.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page show.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page hide.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page close.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when pull down.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page reach bottom.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// return custom share data when user share.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page scroll</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something when page resize</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onTabItemTap</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Event handler.</span>
  <span class="token function">viewTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Set some data for updating view.&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// this is setData callback</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">customData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">hi</span><span class="token operator">:</span> <span class="token string">&quot;MINA&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><p><code>data</code> 是页面第一次渲染使用的初始数据。</p><p>页面加载时，<code>data</code> 将会以 JSON 字符串的形式由逻辑层传至渲染层，因此 <code>data</code> 中的数据必须是可以转成 JSON 的类型 (即不能包含函数或 <code>Set</code>、<code>Symbol</code> 等)。</p><p>渲染层可以通过 WXML 对数据进行绑定。</p><p>示例代码:</p>`,13),v={href:"https://developers.weixin.qq.com/s/2PeBsKmn6EZ9",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{array[0].msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;init data&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">array</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="生命周期回调函数" tabindex="-1"><a class="header-anchor" href="#生命周期回调函数" aria-hidden="true">#</a> 生命周期回调函数</h3>`,3),m=t('<h4 id="onload-object-query" tabindex="-1"><a class="header-anchor" href="#onload-object-query" aria-hidden="true">#</a> onLoad(Object query)</h4><p>页面加载时触发。一个页面只会调用一次，可以在 <code>onLoad</code> 的参数中获取打开当前页面路径中的参数。</p><p>参数:</p><table><thead><tr><th>名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>query</td><td>Object</td><td>打开当前页面路径中的参数</td></tr></tbody></table><h4 id="onshow" tabindex="-1"><a class="header-anchor" href="#onshow" aria-hidden="true">#</a> onShow()</h4><p>页面显示/切入前台时触发。</p><h4 id="onready" tabindex="-1"><a class="header-anchor" href="#onready" aria-hidden="true">#</a> onReady()</h4><p>页面初次渲染完成时触发。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。</p>',8),g={class:"hint-container warning"},f=n("p",{class:"hint-container-title"},"注意",-1),y=n("code",null,"wx.setNavigationBarTitle",-1),w=n("code",null,"onReady",-1),x=t(`<h4 id="onhide" tabindex="-1"><a class="header-anchor" href="#onhide" aria-hidden="true">#</a> onHide()</h4><p>页面隐藏/切入后台时触发。如 <code>wx.navigateTo</code> 或底部 tab 切换到其他页面，小程序切入后台等。</p><h4 id="onunload" tabindex="-1"><a class="header-anchor" href="#onunload" aria-hidden="true">#</a> onUnload()</h4><p>页面卸载时触发。如 <code>wx.redirectTo</code> 或 <code>wx.navigateBack</code> 到其他页面时。</p><h3 id="页面事件处理函数" tabindex="-1"><a class="header-anchor" href="#页面事件处理函数" aria-hidden="true">#</a> 页面事件处理函数</h3><h4 id="onpagescroll-object-object" tabindex="-1"><a class="header-anchor" href="#onpagescroll-object-object" aria-hidden="true">#</a> onPageScroll(Object object)</h4><p>监听用户滑动页面事件。</p><p>参数 Object object:</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>scrollTop</td><td>Number</td><td>页面在垂直方向已滚动的距离(单位 px)</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>请只在需要的时候才在 page 中定义此方法，不要定义空方法。以减少不必要的事件派发对渲染层-逻辑层通信的影响。注意: 请避免在 onPageScroll 中过于频繁的执行 setData 等引起逻辑层-渲染层通信的操作。尤其是每次传输大量数据，会影响通信耗时。</p></div><h4 id="onaddtofavorites-object-object" tabindex="-1"><a class="header-anchor" href="#onaddtofavorites-object-object" aria-hidden="true">#</a> onAddToFavorites(Object object)</h4><blockquote><p>本接口为 Beta 版本，安卓 7.0.15 版本起支持，暂只在安卓平台支持</p></blockquote><p>监听用户点击右上角菜单“收藏”按钮的行为，并自定义收藏内容。</p><p>参数 Object object:</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>webviewUrl</td><td>String</td><td>页面中包含 <code>&lt;web-view&gt;</code> 组件时，返回当前 <code>&lt;web-view&gt;</code> 的 url</td></tr></tbody></table><p>此事件处理函数需要 return 一个 Object，用于自定义收藏内容:</p><table><thead><tr><th>字段</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>自定义标题</td><td>页面标题或账号名称</td></tr><tr><td>imageUrl</td><td>自定义图片，显示图片长宽比为 1:1</td><td>页面截图</td></tr><tr><td>query</td><td>自定义 query 字段</td><td>当前页面的 query</td></tr></tbody></table><p>示例代码:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">onAddToFavorites</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// webview 页面返回 webviewUrl</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;WebviewUrl: &quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>webviewUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;自定义标题&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">imageUrl</span><span class="token operator">:</span> <span class="token string">&quot;http://demo.png&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token string">&quot;name=xxx&amp;age=xxx&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="onshareappmessage-object-object" tabindex="-1"><a class="header-anchor" href="#onshareappmessage-object-object" aria-hidden="true">#</a> onShareAppMessage(Object object)</h4><p>监听用户点击页面内转发按钮(<code>&lt;button&gt;</code> 组件 <code>open-type=&quot;share&quot;</code>)或右上角菜单“转发”按钮的行为，并自定义转发内容。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只有定义了此事件处理函数，右上角菜单才会显示“转发”按钮</p></div><p>参数 Object object:</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th><th>最低版本</th></tr></thead><tbody><tr><td>from</td><td>String</td><td>转发事件来源。<br>button: 页面内转发按钮； <br> menu: 右上角转发菜单</td><td>1.2.4</td></tr><tr><td>target</td><td>Object</td><td>如果 from 值是 button，则 target 是触发这次转发事件的 button，否则为 <code>undefined</code></td><td>1.2.4</td></tr><tr><td>webViewUrl</td><td>String</td><td>页面中包含 <code>&lt;web-view&gt;</code> 组件时，返回当前 <code>&lt;web-view&gt;</code> 的 <code>url</code></td><td>1.6.4</td></tr></tbody></table><p>事件处理函数需要 return 一个 <code>Object</code>,用于自定义转发内容，返回内容如下:</p><h4 id="自定义转发内容" tabindex="-1"><a class="header-anchor" href="#自定义转发内容" aria-hidden="true">#</a> 自定义转发内容</h4><table><thead><tr><th>字段</th><th>说明</th><th>默认值</th><th>最低版本</th></tr></thead><tbody><tr><td>title</td><td>转发标题</td><td>当前小程序名称</td><td></td></tr><tr><td>path</td><td>转发路径</td><td>当前页面 <code>path</code> ，必须是以 <code>/</code> 开头的完整路径</td><td></td></tr><tr><td>imageUrl</td><td>自定义图片路径，可以是本地文件路径、代码包文件路径或者网络图片路径。<br>支持 PNG 及 JPG。显示图片长宽比是 5:4。</td><td>使用默认截图</td><td>1.5.0</td></tr></tbody></table><p>示例代码:</p>`,28),q={href:"https://developers.weixin.qq.com/s/mffqUKmr6fZU",target:"_blank",rel:"noopener noreferrer"},j=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>from <span class="token operator">===</span> <span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
      <span class="token comment">// 来自页面内转发按钮</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;自定义转发标题&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/page/user?id=123&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="onsharetimeline" tabindex="-1"><a class="header-anchor" href="#onsharetimeline" aria-hidden="true">#</a> onShareTimeline()</h4><blockquote><p>基础库 2.11.3 开始支持</p><p>本接口为 Beta 版本，暂只在 Android 平台支持，详见分享到朋友圈 (Beta)</p></blockquote><p>监听右上角菜单“分享到朋友圈”按钮的行为，并自定义分享内容。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只有定义了此事件处理函数，右上角菜单才会显示“分享到朋友圈”按钮。</p></div><h5 id="自定义转发内容-1" tabindex="-1"><a class="header-anchor" href="#自定义转发内容-1" aria-hidden="true">#</a> 自定义转发内容</h5><p>事件处理函数返回一个 Object，用于自定义分享内容，不支持自定义页面路径，返回内容如下:</p><table><thead><tr><th>字段</th><th>说明</th><th>默认值</th><th>最低版本</th></tr></thead><tbody><tr><td>title</td><td>自定义标题，即朋友圈列表页上显示的标题</td><td>当前小程序名称</td><td></td></tr><tr><td>query</td><td>自定义页面路径中携带的参数，如 path?a=1&amp;b=2 的 “?” 后面部分</td><td>当前页面路径携带的参数</td><td></td></tr><tr><td>imageUrl</td><td>自定义图片路径，可以是本地文件或者网络图片。支持 PNG 及 JPG，显示图片长宽比是 1:1。</td><td>默认使用小程序 Logo</td><td></td></tr></tbody></table><h4 id="onpulldownrefresh" tabindex="-1"><a class="header-anchor" href="#onpulldownrefresh" aria-hidden="true">#</a> onPullDownRefresh()</h4><p>监听用户下拉刷新事件。</p>`,10),_={class:"hint-container tip"},P=n("p",{class:"hint-container-title"},"提示",-1),D=n("p",null,[a("需要在 app.json 的 window 选项中或页面配置中开启 "),n("code",null,"enablePullDownRefresh。")],-1),O={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.startPullDownRefresh.html",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"wx.startPullDownRefresh",-1),T={href:"https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.stopPullDownRefresh.html",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"wx.stopPullDownRefresh",-1),I=t(`<h4 id="onreachbottom" tabindex="-1"><a class="header-anchor" href="#onreachbottom" aria-hidden="true">#</a> onReachBottom()</h4><p>监听用户上拉触底事件。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>可以在 app.json 的 window 选项中或页面配置中设置触发距离 <code>onReachBottomDistance</code>。</p><p>在触发距离内滑动期间，本事件只会被触发一次。</p></div><h4 id="onresize-object-object" tabindex="-1"><a class="header-anchor" href="#onresize-object-object" aria-hidden="true">#</a> onResize(Object object)</h4><blockquote><p>基础库 2.4.0 开始支持</p></blockquote><p>小程序屏幕旋转时触发。</p><h4 id="ontabitemtap-object-object" tabindex="-1"><a class="header-anchor" href="#ontabitemtap-object-object" aria-hidden="true">#</a> onTabItemTap(Object object)</h4><p>点击 tab 时触发</p><p>Object 参数说明:</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th><th>最低版本</th></tr></thead><tbody><tr><td>index</td><td>String</td><td>被点击 tabItem 的序号，从 0 开始</td><td>1.9.0</td></tr><tr><td>pagePath</td><td>String</td><td>被点击 tabItem 的页面路径</td><td>1.9.0</td></tr><tr><td>text</td><td>String</td><td>被点击 tabItem 的按钮文字</td><td>1.9.0</td></tr></tbody></table><p>示例代码:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">onTabItemTap</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="组件事件处理函数" tabindex="-1"><a class="header-anchor" href="#组件事件处理函数" aria-hidden="true">#</a> 组件事件处理函数</h3><p><code>Page</code> 中还可以定义组件事件处理函数。在渲染层的组件中加入事件绑定，当事件被触发时，就会执行 <code>Page</code> 中定义的事件处理函数。</p><p>示例代码:</p>`,15),N={href:"https://developers.weixin.qq.com/s/vUf6fKmX64Zn",target:"_blank",rel:"noopener noreferrer"},B=t(`<div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewTap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> click me <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">viewTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;view tap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="page-route" tabindex="-1"><a class="header-anchor" href="#page-route" aria-hidden="true">#</a> Page.route</h3><p>到当前页面的路径，类型为 <code>String</code>。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>route<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Page</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>Object data<span class="token punctuation">,</span> Function callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>setData</code> 函数用于将数据从逻辑层发送到视图层(异步)，同时改变对应的 <code>this.data</code> 的值(同步)。</p><p>参数说明</p><table><thead><tr><th>字段</th><th>类型</th><th>必填</th><th>描述</th><th>最低版本</th></tr></thead><tbody><tr><td>data</td><td>Object</td><td>是</td><td>这次要改变的数据</td><td></td></tr><tr><td>callback</td><td>Function</td><td>否</td><td>setData 引起的界面更新渲染完毕后的回调函数</td><td>1.5.0</td></tr></tbody></table><p><code>Object</code> 以 <code>key: value</code> 的形式表示，将 <code>this.data</code> 中的 <code>key</code> 对应的值改变成 <code>value。</code></p><p>其中 <code>key</code> 可以以数据路径的形式给出，支持改变数组中的某一项或对象的某个属性，如 <code>array[2].message</code>，<code>a.b.c.d</code>，并且不需要在 <code>this.data</code> 中预先定义。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ol><li>直接修改 <code>this.data</code> 而不调用 <code>this.setData</code> 是无法改变页面的状态的，还会造成数据不一致。</li><li>仅支持设置可 JSON 化的数据。</li><li>单次设置的数据不能超过 1024kB，请尽量避免一次设置过多的数据。</li><li>请不要把 <code>data</code> 中任何一项的 <code>value</code> 设为 <code>undefined</code> ，否则这一项将不被设置并可能遗留一些潜在问题。</li></ol></div><p>示例代码:</p>`,12),A={href:"https://developers.weixin.qq.com/s/HofnzKmb6fZe",target:"_blank",rel:"noopener noreferrer"},U=t(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--index.wxml--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeText<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Change normal data <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{num}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeNum<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Change normal num <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{array[0].text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeItemInArray<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Change Array data <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{object.text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeItemInObject<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Change Object data <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{newField.text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addNewField<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Add new data <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;init data&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">array</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;init data&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">object</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;init data&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this.data.text = &#39;changed data&#39; // 不要直接修改 this.data</span>
    <span class="token comment">// 应该使用 setData</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;changed data&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 或者，可以修改 this.data 之后马上用 setData 设置一下修改了的字段</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>num<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeItemInArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 对于对象或数组字段，可以直接修改一个其下的子字段，这样做通常比修改整个对象或数组更好</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string-property property">&quot;array[0].text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;changed data&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeItemInObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string-property property">&quot;object.text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;changed data&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">addNewField</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token string-property property">&quot;newField.text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;new data&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pageobject-getcurrentpages" tabindex="-1"><a class="header-anchor" href="#pageobject-getcurrentpages" aria-hidden="true">#</a> PageObject[] getCurrentPages()</h2><p>获取当前页面栈。数组中第一个元素为首页，最后一个元素为当前页面。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>不要尝试修改页面栈，会导致路由以及页面状态错误。</li><li>不要在 <code>App.onLaunch</code> 的时候调用 <code>getCurrentPages()</code>，此时 <code>page</code> 还没有生成。</li></ul></div>`,5);function L(C,F){const i=p("Badge"),e=p("ExternalLinkIcon"),o=p("RouterLink");return u(),d("div",null,[n("p",null,[a("注册小程序中的一个页面。接受一个 Object 类型参数，其指定页面的初始数据、生命周期回调、事件处理函数等。 "),s(i,{text:"重要",type:"error"})]),r(" more "),h,n("p",null,[n("a",v,[a("在开发者工具中预览效果"),s(e)])]),b,n("p",null,[a("生命周期的触发以及页面的路由方式详见 "),s(o,{to:"/code/mini-app/guide/service/route.html"},{default:c(()=>[a("路由")]),_:1})]),m,n("div",g,[f,n("p",null,[a("对界面内容进行设置的 API 如 "),y,a("，请在 "),w,a(" 之后进行。详见"),s(o,{to:"/code/mini-app/guide/service/lifetime.html"},{default:c(()=>[a("生命周期")]),_:1})])]),x,n("p",null,[n("a",q,[a("在开发者工具中预览效果"),s(e)])]),j,n("div",_,[P,D,n("p",null,[a("可以通过 "),n("a",O,[S,s(e)]),a(" 触发下拉刷新，调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。")]),n("p",null,[a("当处理完数据刷新后，"),n("a",T,[R,s(e)]),a(" 可以停止当前页面的下拉刷新。")])]),I,n("p",null,[n("a",N,[a("在开发者工具中预览效果"),s(e)])]),B,n("p",null,[n("a",A,[a("在开发者工具中预览效果"),s(e)])]),U])}const M=l(k,[["render",L],["__file","page.html.vue"]]);export{M as default};
