import{_ as a}from"./layout-5a3fca24.js";import{_ as e,X as s,Y as r,a3 as t}from"./framework-a91f7991.js";const p="/assets/simple-1f4b56b5.jpg",i="/assets/same-ba7bb4f6.jpg",c="/assets/clear-d343d40e.jpg",h="/assets/with-space-2b272ec7.jpg",d="/assets/center-adjust-d1ee00ac.jpg",n={},o=t('<p>图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。</p><h2 id="简单" tabindex="-1"><a class="header-anchor" href="#简单" aria-hidden="true">#</a> 简单</h2><p>一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。</p><p><img src="'+p+'" alt="简单"></p><p>有时候图标会因为有更多细节而传达了更复杂的意思，这反而是样式问题!</p><h2 id="一致性" tabindex="-1"><a class="header-anchor" href="#一致性" aria-hidden="true">#</a> 一致性</h2><p>在整个图标系统中，您的图标要保持同一种样式来确保图标完美协调。比如同样的形状，填充，描边粗细，尺寸等。要制定好可以被复用的栅格，规范和样式。</p><p><img src="'+i+'" alt="一致性"></p><p>如果可以的话，尽可能重新设计这些图标，而不要混入其他不同风格的图标来使用。</p><h2 id="清晰" tabindex="-1"><a class="header-anchor" href="#清晰" aria-hidden="true">#</a> 清晰</h2><p>设计「完美像素」的图标，特别是在图标非常小的时候。这样图标的描边就可以保持锐利，不会有模糊。注意半像素的情况出现，尽量避免小数点参数。</p><p><img src="'+c+'" alt="清晰"></p><p>这也可以帮您保持图标的辨识度，在您等比缩放他们的时候保持清晰。</p><h2 id="空间" tabindex="-1"><a class="header-anchor" href="#空间" aria-hidden="true">#</a> 空间</h2><p>确保您的图标的所有形状有足够的空间。笔画和空间过于狭小会使图标更难被理解。</p><p><img src="'+h+'" alt="空间"></p><p>最少给 2px 的负空间</p><h2 id="视觉调整" tabindex="-1"><a class="header-anchor" href="#视觉调整" aria-hidden="true">#</a> 视觉调整</h2><p>确保您的图标看起来是正确的，适当的调整元素的对齐来达到视觉上的平衡。</p><p><img src="'+d+'" alt="视觉调整"></p><p>不要只关注参数，如果有需要就用上您的眼睛来衡量，轻微移动这些元素。</p><h2 id="布局规格" tabindex="-1"><a class="header-anchor" href="#布局规格" aria-hidden="true">#</a> 布局规格</h2><p>所有图标保持同样的尺寸，在图标周围定义一个可调整的内边距范围，尽量让元素设计在这个范围内。不要挤满所有元素。</p><p><img src="'+a+'" alt="布局规格"></p><p>当图标需要额外控件时可以超出这个内边距范围。</p>',25),_=[o];function l(m,f){return s(),r("div",null,_)}const g=e(n,[["render",l],["__file","skill.html.vue"]]);export{g as default};
