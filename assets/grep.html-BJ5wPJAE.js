import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as o}from"./app-DBDndcYm.js";const p={},l=o(`<h1 id="grep" tabindex="-1"><a class="header-anchor" href="#grep"><span>grep</span></a></h1><p><code>grep</code> 命令用于文件内容的搜索，返回所有匹配的行。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> pattern</span><span style="color:#A3BE8C;"> filename</span></span></code></pre></div><p>下面是一个例子。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">$</span><span style="color:#A3BE8C;"> grep</span><span style="color:#A3BE8C;"> admin</span><span style="color:#A3BE8C;"> /etc/passwd</span></span>
<span class="line"><span style="color:#88C0D0;">_kadmin_admin:*:218:-2:Kerberos</span><span style="color:#A3BE8C;"> Admin</span><span style="color:#A3BE8C;"> Service:/var/empty:/usr/bin/</span><span style="color:#81A1C1;">false</span></span>
<span class="line"><span style="color:#88C0D0;">_kadmin_changepw:*:219:-2:Kerberos</span><span style="color:#A3BE8C;"> Change</span><span style="color:#A3BE8C;"> Password</span><span style="color:#A3BE8C;"> Service:/var/empty:/usr/bin/</span><span style="color:#81A1C1;">false</span></span>
<span class="line"><span style="color:#88C0D0;">_krb_kadmin:*:231:-2:Open</span><span style="color:#A3BE8C;"> Directory</span><span style="color:#A3BE8C;"> Kerberos</span><span style="color:#A3BE8C;"> Admin</span><span style="color:#A3BE8C;"> Service:/var/empty:/usr/bin/</span><span style="color:#81A1C1;">false</span></span></code></pre></div><p>一般情况下，应该使用 <code>grep -R</code>，递归地找出当前目录下符合 <code>someVar</code> 的文件。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> -FR</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">someVar</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;"> .</span></span></code></pre></div><p>別忘了大小不敏感的参数，因为 grep 默认搜索是大小写敏感的。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> -iR</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">somevar</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;"> .</span></span></code></pre></div><p>也可以用 <code>grep -l</code> 光打印出符合条件的文件名而非文件内容选段。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> -lR</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">somevar</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;"> .</span></span></code></pre></div><p>如果您写的脚本或批处理任务需要上面的输出内容，可以使用 while 和 read 来处理文件名中的空格和其他特殊字符:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> -lR</span><span style="color:#A3BE8C;"> someVar</span><span style="color:#81A1C1;"> |</span><span style="color:#81A1C1;"> while</span><span style="color:#D8DEE9;"> IFS</span><span style="color:#81A1C1;">=</span><span style="color:#88C0D0;"> read</span><span style="color:#A3BE8C;"> -r</span><span style="color:#A3BE8C;"> file</span><span style="color:#81A1C1;">;</span><span style="color:#81A1C1;"> do</span></span>
<span class="line"><span style="color:#88C0D0;">    head</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#D8DEE9;">$file</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#81A1C1;">done</span></span></code></pre></div><p>如果您在您的项目里使用了版本控制软件，它通常会在 .svn， .git， .hg 目录下包含一些元数据。您也可以很容易地用 grep -v 把这些目录移出搜索范围，当然得用 grep -F 指定一个恰当且确定的字符串，即要移除的目录名:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> -R</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">someVar</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;"> .</span><span style="color:#81A1C1;"> |</span><span style="color:#88C0D0;"> grep</span><span style="color:#A3BE8C;"> -vF</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">.svn</span><span style="color:#ECEFF4;">&#39;</span></span></code></pre></div><p>部分版本的 grep 包含了 --exclude 和 --exclude-dir 选项，这看起来更加易读。</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><p><code>-i</code> 参数表示忽略大小写。</p><p><code>-r</code> 表示搜索某个目录下面的所有文件。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">grep</span><span style="color:#A3BE8C;"> -r</span><span style="color:#A3BE8C;"> admin</span><span style="color:#A3BE8C;"> /etc/</span></span></code></pre></div><p><code>-v</code> 过滤包含某个词的行，即 <code>grep</code> 的逆操作。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;"># 显示所有包含 vim，但不包含 grep 的行</span></span>
<span class="line"><span style="color:#88C0D0;">$</span><span style="color:#A3BE8C;"> ps</span><span style="color:#81A1C1;"> |</span><span style="color:#88C0D0;"> grep</span><span style="color:#A3BE8C;"> vim</span><span style="color:#81A1C1;"> |</span><span style="color:#88C0D0;"> grep</span><span style="color:#A3BE8C;"> -v</span><span style="color:#A3BE8C;"> grep</span></span></code></pre></div>`,22),n=[l];function t(r,c){return s(),a("div",null,n)}const h=e(p,[["render",t],["__file","grep.html.vue"]]),y=JSON.parse('{"path":"/linux/bash/archives/commands/grep.html","title":"grep","lang":"zh-CN","frontmatter":{"date":"2020-06-04T00:00:00.000Z","description":"grep grep 命令用于文件内容的搜索，返回所有匹配的行。 下面是一个例子。 一般情况下，应该使用 grep -R，递归地找出当前目录下符合 someVar 的文件。 別忘了大小不敏感的参数，因为 grep 默认搜索是大小写敏感的。 也可以用 grep -l 光打印出符合条件的文件名而非文件内容选段。 如果您写的脚本或批处理任务需要上面的输出内容，...","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/linux/bash/archives/commands/grep.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"grep"}],["meta",{"property":"og:description","content":"grep grep 命令用于文件内容的搜索，返回所有匹配的行。 下面是一个例子。 一般情况下，应该使用 grep -R，递归地找出当前目录下符合 someVar 的文件。 別忘了大小不敏感的参数，因为 grep 默认搜索是大小写敏感的。 也可以用 grep -l 光打印出符合条件的文件名而非文件内容选段。 如果您写的脚本或批处理任务需要上面的输出内容，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-07T05:21:25.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:published_time","content":"2020-06-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-07T05:21:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"grep\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-07T05:21:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1712467285000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":2},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"linux/bash/archives/commands/grep.md","localizedDate":"2020年6月4日","excerpt":"","autoDesc":true}');export{h as comp,y as data};
