import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,e as o,b as p,o as e}from"./app-BGIrljxn.js";const t={};function c(r,s){return e(),a("div",null,[s[0]||(s[0]=l("p",null,"从 ES6 开始，JavaScript 引入了解构赋值，可以同时对一组变量进行赋值。",-1)),o(" more "),s[1]||(s[1]=p(`<p>什么是解构赋值? 我们先看看传统的做法，如何把一个数组的元素分别赋值给几个变量:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> array</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">hello</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">JavaScript</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">ES6</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> array</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">0</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> y</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> array</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">1</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> z</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> array</span><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">2</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>现在，在 ES6 中，可以使用解构赋值，直接对多个变量同时赋值:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">use strict</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 如果浏览器支持解构赋值就不会报错:</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> z</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">hello</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">JavaScript</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">ES6</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// x, y, z分别被赋值为数组对应元素:</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">x = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> +</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">, y = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> y</span><span style="color:#81A1C1;"> +</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">, z = </span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9;"> z</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>注意，对数组元素进行解构赋值时，多个变量要用 <code>[...]</code> 括起来。</p><p>如果数组本身还有嵌套，也可以通过下面的形式进行解构赋值，注意嵌套层次和位置要保持一致:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> z</span><span style="color:#ECEFF4;">]]</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">hello</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">JavaScript</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">ES6</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">]]</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">x</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;hello&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">y</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;JavaScript&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">z</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;ES6&#39;</span></span></code></pre></div><p>解构赋值还可以忽略某些元素:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> [,</span><span style="color:#ECEFF4;"> ,</span><span style="color:#D8DEE9;"> z</span><span style="color:#ECEFF4;">]</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">hello</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">JavaScript</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">ES6</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 忽略前两个元素，只对 z 赋值第三个元素</span></span>
<span class="line"><span style="color:#D8DEE9;">z</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;ES6&#39;</span></span></code></pre></div><p>如果需要从一个对象中取出若干属性，也可以使用解构赋值，便于快速获取对象的指定属性:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">use strict</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">小明</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 20</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  gender</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">male</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  passport</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">G-12345678</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  school</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">No.4 middle school</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> name</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> age</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> passport</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// name, age, passport 分别被赋值为对应属性:</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">\`</span><span style="color:#A3BE8C;">name = </span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">, age = </span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">age</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">, passport = </span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">passport</span><span style="color:#81A1C1;">}</span><span style="color:#ECEFF4;">\`</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对一个对象进行解构赋值时，同样可以直接对嵌套的对象属性进行赋值，只要保证对应的层次是一致的:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">小明</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 20</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  gender</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">male</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  passport</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">G-12345678</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  school</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">No.4 middle school</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  address</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">    city</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Beijing</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">    street</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">No.1 Road</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">    zipcode</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">100001</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9;">  name</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  address</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> city</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> zip</span><span style="color:#ECEFF4;"> },</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;小明&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">city</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;Beijing&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">zip</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // undefined, 因为属性名是 zipcode 而不是 zip</span></span>
<span class="line"><span style="color:#616E88;">// 注意: address 不是变量，而是为了让 city 和 zip 获得嵌套的 address 对象的属性:</span></span>
<span class="line"><span style="color:#D8DEE9;">address</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // Uncaught ReferenceError: address is not defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用解构赋值对对象属性进行赋值时，如果对应的属性不存在，变量将被赋值为 <code>undefined</code>，这和引用一个不存在的属性获得 <code>undefined</code> 是一致的。如果要使用的变量名和属性名不一致，可以用下面的语法获取:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">小明</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 20</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  gender</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">male</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  passport</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">G-12345678</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  school</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">No.4 middle school</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 把 passport 属性赋值给变量 id:</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> name</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> passport</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> id</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;小明&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">id</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;G-12345678&#39;</span></span>
<span class="line"><span style="color:#616E88;">// 注意: passport 不是变量，而是为了让变量 id 获得 passport 属性:</span></span>
<span class="line"><span style="color:#D8DEE9;">passport</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // Uncaught ReferenceError: passport is not defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解构赋值还可以使用默认值，这样就避免了不存在的属性返回 <code>undefined</code> 的问题:</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">小明</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  age</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 20</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  gender</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">male</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  passport</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">G-12345678</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 如果 person 对象没有 single 属性，默认赋值为 true:</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9;"> name</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> single</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> true</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;小明&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">single</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有些时候，如果变量已经被声明了，再次赋值的时候，正确的写法也会报语法错误:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#616E88;">// 声明变量:</span></span>
<span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// 解构赋值:</span></span>
<span class="line"><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;"> name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">小明</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> x</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 100</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> y</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 200</span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// 语法错误: Uncaught SyntaxError: Unexpected token =</span></span></code></pre></div><p>这是因为 JavaScript 引擎把 <code>{</code> 开头的语句当作了块处理，于是 <code>=</code> 不再合法。解决方法是用小括号括起来:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9;"> x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span><span style="color:#88C0D0;"> name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">小明</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> x</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 100</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> y</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 200</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><p>解构赋值在很多时候可以大大简化代码。例如，交换两个变量 x 和 y 的值，可以这么写，不再需要临时变量:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#D8DEE9;">  y</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 2</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9FF;">[</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#D8DEE9FF;">] </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> [</span><span style="color:#D8DEE9;">y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> x</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>快速获取当前页面的域名和路径:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;"> hostname</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> domain</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> pathname</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9;"> path</span><span style="color:#ECEFF4;"> }</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> location</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>如果一个函数接收一个对象作为参数，那么，可以使用解构直接把对象的属性绑定到变量中。例如，下面的函数可以快速创建一个 Date 对象:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> buildDate</span><span style="color:#ECEFF4;">({</span><span style="color:#D8DEE9;"> year</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> month</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> day</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> hour</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> minute</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> second</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;"> })</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#81A1C1;"> new</span><span style="color:#88C0D0;"> Date</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">\`</span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">year</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">-</span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">month</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">-</span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">day</span><span style="color:#81A1C1;">}</span><span style="color:#81A1C1;"> \${</span><span style="color:#D8DEE9;">hour</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">:</span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">minute</span><span style="color:#81A1C1;">}</span><span style="color:#A3BE8C;">:</span><span style="color:#81A1C1;">\${</span><span style="color:#D8DEE9;">second</span><span style="color:#81A1C1;">}</span><span style="color:#ECEFF4;">\`</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre></div><p>它的方便之处在于传入的对象只需要 <code>year</code>、<code>month</code> 和 <code>day</code> 这三个属性:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">buildDate</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> year</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 2017</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> month</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> day</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// Sun Jan 01 2017 00:00:00 GMT+0800 (CST)</span></span></code></pre></div><p>也可以传入 <code>hour</code>、<code>minute</code> 和 <code>second</code> 属性:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">buildDate</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> year</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 2017</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> month</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> day</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> hour</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 20</span><span style="color:#ECEFF4;">,</span><span style="color:#88C0D0;"> minute</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 15</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#616E88;">// Sun Jan 01 2017 20:15:00 GMT+0800 (CST)</span></span></code></pre></div><p>使用解构赋值可以减少代码量，但是，需要在支持 ES6 解构赋值特性的现代浏览器中才能正常运行。目前支持解构赋值的浏览器包括 Chrome，Firefox，Edge 等。</p>`,33))])}const i=n(t,[["render",c],["__file","destructuring.html.vue"]]),F=JSON.parse('{"path":"/code/language/js/function/destructuring.html","title":"解构赋值","lang":"zh-CN","frontmatter":{"title":"解构赋值","icon":"structure","date":"2019-10-03T00:00:00.000Z","category":"JavaScript","description":"从 ES6 开始，JavaScript 引入了解构赋值，可以同时对一组变量进行赋值。","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/js/function/destructuring.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"解构赋值"}],["meta",{"property":"og:description","content":"从 ES6 开始，JavaScript 引入了解构赋值，可以同时对一组变量进行赋值。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:46:58.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:published_time","content":"2019-10-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"解构赋值\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-10-03T00:00:00.000Z\\",\\"dateModified\\":\\"2022-02-06T16:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1644166018000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":4}]},"readingTime":{"minutes":3.75,"words":1125},"filePathRelative":"code/language/js/function/destructuring.md","localizedDate":"2019年10月3日","excerpt":"<p>从 ES6 开始，JavaScript 引入了解构赋值，可以同时对一组变量进行赋值。</p>\\n","autoDesc":true}');export{i as comp,F as data};
