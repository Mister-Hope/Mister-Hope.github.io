import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as a,e as p,b as e,o as l}from"./app-BMeR4ubx.js";const t={};function r(c,s){return l(),n("div",null,[s[0]||(s[0]=a("p",null,"高阶函数英文叫 Higher-order function。",-1)),s[1]||(s[1]=a("p",null,"JavaScript 的函数其实都指向某个变量。既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。",-1)),p(" more "),s[2]||(s[2]=e(`<p>一个最简单的高阶函数:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">const</span><span style="color:#88C0D0;"> add</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">+</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>或者写作</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">function</span><span style="color:#88C0D0;"> add</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">  return</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">+</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre></div><p>当我们调用 <code>add(-5, 6, Math.abs)</code> 时，参数 <code>x</code>，<code>y</code> 和 <code>f</code> 分别接收 <code>-5</code>，<code>6</code> 和函数 <code>Math.abs</code>，根据函数定义，我们可以推导计算过程为:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">x</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;">5</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">y</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 6</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">f</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> Math</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">abs</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#88C0D0;">f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">+</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">==&gt;</span><span style="color:#D8DEE9;"> Math</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">abs</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">5</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9;"> Math</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">abs</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">6</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">==&gt;</span><span style="color:#B48EAD;"> 11</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">return</span><span style="color:#B48EAD;"> 11</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>用代码验证一下:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">use strict</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#88C0D0;"> add</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9;">x</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> y</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> f</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> =&gt;</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">+</span><span style="color:#88C0D0;"> f</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">y</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9;"> x</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> add</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">5</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 6</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9;"> Math</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">abs</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">x</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 11</span></span></code></pre></div><p>编写高阶函数，就是让函数的参数能够接收别的函数。</p>`,9))])}const i=o(t,[["render",r],["__file","higher-order-function.html.vue"]]),D=JSON.parse('{"path":"/code/language/js/function/higher-order-function.html","title":"高阶函数","lang":"zh-CN","frontmatter":{"title":"高阶函数","icon":"advance","date":"2019-10-05T00:00:00.000Z","category":"JavaScript","description":"高阶函数英文叫 Higher-order function。 JavaScript 的函数其实都指向某个变量。既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/js/function/higher-order-function.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"高阶函数"}],["meta",{"property":"og:description","content":"高阶函数英文叫 Higher-order function。 JavaScript 的函数其实都指向某个变量。既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:46:58.000Z"}],["meta",{"property":"article:published_time","content":"2019-10-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高阶函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-10-05T00:00:00.000Z\\",\\"dateModified\\":\\"2022-02-06T16:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[],"git":{"createdTime":1591204114000,"updatedTime":1644166018000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":3}]},"readingTime":{"minutes":0.79,"words":236},"filePathRelative":"code/language/js/function/higher-order-function.md","localizedDate":"2019年10月5日","excerpt":"<p>高阶函数英文叫 Higher-order function。</p>\\n<p>JavaScript 的函数其实都指向某个变量。既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。</p>\\n","autoDesc":true}');export{i as comp,D as data};
