import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as e,e as o,b as l,o as p}from"./app-BMeR4ubx.js";const t={};function r(c,s){return p(),n("div",null,[s[0]||(s[0]=e("p",null,"任意值(Any)用来表示允许赋值为任意类型。",-1)),o(" more "),s[1]||(s[1]=l(`<h2 id="什么是任意值类型" tabindex="-1"><a class="header-anchor" href="#什么是任意值类型"><span>什么是任意值类型</span></a></h2><p>如果是一个普通类型，在赋值过程中改变类型是不被允许的:</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> myFavoriteNumber</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">seven</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">myFavoriteNumber</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 7</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#616E88;">// index.ts(2,1): error TS2322: Type &#39;number&#39; is not assignable to type &#39;string&#39;.</span></span></code></pre></div><p>但如果是 <code>any</code> 类型，则允许被赋值为任意类型。</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> myFavoriteNumber</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">seven</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">myFavoriteNumber</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 7</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h2 id="任意值的属性和方法" tabindex="-1"><a class="header-anchor" href="#任意值的属性和方法"><span>任意值的属性和方法</span></a></h2><p>在任意值上访问任何属性都是允许的:</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> anyThing</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">hello</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">anyThing</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myName</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">console</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">log</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">anyThing</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myName</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">firstName</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>也允许调用任何方法:</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> anyThing</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Tom</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">anyThing</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setName</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Jerry</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">anyThing</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setName</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Jerry</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">sayHello</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">anyThing</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">myName</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setFirstName</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Cat</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>可以认为，<strong>声明一个变量为任意值之后，对它的任何操作，返回的内容的类型都是任意值</strong>。</p><h2 id="未声明类型的变量" tabindex="-1"><a class="header-anchor" href="#未声明类型的变量"><span>未声明类型的变量</span></a></h2><p><strong>变量如果在声明的时候，未指定其类型，那么它会被识别为任意值类型</strong>:</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> something</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">something</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">seven</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">something</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 7</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">something</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setName</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Tom</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>等价于</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> something</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> any</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">something</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">seven</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9;">something</span><span style="color:#81A1C1;"> =</span><span style="color:#B48EAD;"> 7</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8DEE9;">something</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setName</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">Tom</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="http://www.typescriptlang.org/docs/handbook/basic-types.html#any" target="_blank" rel="noopener noreferrer">Basic Types # Any</a>(<a href="https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Basic%20Types.html#%E4%BB%BB%E6%84%8F%E5%80%BC" target="_blank" rel="noopener noreferrer">中文版</a>)</li></ul>`,18))])}const E=a(t,[["render",r],["__file","any.html.vue"]]),d=JSON.parse('{"path":"/code/language/typescript/basics/any.html","title":"任意值","lang":"zh-CN","frontmatter":{"date":"2020-05-04T00:00:00.000Z","title":"任意值","icon":"any","category":"TypeScript","description":"任意值(Any)用来表示允许赋值为任意类型。","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/typescript/basics/any.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"任意值"}],["meta",{"property":"og:description","content":"任意值(Any)用来表示允许赋值为任意类型。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T17:47:26.000Z"}],["meta",{"property":"article:published_time","content":"2020-05-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T17:47:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"任意值\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T17:47:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"什么是任意值类型","slug":"什么是任意值类型","link":"#什么是任意值类型","children":[]},{"level":2,"title":"任意值的属性和方法","slug":"任意值的属性和方法","link":"#任意值的属性和方法","children":[]},{"level":2,"title":"未声明类型的变量","slug":"未声明类型的变量","link":"#未声明类型的变量","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1706204846000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1},{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":1}]},"readingTime":{"minutes":0.93,"words":279},"filePathRelative":"code/language/typescript/basics/any.md","localizedDate":"2020年5月4日","excerpt":"<p>任意值(Any)用来表示允许赋值为任意类型。</p>\\n","autoDesc":true}');export{E as comp,d as data};
