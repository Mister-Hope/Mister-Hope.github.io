const e=JSON.parse('{"key":"v-d4970868","path":"/code/language/js/es6/iterator.html","title":"Iterator 和 for...of 循环","lang":"zh-CN","frontmatter":{"icon":"loop","author":"阮一峰","date":"2019-10-23T00:00:00.000Z","category":"JavaScript","copyright":"此部分博客采用 <a href=\\"http://creativecommons.org/licenses/by-nc/4.0/\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">“保持署名—非商用”创意共享4.0许可证</a>","description":"Iterator(遍历器)的概念 JavaScript 原有的表示“集合”的数据结构，主要是数组(Array)和对象(Object)，ES6 又添加了 Map 和 Set。这样就有了四种数据集合，用户还可以组合使用它们，定义自己的数据结构，比如数组的成员是 Map，`Map 的成员是对象。这样就需要一种统一的接口机制，来处理所有不同的数据结构。 遍历器...","head":[["meta",{"property":"og:url","content":"https://mrhope.site/code/language/js/es6/iterator.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"Iterator 和 for...of 循环"}],["meta",{"property":"og:description","content":"Iterator(遍历器)的概念 JavaScript 原有的表示“集合”的数据结构，主要是数组(Array)和对象(Object)，ES6 又添加了 Map 和 Set。这样就有了四种数据集合，用户还可以组合使用它们，定义自己的数据结构，比如数组的成员是 Map，`Map 的成员是对象。这样就需要一种统一的接口机制，来处理所有不同的数据结构。 遍历器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-02-12T05:50:30.000Z"}],["meta",{"property":"article:author","content":"阮一峰"}],["meta",{"property":"article:published_time","content":"2019-10-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-12T05:50:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Iterator 和 for...of 循环\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-10-23T00:00:00.000Z\\",\\"dateModified\\":\\"2022-02-12T05:50:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"阮一峰\\"}]}"]]},"headers":[{"level":2,"title":"Iterator(遍历器)的概念","slug":"iterator-遍历器-的概念","link":"#iterator-遍历器-的概念","children":[]},{"level":2,"title":"默认 Iterator 接口","slug":"默认-iterator-接口","link":"#默认-iterator-接口","children":[]},{"level":2,"title":"调用 Iterator 接口的场合","slug":"调用-iterator-接口的场合","link":"#调用-iterator-接口的场合","children":[]},{"level":2,"title":"字符串的 Iterator 接口","slug":"字符串的-iterator-接口","link":"#字符串的-iterator-接口","children":[]},{"level":2,"title":"Iterator 接口与 Generator 函数","slug":"iterator-接口与-generator-函数","link":"#iterator-接口与-generator-函数","children":[]},{"level":2,"title":"遍历器对象的 return()，throw()","slug":"遍历器对象的-return-throw","link":"#遍历器对象的-return-throw","children":[]},{"level":2,"title":"for...of 循环","slug":"for-of-循环","link":"#for-of-循环","children":[{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":3,"title":"Set 和 Map 结构","slug":"set-和-map-结构","link":"#set-和-map-结构","children":[]},{"level":3,"title":"计算生成的数据结构","slug":"计算生成的数据结构","link":"#计算生成的数据结构","children":[]},{"level":3,"title":"类似数组的对象","slug":"类似数组的对象","link":"#类似数组的对象","children":[]},{"level":3,"title":"对象","slug":"对象","link":"#对象","children":[]},{"level":3,"title":"与其他遍历语法的比较","slug":"与其他遍历语法的比较","link":"#与其他遍历语法的比较","children":[]}]}],"git":{"createdTime":1591204114000,"updatedTime":1644645030000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":6}]},"readingTime":{"minutes":18.4,"words":5519},"filePathRelative":"code/language/js/es6/iterator.md","localizedDate":"2019年10月23日","excerpt":"","autoDesc":true}');export{e as data};
