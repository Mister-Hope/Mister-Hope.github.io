import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,b as s}from"./app-C_Kj0afX.js";const p={},n=s(`<h1 id="命名管道" tabindex="-1"><a class="header-anchor" href="#命名管道"><span>命名管道</span></a></h1><p>在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。</p><p>命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西:</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>process1 <span class="token operator">&gt;</span> named_pipe
</code></pre></div><p>和</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>process2 <span class="token operator">&lt;</span> named_pipe
</code></pre></div><p>表现出来就像这样:</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>process1 <span class="token operator">|</span> process2
</code></pre></div><h2 id="设置一个命名管道" tabindex="-1"><a class="header-anchor" href="#设置一个命名管道"><span>设置一个命名管道</span></a></h2><p>使用 mkfifo 命令能够创建命令管道:</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">mkfifo</span> pipe1
$ <span class="token function">ls</span> <span class="token parameter variable">-l</span> pipe1
prw-r--r-- <span class="token number">1</span> me me <span class="token number">0</span> <span class="token number">2009</span>-07-17 06:41 pipe1
</code></pre></div><p>这里我们使用 mkfifo 创建了一个名为 pipe1 的命名管道。使用 ls 命令，我们查看这个文件， 看到位于属性字段的第一个字母是 “p”，表明它是一个命名管道。</p><h2 id="使用命名管道" tabindex="-1"><a class="header-anchor" href="#使用命名管道"><span>使用命名管道</span></a></h2><p>为了演示命名管道是如何工作的，我们将需要两个终端窗口(或用两个虚拟控制台代替)。在第一个终端中，我们输入一个简单命令，并把命令的输出重定向到命名管道:</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">&gt;</span> pipe1
</code></pre></div><p>我们按下 Enter 按键之后，命令将会挂起。这是因为在管道的另一端没有任何接受数据。当这种现象发生的时候， 据说是管道阻塞了。一旦我们绑定一个进程到管道的另一端，该进程开始从管道中读取输入的时候，这种情况会消失。使用第二个终端窗口，我们输入这个命令。</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&lt;</span> pipe1
</code></pre></div><p>然后产自第一个终端窗口的目录列表出现在第二个终端中，并作为来自 cat 命令的输出。在第一个终端 窗口中的 ls 命令一旦它不再阻塞，会成功地结束。</p>`,18),o=[n];function r(i,l){return a(),t("div",null,o)}const h=e(p,[["render",r],["__file","named-pipe.html.vue"]]),m=JSON.parse('{"path":"/linux/bash/archives/named-pipe.html","title":"命名管道","lang":"zh-CN","frontmatter":{"description":"命名管道 在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。 命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西: 和 表现出来就像...","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/linux/bash/archives/named-pipe.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"命名管道"}],["meta",{"property":"og:description","content":"命名管道 在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。 命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西: 和 表现出来就像..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2020-11-06T18:10:03.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2020-11-06T18:10:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命名管道\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2020-11-06T18:10:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]],"date":"2020-06-03T17:08:34.000Z"},"headers":[{"level":2,"title":"设置一个命名管道","slug":"设置一个命名管道","link":"#设置一个命名管道","children":[]},{"level":2,"title":"使用命名管道","slug":"使用命名管道","link":"#使用命名管道","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1604686203000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":3}]},"readingTime":{"minutes":1.7,"words":509},"filePathRelative":"linux/bash/archives/named-pipe.md","localizedDate":"2020年6月3日","excerpt":"","autoDesc":true}');export{h as comp,m as data};
