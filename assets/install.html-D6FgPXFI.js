import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c as i,e as n,f as s,a as e,w as o,b as r}from"./app-DBDndcYm.js";const c={},d=n("p",null,"在 Python 中，安装第三方模块，是通过包管理工具 pip 完成的。",-1),h=n("p",null,"如果您正在使用 Mac 或 Linux，安装 pip 本身这个步骤就可以跳过了。",-1),y=n("code",null,"pip",-1),m=n("code",null,"Add python.exe to Path",-1),g=r(`<p>在命令提示符窗口下尝试运行 pip，如果 Windows 提示未找到命令，可以重新运行安装程序添加 pip。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Mac 或 Linux 上有可能并存 Python 3.x 和 Python 2.x，因此对应的 pip 命令是 pip3。</p></div><p>例如，我们要安装一个第三方库——Python Imaging Library，这是 Python 下非常强大的处理图像的工具库。不过，PIL 目前只支持到 Python 2.7，并且有年头没有更新了，因此，基于 PIL 的 Pillow 项目开发非常活跃，并且支持最新的 Python 3。</p><p>一般来说，第三方库都会在 Python 官方的 &lt;pypi.python.org&gt; 网站注册，要安装一个第三方库，必须先知道该库的名称，可以在官网或者 pypi 上搜索，比如 Pillow 的名称叫 <a href="https://pypi.python.org/pypi/Pillow/" target="_blank" rel="noopener noreferrer">Pillow</a>，因此，安装 Pillow 的命令就是:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">pip</span><span style="color:#A3BE8C;"> install</span><span style="color:#A3BE8C;"> Pillow</span></span></code></pre></div><p>耐心等待下载并安装后，就可以使用 Pillow 了。</p><h2 id="安装常用模块" tabindex="-1"><a class="header-anchor" href="#安装常用模块"><span>安装常用模块</span></a></h2><p>在使用 Python 时，我们经常需要用到很多第三方库，例如，上面提到的 Pillow，以及 MySQL 驱动程序，Web 框架 Flask，科学计算 Numpy 等。用 pip 一个一个安装费时费力，还需要考虑兼容性。我们推荐直接使用 <a href="https://www.anaconda.com/" target="_blank" rel="noopener noreferrer">Anaconda</a>，这是一个基于 Python 的数据处理和科学计算平台，它已经内置了许多非常有用的第三方库，我们装上 Anaconda，就相当于把数十个第三方模块自动安装好了，非常简单易用。</p><p>可以从 <a href="https://www.anaconda.com/download/" target="_blank" rel="noopener noreferrer">Anaconda 官网</a> 下载 GUI 安装包，安装包有 500~600M，所以需要耐心等待下载。下载后直接安装，Anaconda 会把系统 Path 中的 python 指向自己自带的 Python，并且，Anaconda 安装的第三方模块会安装在 Anaconda 自己的路径下，不影响系统已安装的 Python 目录。</p><p>安装好 Anaconda 后，重新打开命令行窗口，输入 python，可以看到 Anaconda 的信息:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>┌────────────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│Command Prompt - python                           - □ x │</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│Microsoft Windows [Version 10.0.0]                      │</span></span>
<span class="line"><span>│(c) 2015 Microsoft Corporation. All rights reserved.    │</span></span>
<span class="line"><span>│                                                        │</span></span>
<span class="line"><span>│C:\\&gt; python                                             │</span></span>
<span class="line"><span>│Python 3.9.2 |Anaconda, Inc.| ... on win32              │</span></span>
<span class="line"><span>│Type &quot;help&quot;, ... for more information.                  │</span></span>
<span class="line"><span>│&gt;&gt;&gt; import numpy                                        │</span></span>
<span class="line"><span>│&gt;&gt;&gt; _                                                   │</span></span>
<span class="line"><span>│                                                        │</span></span>
<span class="line"><span>│                                                        │</span></span>
<span class="line"><span>│                                                        │</span></span>
<span class="line"><span>└────────────────────────────────────────────────────────┘</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以尝试直接 <code>import numpy</code> 等已安装的第三方模块。</p><h2 id="模块搜索路径" tabindex="-1"><a class="header-anchor" href="#模块搜索路径"><span>模块搜索路径</span></a></h2><p>当我们试图加载一个模块时，Python 会在指定的路径下搜索对应的.py 文件，如果找不到，就会报错:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#88C0D0;">import</span><span style="color:#A3BE8C;"> mymodule</span></span>
<span class="line"><span style="color:#88C0D0;">Traceback</span><span style="color:#D8DEE9FF;"> (most </span><span style="color:#A3BE8C;">recent</span><span style="color:#A3BE8C;"> call</span><span style="color:#A3BE8C;"> last</span><span style="color:#D8DEE9FF;">):</span></span>
<span class="line"><span style="color:#88C0D0;">  File</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">&lt;stdin&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">,</span><span style="color:#A3BE8C;"> line</span><span style="color:#A3BE8C;"> 1,</span><span style="color:#A3BE8C;"> in</span><span style="color:#81A1C1;"> &lt;</span><span style="color:#A3BE8C;">modul</span><span style="color:#D8DEE9FF;">e</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#88C0D0;">ImportError:</span><span style="color:#A3BE8C;"> No</span><span style="color:#A3BE8C;"> module</span><span style="color:#A3BE8C;"> named</span><span style="color:#A3BE8C;"> mymodule</span></span></code></pre></div><p>默认情况下，Python 解释器会搜索当前目录、所有已安装的内置模块和第三方模块，搜索路径存放在 sys 模块的 path 变量中:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#88C0D0;">import</span><span style="color:#A3BE8C;"> sys</span></span>
<span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#88C0D0;">sys.path</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#ECEFF4;">&#39;&#39;</span><span style="color:#D8DEE9FF;">, </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">/Library/Frameworks/Python.framework/Versions/3.9/lib/python36.zip</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">, </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">, ..., </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>如果我们要添加自己的搜索目录，有两种方法:</p><p>一是直接修改 <code>sys.path</code>，添加要搜索的目录:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#88C0D0;">import</span><span style="color:#A3BE8C;"> sys</span></span>
<span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#88C0D0;">sys.path.append(</span><span style="color:#88C0D0;">&#39;/Users/michael/my_py_scripts&#39;</span><span style="color:#D8DEE9FF;">)</span></span></code></pre></div><p>这种方法是在运行时修改，运行结束后失效。</p>`,21),u=n("code",null,"PYTHONPATH",-1);function E(v,F){const a=p("RouteLink");return l(),i("div",null,[d,h,n("p",null,[s("如果您正在使用 Windows，请参考 "),e(a,{to:"/code/language/python/intro/install.html"},{default:o(()=>[s("安装 Python")]),_:1}),s(" 一节的内容，确保安装时勾选了 "),y,s(" 和 "),m,s("。")]),g,n("p",null,[s("第二种方法是设置环境变量 "),u,s("，该环境变量的内容会被自动添加到模块搜索路径中。设置方式与 "),e(a,{to:"/code/windows/env-variable.html"},{default:o(()=>[s("设置境变量")]),_:1}),s(" 类似。注意只需要添加您自己的搜索路径，Python 自己本身的搜索路径不受影响。")])])}const b=t(c,[["render",E],["__file","install.html.vue"]]),P=JSON.parse('{"path":"/code/language/python/module/install.html","title":"安装第三方模块","lang":"zh-CN","frontmatter":{"title":"安装第三方模块","icon":"install","author":"廖雪峰","date":"2021-03-27T00:00:00.000Z","category":"Python","description":"在 Python 中，安装第三方模块，是通过包管理工具 pip 完成的。 如果您正在使用 Mac 或 Linux，安装 pip 本身这个步骤就可以跳过了。 如果您正在使用 Windows，请参考 一节的内容，确保安装时勾选了 pip 和 Add python.exe to Path。 在命令提示符窗口下尝试运行 pip，如果 Windows 提示未找到...","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/python/module/install.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"安装第三方模块"}],["meta",{"property":"og:description","content":"在 Python 中，安装第三方模块，是通过包管理工具 pip 完成的。 如果您正在使用 Mac 或 Linux，安装 pip 本身这个步骤就可以跳过了。 如果您正在使用 Windows，请参考 一节的内容，确保安装时勾选了 pip 和 Add python.exe to Path。 在命令提示符窗口下尝试运行 pip，如果 Windows 提示未找到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-06T14:18:22.000Z"}],["meta",{"property":"article:author","content":"廖雪峰"}],["meta",{"property":"article:published_time","content":"2021-03-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-06T14:18:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装第三方模块\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-27T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-06T14:18:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"廖雪峰\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"安装常用模块","slug":"安装常用模块","link":"#安装常用模块","children":[]},{"level":2,"title":"模块搜索路径","slug":"模块搜索路径","link":"#模块搜索路径","children":[]}],"git":{"createdTime":1616944982000,"updatedTime":1670336302000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":2},{"name":"Mister-Hope","email":"zhangbowang1998@gmail.com","commits":1},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":2.99,"words":897},"filePathRelative":"code/language/python/module/install.md","localizedDate":"2021年3月27日","excerpt":"","autoDesc":true}');export{b as comp,P as data};
