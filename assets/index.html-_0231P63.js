import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as e,e as n,b as s,o}from"./app-B7WJ1_gD.js";const l={};function p(r,t){return o(),i("div",null,[t[0]||(t[0]=e("p",null,"JSON: JavaScript Object Notation(JavaScript 对象表示法)",-1)),t[1]||(t[1]=e("ul",null,[e("li",null,[e("p",null,"JSON 是存储和交换文本信息的语法。类似 XML。")]),e("li",null,[e("p",null,"JSON 比 XML 更小、更快，更易解析。")]),e("li",null,[e("p",null,"JSON 是轻量级的文本数据交换格式")]),e("li",null,[e("p",null,"JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。")]),e("li",null,[e("p",null,"JSON 具有自我描述性，更易理解")])],-1)),n(" more "),t[2]||(t[2]=s(`<h2 id="json-值" tabindex="-1"><a class="header-anchor" href="#json-值"><span>JSON 值</span></a></h2><p>JSON 值可以是:</p><ul><li>数字(整数或浮点数)</li><li>字符串(在双引号中)</li><li>逻辑值(<code>true</code> 或 <code>false</code>)</li><li>数组(在中括号中)</li><li>对象(在大括号中)</li><li>null</li></ul><h2 id="json-数字" tabindex="-1"><a class="header-anchor" href="#json-数字"><span>JSON 数字</span></a></h2><p>JSON 数字可以是整型或者浮点型:</p><p><strong>例:</strong></p><ul><li><code>5201314</code></li><li><code>-1</code></li><li><code>3.141592654</code></li></ul><h2 id="json-布尔值" tabindex="-1"><a class="header-anchor" href="#json-布尔值"><span>JSON 布尔值</span></a></h2><p>JSON 布尔值可以是 <code>true</code> 或者 <code>false</code></p><h2 id="json-字符串" tabindex="-1"><a class="header-anchor" href="#json-字符串"><span>JSON 字符串</span></a></h2><p>JSON 字符串需要用双括号 <code>&quot;</code> 包含，如果内部含有英文引号 <code>&quot;</code>，需要使用 <code>\\</code> 转义。</p><p><strong>例:</strong></p><ul><li><code>&quot;Mr.Hope is handsome&quot;</code></li><li><code>&quot;春眠不觉晓，处处闻啼鸟&quot;</code></li><li><code>&quot;A saying goes: \\&quot;Great hopes make great man.\\&quot;&quot;</code></li></ul><h2 id="json-对象" tabindex="-1"><a class="header-anchor" href="#json-对象"><span>JSON 对象</span></a></h2><p>JSON 对象在大括号 <code>{}</code> 中书写以 <code>键: 值</code> 对的方式书写，不同键值对之间用 <code>,</code> 分隔。</p><p><strong>例:</strong></p><div class="language-json" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;tag&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;heading&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;校园卡说明&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;text&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;校园卡是东师的金融消费卡&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h2 id="json-数组" tabindex="-1"><a class="header-anchor" href="#json-数组"><span>JSON 数组</span></a></h2><p>JSON 数组在中括号 <code>[]</code> 中书写，不同元素间用 <code>,</code> 隔开。</p><h2 id="json-null" tabindex="-1"><a class="header-anchor" href="#json-null"><span>JSON null</span></a></h2><p>JSON 可以设置 <code>null</code> 值</p>`,21))])}const h=a(l,[["render",p]]),S=JSON.parse('{"path":"/code/language/json/","title":"JSON 教程","lang":"zh-CN","frontmatter":{"title":"JSON 教程","icon":"json","date":"2020-07-25T00:00:00.000Z","category":"JSON","description":"JSON: JavaScript Object Notation(JavaScript 对象表示法) JSON 是存储和交换文本信息的语法。类似 XML。 JSON 比 XML 更小、更快，更易解析。 JSON 是轻量级的文本数据交换格式 JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JSON 教程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-25T00:00:00.000Z\\",\\"dateModified\\":\\"2022-02-06T16:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/json/"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"JSON 教程"}],["meta",{"property":"og:description","content":"JSON: JavaScript Object Notation(JavaScript 对象表示法) JSON 是存储和交换文本信息的语法。类似 XML。 JSON 比 XML 更小、更快，更易解析。 JSON 是轻量级的文本数据交换格式 JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:46:58.000Z"}],["meta",{"property":"article:published_time","content":"2020-07-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:46:58.000Z"}],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"git":{"createdTime":1595697078000,"updatedTime":1644166018000,"contributors":[{"name":"Mr.Hope","username":"","email":"zhangbowang1998@gmail.com","commits":8}]},"readingTime":{"minutes":1.21,"words":364},"filePathRelative":"code/language/json/README.md","excerpt":"<p>JSON: JavaScript Object Notation(JavaScript 对象表示法)</p>\\n<ul>\\n<li>\\n<p>JSON 是存储和交换文本信息的语法。类似 XML。</p>\\n</li>\\n<li>\\n<p>JSON 比 XML 更小、更快，更易解析。</p>\\n</li>\\n<li>\\n<p>JSON 是轻量级的文本数据交换格式</p>\\n</li>\\n<li>\\n<p>JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。</p>\\n</li>\\n<li>\\n<p>JSON 具有自我描述性，更易理解</p>\\n</li>\\n</ul>\\n","autoDesc":true}');export{h as comp,S as data};
