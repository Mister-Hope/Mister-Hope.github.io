import{c as le}from"./chunk-4KE642ED-BncjOmH9.js";import{s as re}from"./chunk-VSLJSFIP-Bfy-U7SU.js";import{p as se}from"./treemap-6Y5VK53G-IM4SBBHM-BTDR8j_M.js";import{m as p,Z as oe,K as ie,J as ne,Q as ce,j as de,X as pe,L as G,O as K,aN as he,Y as me,bq as N,t as B,aR as j,br as fe,bs as ye,bt as b,k as E,bu as Se,l as ue,u as ge}from"./mermaid.esm.min-Bw6iGWcg.js";import{y as xe}from"./chunk-R4PCWW2Q-uIK6P-Q-.js";import"./chunk-5ZJXQJOJ-BAwjsogX.js";import"./app-Batje8m-.js";var Ce={nodes:[],levels:new Map,outerNodes:[],classes:new Map},C=new re(()=>structuredClone(Ce)),be=p(()=>{let s=ge,a=K();return G({...s.treemap,...a.treemap??{}})},"getConfig"),$e=p(()=>C.records.nodes,"getNodes"),ve=p((s,a)=>{let n=C.records;n.nodes.push(s),n.levels.set(s,a),a===0&&n.outerNodes.push(s),a===0&&!n.root&&(n.root=s)},"addNode"),we=p(()=>({name:"",children:C.records.outerNodes}),"getRoot"),Le=p((s,a)=>{let n=C.records.classes,o=n.get(s)??{id:s,styles:[],textStyles:[]};n.set(s,o);let i=a.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");i&&i.forEach(r=>{Se(r)&&(o?.textStyles?o.textStyles.push(r):o.textStyles=[r]),o?.styles?o.styles.push(r):o.styles=[r]}),n.set(s,o)},"addClass"),ke=p(()=>C.records.classes,"getClasses"),ze=p(s=>C.records.classes.get(s)?.styles??[],"getStylesForClass"),Fe=p(()=>{ue(),C.reset()},"clear"),A={getNodes:$e,addNode:ve,getRoot:we,getConfig:be,clear:Fe,setAccTitle:pe,getAccTitle:de,setDiagramTitle:ce,getDiagramTitle:ne,getAccDescription:ie,setAccDescription:oe,addClass:Le,getClasses:ke,getStylesForClass:ze};function Q(s){if(!s.length)return[];let a=[],n=[];return s.forEach(o=>{let i={name:o.name,children:o.type==="Leaf"?void 0:[]};for(i.classSelector=o?.classSelector,o?.cssCompiledStyles&&(i.cssCompiledStyles=[o.cssCompiledStyles]),o.type==="Leaf"&&o.value!==void 0&&(i.value=o.value);n.length>0&&n[n.length-1].level>=o.level;)n.pop();if(n.length===0)a.push(i);else{let r=n[n.length-1].node;r.children?r.children.push(i):r.children=[i]}o.type!=="Leaf"&&n.push({node:i,level:o.level})}),a}p(Q,"buildHierarchy");var Te=p(s=>{le(s,A);let a=[];for(let i of s.TreemapRows??[])i.$type==="ClassDefStatement"&&A.addClass(i.className??"",i.styleText??"");for(let i of s.TreemapRows??[]){let r=i.item;if(!r)continue;let S=i.indent?parseInt(i.indent):0,v=Me(r),w=r.classSelector?A.getStylesForClass(r.classSelector):[],l=w.length>0?w.join(";"):void 0,L={level:S,name:v,type:r.$type,value:r.value,classSelector:r.classSelector,cssCompiledStyles:l};a.push(L)}let n=Q(a),o=p((i,r)=>{for(let S of i)A.addNode(S,r),S.children&&S.children.length>0&&o(S.children,r+1)},"addNodesRecursively");o(n,0)},"populate"),Me=p(s=>s.name?String(s.name):"","getItemName"),Ne={parse:p(async s=>{try{let a=await se("treemap",s);B.debug("Treemap AST:",a),Te(a)}catch(a){throw B.error("Error parsing treemap:",a),a}},"parse")},Pe=10,$=10,P=25,Ae=p((s,a,n,o)=>{let i=o.db,r=i.getConfig(),S=r.padding??Pe,v=i.getDiagramTitle(),w=i.getRoot(),{themeVariables:l}=K();if(!w)return;let L=v?30:0,k=he(a),J=r.nodeWidth?r.nodeWidth*$:960,O=r.nodeHeight?r.nodeHeight*$:500,I=J,X=O+L;k.attr("viewBox",`0 0 ${I} ${X}`),me(k,X,I,r.useMaxWidth);let x;try{let e=r.valueFormat||",";if(e==="$0,0")x=p(t=>"$"+N(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){let t=/\.\d+/.exec(e),c=t?t[0]:"";x=p(m=>"$"+N(","+c)(m),"valueFormat")}else if(e.startsWith("$")){let t=e.substring(1);x=p(c=>"$"+N(t||"")(c),"valueFormat")}else x=N(e)}catch(e){B.error("Error creating format function:",e),x=N(",")}let z=j().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),U=j().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),W=j().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);v&&k.append("text").attr("x",I/2).attr("y",L/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(v);let Y=k.append("g").attr("transform",`translate(0, ${L})`).attr("class","treemapContainer"),_=fe(w).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),Z=ye().size([J,O]).paddingTop(e=>e.children&&e.children.length>0?P+$:0).paddingInner(S).paddingLeft(e=>e.children&&e.children.length>0?$:0).paddingRight(e=>e.children&&e.children.length>0?$:0).paddingBottom(e=>e.children&&e.children.length>0?$:0).round(!0)(_),ee=Z.descendants().filter(e=>e.children&&e.children.length>0),F=Y.selectAll(".treemapSection").data(ee).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);F.append("rect").attr("width",e=>e.x1-e.x0).attr("height",P).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),F.append("clipPath").attr("id",(e,t)=>`clip-section-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",P),F.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>z(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>U(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";let t=b({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),F.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",P/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";let t="dominant-baseline: middle; font-size: 12px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",c=b({cssCompiledStyles:e.data.cssCompiledStyles});return t+c.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;let t=E(this),c=e.data.name;t.text(c);let m=e.x1-e.x0,u=6,g;r.showValues!==!1&&e.value?g=m-10-30-10-u:g=m-u-6;let y=Math.max(15,g),f=t.node();if(f.getComputedTextLength()>y){let d="...",h=c;for(;h.length>0;){if(h=c.substring(0,h.length-1),h.length===0){t.text(d),f.getComputedTextLength()>y&&t.text("");break}if(t.text(h+d),f.getComputedTextLength()<=y)break}}}),r.showValues!==!1&&F.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",P/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?x(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";let t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",c=b({cssCompiledStyles:e.data.cssCompiledStyles});return t+c.labelStyles.replace("color:","fill:")});let te=Z.leaves(),R=Y.selectAll(".treemapLeafGroup").data(te).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);R.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?z(e.parent.data.name):z(e.data.name)).attr("style",e=>b({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?z(e.parent.data.name):z(e.data.name)).attr("stroke-width",3),R.append("clipPath").attr("id",(e,t)=>`clip-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),R.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{let t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+W(e.data.name)+";",c=b({cssCompiledStyles:e.data.cssCompiledStyles});return t+c.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.data.name).each(function(e){let t=E(this),c=e.x1-e.x0,m=e.y1-e.y0,u=t.node(),g=4,y=c-2*g,f=m-2*g;if(y<10||f<10){t.style("display","none");return}let d=parseInt(t.style("font-size"),10),h=8,T=28,V=.6,M=6,D=2;for(;u.getComputedTextLength()>y&&d>h;)d--,t.style("font-size",`${d}px`);let H=Math.max(M,Math.min(T,Math.round(d*V))),q=d+D+H;for(;q>f&&d>h&&(d--,H=Math.max(M,Math.min(T,Math.round(d*V))),!(H<M&&d===h));)t.style("font-size",`${d}px`),q=d+D+H;t.style("font-size",`${d}px`),(u.getComputedTextLength()>y||d<h||f<d)&&t.style("display","none")}),r.showValues!==!1&&R.append("text").attr("class","treemapValue").attr("x",e=>(e.x1-e.x0)/2).attr("y",function(e){return(e.y1-e.y0)/2}).attr("style",e=>{let t="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+W(e.data.name)+";",c=b({cssCompiledStyles:e.data.cssCompiledStyles});return t+c.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.value?x(e.value):"").each(function(e){let t=E(this),c=this.parentNode;if(!c){t.style("display","none");return}let m=E(c).select(".treemapLabel");if(m.empty()||m.style("display")==="none"){t.style("display","none");return}let u=parseFloat(m.style("font-size")),g=28,y=.6,f=6,d=2,h=Math.max(f,Math.min(g,Math.round(u*y)));t.style("font-size",`${h}px`);let T=(e.y1-e.y0)/2+u/2+d;t.attr("y",T);let V=e.x1-e.x0,M=e.y1-e.y0-4,D=V-2*4;t.node().getComputedTextLength()>D||T+h>M||h<f?t.style("display","none"):t.style("display",null)});let ae=r.diagramPadding??8;xe(k,ae,"flowchart",r?.useMaxWidth||!1)},"draw"),We=p(function(s,a){return a.db.getClasses()},"getClasses"),Re={draw:Ae,getClasses:We},Ve={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},De=p(({treemap:s}={})=>{let a=G(Ve,s);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles"),He=De,Ye={parser:Ne,db:A,renderer:Re,styles:He};export{Ye as diagram};
