import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as r,c as i,e as s,f as o,a as e,w as a,b as n}from"./app-ByRR1PFc.js";const d={},F={id:"文件组成",tabindex:"-1"},y={class:"header-anchor",href:"#文件组成"},E=s("p",null,"小程序的代码由四种文件组成:",-1),u=s("ul",null,[s("li",null,[s("code",null,".json"),o(" 后缀的 JSON 配置文件，主要用作小程序配置")]),s("li",null,[s("code",null,".wxml"),o(" 后缀的 WXML 模板文件，为视图层，相当于 HTML")]),s("li",null,[s("code",null,".wxss"),o(" 后缀的 WXSS 样式文件，为样式部分，相当于 CSS")]),s("li",null,[s("code",null,".js"),o(" 后缀的 JS 脚本逻辑文件，为脚本部分，处理小程序逻辑与行为")])],-1),h={id:"目录结构",tabindex:"-1"},g={class:"header-anchor",href:"#目录结构"},C=n('<p>小程序包含一个描述整体程序的 app 和多个描述各自页面的 page。</p><p>一个小程序主体部分由三个文件组成，必须放在项目的根目录:</p><table><thead><tr><th>文件</th><th>必需</th><th>作用</th></tr></thead><tbody><tr><td>app.js</td><td>是</td><td>小程序逻辑</td></tr><tr><td>app.json</td><td>是</td><td>小程序公共配置</td></tr><tr><td>app.wxss</td><td>否</td><td>小程序公共样式表</td></tr></tbody></table><p>一个小程序页面由四个文件组成:</p><table><thead><tr><th>文件</th><th>必需</th><th>作用</th></tr></thead><tbody><tr><td>js</td><td>是</td><td>页面逻辑</td></tr><tr><td>wxml</td><td>是</td><td>页面结构</td></tr><tr><td>json</td><td>否</td><td>页面配置</td></tr><tr><td>wxss</td><td>否</td><td>页面样式表</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>为了方便开发者减少配置项，描述页面的四个文件必须具有相同的路径与文件名。</p><p>这样开发者工具会自动将它们视作一个小程序页面的不同代码部分。</p></div>',6),m={id:"允许上传的文件",tabindex:"-1"},_={class:"header-anchor",href:"#允许上传的文件"},f=n('<p>见页脚<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><h2 id="json-配置" tabindex="-1"><a class="header-anchor" href="#json-配置"><span>JSON 配置</span></a></h2><p>JSON 是一种数据格式，<strong>在小程序中，JSON 负责描述小程序的静态配置，负责配置项目、小程序整体和每个页面。</strong></p><p>我们可以看到在项目的根目录有一个 <code>app.json</code> 和 <code>project.config.json</code>，此外在 <code>pages/logs</code> 目录下还有一个 <code>logs.json</code>。下面是它们的用途说明。</p>',4),x={id:"小程序配置-app-json",tabindex:"-1"},v={class:"header-anchor",href:"#小程序配置-app-json"},j=n(`<p>app.json 是当前小程序的全局配置，包括了小程序的所有页面路径、界面表现、网络超时时间、底部 tab 等。QuickStart 项目里边的 app.json 配置内容如下:</p><div class="language-json" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#ECEFF4;">  &quot;</span><span style="color:#8FBCBB;">pages</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">pages/index/index</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">pages/logs/logs</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">],</span></span>
<span class="line"><span style="color:#ECEFF4;">  &quot;</span><span style="color:#8FBCBB;">window</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#ECEFF4;">    &quot;</span><span style="color:#8FBCBB;">backgroundTextStyle</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">light</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">    &quot;</span><span style="color:#8FBCBB;">navigationBarBackgroundColor</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">#fff</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">    &quot;</span><span style="color:#8FBCBB;">navigationBarTitleText</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">WeChat</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">    &quot;</span><span style="color:#8FBCBB;">navigationBarTextStyle</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">black</span><span style="color:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="color:#ECEFF4;">  }</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span></code></pre></div><ul><li><p><code>pages</code> 字段 —— 用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前您的小程序页面定义在哪个目录。</p></li><li><p><code>window</code> 字段 —— 定义小程序所有页面的顶部背景颜色，文字颜色定义等。</p></li></ul>`,3),B={id:"页面配置-page-json",tabindex:"-1"},b={class:"header-anchor",href:"#页面配置-page-json"},A=s("p",null,[o("这里的 "),s("code",null,"page.json"),o(" 其实用来表示小程序页面相关的配置。")],-1),D=s("p",null,[o("如果您整个小程序的风格是蓝色调，那么您可以在 "),s("code",null,"app.json"),o(" 里边声明顶部颜色是蓝色即可。实际您可能希望小程序里边的每个页面都有不一样的色调来区分不同功能模块，"),s("code",null,"page.json"),o(" 就提供了定义每个页面的一些属性的能力。")],-1),S={id:"工具配置-project-config-json",tabindex:"-1"},k={class:"header-anchor",href:"#工具配置-project-config-json"},w=s("p",null,"通常大家在使用一个工具的时候，都会针对各自喜好做一些个性化配置，例如界面颜色、编译配置等等，当您换了另外一台电脑重新安装工具的时候，您还要重新配置。",-1),q=s("p",null,"考虑到这点，小程序开发者工具在每个项目的根目录都会生成一个 project.config.json，您在工具上做的任何配置都会写入到这个文件，当您重新安装工具或者换电脑工作时，您只要载入同一个项目的代码包，开发者工具就自动会帮您恢复到当时您开发项目时的个性化配置，其中会包括编辑器的颜色、代码上传时自动压缩等等一系列选项。",-1),M=s("p",null,[o("其他配置项细节可以参考文档 "),s("a",{href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html",target:"_blank",rel:"noopener noreferrer"},"开发者工具的配置"),o("。")],-1),W={class:"hint-container info"},J=s("p",{class:"hint-container-title"},"相关信息",-1),X={id:"wxml-模板",tabindex:"-1"},T={class:"header-anchor",href:"#wxml-模板"},L=n(`<p>在小程序中 WXML 充当的就是类似 HTML 的角色。打开 <code>pages/index/index.wxml</code>，您会看到以下的内容:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&lt;view</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">container</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">  &lt;view</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">userinfo</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">    &lt;button</span><span style="color:#8FBCBB;"> wx</span><span style="color:#ECEFF4;">:</span><span style="color:#8FBCBB;">if</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">{{!hasUserInfo &amp;&amp; canIUse}}</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> 获取头像昵称 </span><span style="color:#81A1C1;">&lt;/button&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">    &lt;block</span><span style="color:#D8DEE9FF;"> wx:else</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">      &lt;image</span><span style="color:#8FBCBB;"> src</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">{{userInfo.avatarUrl}}</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> background-size</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">cover</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">      &lt;text</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">userinfo-nickname</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;">{{userInfo.nickName}}</span><span style="color:#81A1C1;">&lt;/text&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">    &lt;/block&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">  &lt;/view&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">  &lt;view</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">usermotto</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">    &lt;text</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">user-motto</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;">{{motto}}</span><span style="color:#81A1C1;">&lt;/text&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">  &lt;/view&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">&lt;/view&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和 HTML 非常相似，WXML 由标签、属性等等构成。但是也有很多不一样的地方，我们来一一阐述一下:</p><ul><li><p>自己的一套标签名称</p><blockquote><p>e.g.: 小程序把最常见的 <code>&lt;span /&gt;</code> 改成了 <code>&lt;text /&gt;</code>，<code>&lt;div /&gt;</code> 改成了 <code>&lt;view /&gt;</code></p></blockquote></li></ul>`,4),N=s("div",null,[s("ul",null,[s("li",null,[o("多了一些 "),s("code",{"v-pre":""},"wx:if"),o(" 这样的属性以及 "),s("code",{"v-pre":""},"{{ }}"),o(" 这样的表达式")])])],-1),H=s("p",null,"由于小程序不允许用户进行 DOM 操作，所以小程序在编译的时候就要编译好整个的 DOM 结构。",-1),O=s("p",null,"小程序下通过提供动态绑定、条件渲染与循环渲染帮助您去动态改变编译好的 DOM 结构。",-1),I={id:"动态绑定",tabindex:"-1"},P={class:"header-anchor",href:"#动态绑定"},Z=n('<p>动态绑定负责把 JS 的变量映射绑定到 WXML 上，也就是说负责把逻辑层的变量显示在视图层的具体位置。</p><p>WXML:</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&lt;text&gt;</span><span style="color:#D8DEE9FF;">{{msg}}</span><span style="color:#81A1C1;">&lt;/text&gt;</span></span></code></pre></div><p>JS 只需要管理状态即可:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setData</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> msg</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello World</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div>',5),z=s("div",null,[s("p",null,[o("通过 "),s("code",{"v-pre":""},"{{ }}"),o(" 的语法把一个变量绑定到界面上，我们称为数据绑定。仅仅通过数据绑定还不够完整的描述状态和界面的关系，还需要 "),s("code",{"v-pre":""},"if"),o(" / "),s("code",{"v-pre":""},"else"),o(", "),s("code",{"v-pre":""},"for"),o(" 等控制能力，在小程序里边，这些控制能力都用 "),s("code",{"v-pre":""},"wx:"),o(" 开头的属性来表达。")])],-1),R={id:"wxss-样式",tabindex:"-1"},U={class:"header-anchor",href:"#wxss-样式"},V=n('<p>WXSS 具有 CSS 大部分的特性，也做了一些扩充和修改。</p><ul><li><p>新增了尺寸单位。WXSS 在底层支持新的尺寸单位 rpx ，规定屏幕宽 750 rpx。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于换算采用的浮点数运算，所以运算结果会和预期结果有一点点偏差。</p><p>所以 Mr.Hope 并不建议使用 rpx 单位。</p></div></li><li><p>提供了全局的样式和局部样式。</p><p>和前边 <code>app.json</code>, <code>page.json</code> 的概念相同，您可以写一个 <code>app.wxss</code> 作为全局样式，会作用于当前小程序的所有页面，局部页面样式 <code>page.wxss</code> 仅对当前页面生效。</p></li><li><p>此外 WXSS 仅支持部分 CSS 选择器</p></li></ul>',2),Q={id:"js-逻辑交互",tabindex:"-1"},G={class:"header-anchor",href:"#js-逻辑交互"},K=n(`<p>小程序仅仅只有界面展示是不够的，还需要和用户做交互: 响应用户的点击、获取用户的位置等等。小程序通过 JS 脚本文件来处理用户的操作。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&lt;view&gt;</span><span style="color:#D8DEE9FF;">{{ msg }}</span><span style="color:#81A1C1;">&lt;/view&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">&lt;button</span><span style="color:#8FBCBB;"> bindtap</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">clickMe</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;">点击我</span><span style="color:#81A1C1;">&lt;/button&gt;</span></span></code></pre></div><p>点击 button 按钮的时候，我们希望把界面上 <code>msg</code> 显示成 <code>&quot;Hello World&quot;</code>，于是我们在 button 上声明一个属性: <code>bindtap</code> ，在 JS 文件里边声明了 <code>clickMe</code> 方法来响应这次点击操作:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">Page</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#88C0D0;">  clickMe</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#81A1C1;">    this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">setData</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#88C0D0;"> msg</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello World</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;"> }</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">  },</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span></code></pre></div>`,4),Y=s("p",null,[o("此外您还可以在 JS 中调用小程序提供的丰富的 API，利用这些 API 可以很方便的调起微信提供的能力，例如获取用户信息、本地存储、微信支付等。在前边的 QuickStart 例子中，在 "),s("code",null,"pages/index/index.js"),o(" 就调用了 "),s("code",null,"wx.getUserInfo"),o(" 获取微信用户的头像和昵称，最后通过 "),s("code",null,"setData"),o(" 把获取到的信息显示到界面上。")],-1),$=n('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>在项目目录中，以下文件会经过编译，因此上传之后无法直接访问到: <code>.js</code>、<code>app.json</code>、<code>.wxml</code>、<code>*.wxss</code>(其中 <code>wxml</code> 和 <code>wxss</code> 文件仅针对在 <code>app.json</code> 中配置了的页面)。除此之外，只有后缀名在白名单内的文件可以被上传。具体白名单列表如下:</p><ul><li>wxs</li><li>png</li><li>jpg</li><li>jpeg</li><li>gif</li><li>svg</li><li>json</li><li>cer</li><li>mp3</li><li>aac</li><li>m4a</li><li>mp4</li><li>wav</li><li>ogg</li><li>silk</li></ul><a href="#footnote-ref1" class="footnote-backref">↩︎</a></li></ol></section>',2);function ss(os,es){const l=p("Badge"),t=p("RouteLink");return r(),i("div",null,[s("h2",F,[s("a",y,[s("span",null,[o("文件组成 "),e(l,{text:"重要",type:"error"})])])]),E,u,s("h2",h,[s("a",g,[s("span",null,[o("目录结构 "),e(l,{text:"重要",type:"error"})])])]),C,s("h3",m,[s("a",_,[s("span",null,[o("允许上传的文件 "),e(l,{text:"不重要",type:"grey"})])])]),f,s("h3",x,[s("a",v,[s("span",null,[o("小程序配置 app.json "),e(l,{text:"重要",type:"error"})])])]),j,s("p",null,[o("其他配置项可以参考文档 "),e(t,{to:"/code/mini-app/guide/config/app-config.html"},{default:a(()=>[o("全局配置")]),_:1}),o("。")]),s("h3",B,[s("a",b,[s("span",null,[o("页面配置 page.json "),e(l,{text:"简单了解"})])])]),A,D,s("p",null,[o("配置项可以参考文档 "),e(t,{to:"/code/mini-app/guide/config/page-config.html"},{default:a(()=>[o("页面配置")]),_:1}),o("。")]),s("h3",S,[s("a",k,[s("span",null,[o("工具配置 project.config.json "),e(l,{text:"不重要",type:"grey"})])])]),w,q,M,s("div",W,[J,s("p",null,[o("更多 JSON 相关教程，请查看 "),e(t,{to:"/code/language/json/"},{default:a(()=>[o("JSON 教程")]),_:1})])]),s("h2",X,[s("a",T,[s("span",null,[o("WXML 模板 "),e(l,{text:"重要",type:"error"})])])]),L,N,H,O,s("p",null,[o("更详细的文档可以参考 "),e(t,{to:"/code/mini-app/guide/view/wxml.html"},{default:a(()=>[o("WXML")]),_:1}),o(" 。")]),s("h2",I,[s("a",P,[s("span",null,[o("动态绑定 "),e(l,{text:"重要",type:"error"})])])]),Z,z,s("h2",R,[s("a",U,[s("span",null,[o("WXSS 样式 "),e(l,{text:"重要",type:"error"})])])]),V,s("p",null,[o("更详细的文档可以参考 "),e(t,{to:"/code/mini-app/guide/view/wxss.html"},{default:a(()=>[o("WXSS")]),_:1}),o("。")]),s("h2",Q,[s("a",G,[s("span",null,[o("JS 逻辑交互 "),e(l,{text:"重要",type:"error"})])])]),K,s("p",null,[o("响应用户的操作就是这么简单，更详细的事件可以参考文档 "),e(t,{to:"/code/mini-app/guide/view/event.html"},{default:a(()=>[o("WXML - 事件")]),_:1}),o(" 。")]),Y,s("p",null,[o("更多 API 可以参考文档 "),e(t,{to:"/code/mini-app/guide/service/api/"},{default:a(()=>[o("小程序的 API")]),_:1}),o(" 。")]),$])}const ts=c(d,[["render",ss],["__file","file-structure.html.vue"]]),as=JSON.parse('{"path":"/code/mini-app/guide/file-structure.html","title":"代码构成","lang":"zh-CN","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"代码构成","icon":"tree","category":"小程序","description":"文件组成 小程序的代码由四种文件组成: .json 后缀的 JSON 配置文件，主要用作小程序配置 .wxml 后缀的 WXML 模板文件，为视图层，相当于 HTML .wxss 后缀的 WXSS 样式文件，为样式部分，相当于 CSS .js 后缀的 JS 脚本逻辑文件，为脚本部分，处理小程序逻辑与行为 目录结构 小程序包含一个描述整体程序的 app ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/mini-app/guide/file-structure.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"代码构成"}],["meta",{"property":"og:description","content":"文件组成 小程序的代码由四种文件组成: .json 后缀的 JSON 配置文件，主要用作小程序配置 .wxml 后缀的 WXML 模板文件，为视图层，相当于 HTML .wxss 后缀的 WXSS 样式文件，为样式部分，相当于 CSS .js 后缀的 JS 脚本逻辑文件，为脚本部分，处理小程序逻辑与行为 目录结构 小程序包含一个描述整体程序的 app ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T17:47:26.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:published_time","content":"2020-10-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T17:47:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码构成\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-10-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T17:47:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"文件组成","slug":"文件组成","link":"#文件组成","children":[]},{"level":2,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[{"level":3,"title":"允许上传的文件","slug":"允许上传的文件","link":"#允许上传的文件","children":[]}]},{"level":2,"title":"JSON 配置","slug":"json-配置","link":"#json-配置","children":[{"level":3,"title":"小程序配置 app.json","slug":"小程序配置-app-json","link":"#小程序配置-app-json","children":[]},{"level":3,"title":"页面配置 page.json","slug":"页面配置-page-json","link":"#页面配置-page-json","children":[]},{"level":3,"title":"工具配置 project.config.json","slug":"工具配置-project-config-json","link":"#工具配置-project-config-json","children":[]}]},{"level":2,"title":"WXML 模板","slug":"wxml-模板","link":"#wxml-模板","children":[]},{"level":2,"title":"动态绑定","slug":"动态绑定","link":"#动态绑定","children":[]},{"level":2,"title":"WXSS 样式","slug":"wxss-样式","link":"#wxss-样式","children":[]},{"level":2,"title":"JS 逻辑交互","slug":"js-逻辑交互","link":"#js-逻辑交互","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1706204846000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":5},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":6.6,"words":1981},"filePathRelative":"code/mini-app/guide/file-structure.md","localizedDate":"2020年10月9日","excerpt":"","autoDesc":true}');export{ts as comp,as as data};
