import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,d as s,a as l,w as h,r as p,o as r,f as o}from"./app-twcJP2XU.js";const d={},k={class:"hint-container tip"};function c(g,i){const t=p("RouteLink");return r(),n("div",null,[i[2]||(i[2]=a(`<p>由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。</p><h2 id="代理设置" tabindex="-1"><a class="header-anchor" href="#代理设置"><span>代理设置</span></a></h2><p>通常情况下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p><p>在 Windows 下，我们可以通过设置环境变量 <code>HTTP_PROXY</code> 和 <code>HTTPS_PROXY</code> 来进行代理设置。</p><details class="hint-container details"><summary>Windows 例子</summary><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HTTP_PROXY=http://127.0.0.1:1080</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HTTPS_PROXY=http://127.0.0.1:1080</span></span></code></pre></div></details><details class="hint-container details"><summary>Linux 例子</summary><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> HTTP_PROXY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1080</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> HTTPS_PROXY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">127</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">1080</span></span></code></pre></div></details><p>上述做法仅对当前终端有效，如果需要永久生效，可以将上述命令添加到系统环境变量 (Windows) 或 <code>~/.bashrc</code> (Linux) 中。</p>`,7)),s("div",k,[i[1]||(i[1]=s("p",{class:"hint-container-title"},"提示",-1)),s("p",null,[l(t,{to:"/code/windows/env-variable.html"},{default:h(()=>i[0]||(i[0]=[o("Windows 添加环境变量")])),_:1})])]),i[3]||(i[3]=a(`<h2 id="ssh-配置" tabindex="-1"><a class="header-anchor" href="#ssh-配置"><span>SSH 配置</span></a></h2><p>如果你在使用 22 端口通过 SSH 使用 Git，那么你需要在用户目录下的 <code>.ssh</code> 目录新建 <code>config</code> 文件，并输入以下内容:</p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">Host github.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  User git</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  Port 22</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  Hostname github.com</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 这里在 Windows 下需要替换成实际目录，如 &quot;C:\\Users\\mister-hope\\.ssh\\id_rsa&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  IdentityFile </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;~/.ssh/id_rsa&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  TCPKeepAlive yes</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Ubuntu 需要安装 corkscrew</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  ProxyCommand /usr/bin/corkscrew 172.31.16.1 10808 %h %p</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Windows 可以改为 Git 安装目录下的 connect，如</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # ProxyCommand &quot;C:\\Program Files\\Git\\mingw64\\bin\\connect&quot; -S 127.0.0.1:10808 -a none %h %p</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">Host ssh.github.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  User git</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  Port 443</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  Hostname ssh.github.com</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 这里在 Windows 下需要替换成实际目录，如 &quot;C:\\Users\\mister-hope\\.ssh\\id_rsa&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  IdentityFile </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;~/.ssh/id_rsa&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  TCPKeepAlive yes</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Ubuntu 需要安装 corkscrew</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">  ProxyCommand /usr/bin/corkscrew 172.31.16.1 10808 %h %p</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Windows 可以改为 Git 安装目录下的 connect，如</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # ProxyCommand &quot;C:\\Program Files\\Git\\mingw64\\bin\\connect&quot; -S 127.0.0.1:10808 -a none %h %p</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果在 WSL 使用，获取 Windows 的 IP 地址命令为 <code>ip route | grep default | awk &#39;{print $3}&#39;</code>。</p><p>特别注意，如不进行额外配置，每次重启后主机地址都会发生变化。</p></div><p>你可以使用 <code>ssh -T git@github.com</code> 来测试你的代理配置是否有效。</p>`,5))])}const u=e(d,[["render",c]]),A=JSON.parse('{"path":"/software/git/proxy.html","title":"Git 代理","lang":"zh-CN","frontmatter":{"date":"2022-11-06T00:00:00.000Z","title":"Git 代理","icon":"git","category":"Git","tag":["Git","软件"],"description":"由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。 代理设置 通常情况下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PROXY 来进行代理设置。 在 Windows 下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PRO...","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/software/git/proxy.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"Git 代理"}],["meta",{"property":"og:description","content":"由于目前 GitHub 已经在全国大部分范围内被主要运营商进行 DNS 封锁，所以如果需要配合 GitHub 使用 Git，需要进行代理设置。 代理设置 通常情况下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PROXY 来进行代理设置。 在 Windows 下，我们可以通过设置环境变量 HTTP_PROXY 和 HTTPS_PRO..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T17:47:26.000Z"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"软件"}],["meta",{"property":"article:published_time","content":"2022-11-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T17:47:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git 代理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T17:47:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"git":{"createdTime":1670336302000,"updatedTime":1706204846000,"contributors":[{"name":"Mr.Hope","username":"","email":"mister-hope@outlook.com","commits":2}]},"readingTime":{"minutes":1.55,"words":466},"filePathRelative":"software/git/proxy.md","localizedDate":"2022年11月6日","excerpt":"","autoDesc":true}');export{u as comp,A as data};
