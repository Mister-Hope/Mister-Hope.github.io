import{_ as c,X as l,Y as u,$ as a,a0 as n,Z as t,a3 as s,C as p}from"./framework-a91f7991.js";const d={},i=s(`<h2 id="什么是事件" tabindex="-1"><a class="header-anchor" href="#什么是事件" aria-hidden="true">#</a> 什么是事件</h2><ul><li>事件是视图层到逻辑层的通讯方式。</li><li>事件可以将用户的行为反馈到逻辑层进行处理。</li><li>事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处理函数。</li><li>事件对象可以携带额外信息，如 <code>id</code>, <code>dataset</code>, <code>touches</code>。</li></ul><h2 id="事件的使用方式" tabindex="-1"><a class="header-anchor" href="#事件的使用方式" aria-hidden="true">#</a> 事件的使用方式</h2><p>在组件中绑定一个事件处理函数，如 <code>bindtap</code>，当用户点击该组件的时候会在该页面对应的 <code>Page</code> 中找到相应的事件处理函数。</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tapTest<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-hi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WeChat<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tapName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Click me! <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>在相应的 <code>Page</code> 定义中写上相应的事件处理函数，参数是 <code>event</code>。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">tapName</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>可以看到 log 出来的信息大致如下:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tap&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;timeStamp&quot;</span><span class="token operator">:</span> <span class="token number">895</span><span class="token punctuation">,</span>
  <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tapTest&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dataset&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;hi&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WeChat&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;currentTarget&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tapTest&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dataset&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;hi&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WeChat&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;detail&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
    <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">14</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;touches&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pageX&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pageY&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
      <span class="token property">&quot;clientX&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
      <span class="token property">&quot;clientY&quot;</span><span class="token operator">:</span> <span class="token number">14</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;changedTouches&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;identifier&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pageX&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
      <span class="token property">&quot;pageY&quot;</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
      <span class="token property">&quot;clientX&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>
      <span class="token property">&quot;clientY&quot;</span><span class="token operator">:</span> <span class="token number">14</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),r={id:"使用-wxs-函数响应事件",tabindex:"-1"},k=a("a",{class:"header-anchor",href:"#使用-wxs-函数响应事件","aria-hidden":"true"},"#",-1),h=s('<p>高级用法，详见脚注<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>。</p><h2 id="事件详解" tabindex="-1"><a class="header-anchor" href="#事件详解" aria-hidden="true">#</a> 事件详解</h2>',2),m={id:"事件分类",tabindex:"-1"},v=a("a",{class:"header-anchor",href:"#事件分类","aria-hidden":"true"},"#",-1),g=s('<p>事件分为冒泡事件和非冒泡事件:</p><ul><li>冒泡事件: 当一个组件上的事件被触发后，该事件会向父节点传递。</li><li>非冒泡事件: 当一个组件上的事件被触发后，该事件不会向父节点传递。</li></ul><p>WXML 的冒泡事件列表:</p><table><thead><tr><th>类型</th><th>触发条件</th><th>最低版本</th></tr></thead><tbody><tr><td>touchstart</td><td>手指触摸动作开始</td><td></td></tr><tr><td>touchmove</td><td>手指触摸后移动</td><td></td></tr><tr><td>touchcancel</td><td>手指触摸动作被打断，如来电提醒，弹窗</td><td></td></tr><tr><td>touchend</td><td>手指触摸动作结束</td><td></td></tr><tr><td>tap</td><td>手指触摸后马上离开</td><td></td></tr><tr><td>longpress</td><td>手指触摸后，超过 350ms 再离开，如果指定了事件回调函数并触发了这个事件，tap 事件将不被触发</td><td>1.5.0</td></tr><tr><td>longtap</td><td>手指触摸后，超过 350ms 再离开(推荐使用 longpress 事件代替)</td><td></td></tr><tr><td>transitionend</td><td>会在 WXSS transition 或 wx.createAnimation 动画结束后触发</td><td></td></tr><tr><td>animationstart</td><td>会在一个 WXSS animation 动画开始时触发</td><td></td></tr><tr><td>animationiteration</td><td>会在一个 WXSS animation 一次迭代结束时触发</td><td></td></tr><tr><td>animationend</td><td>会在一个 WXSS animation 动画完成时触发</td><td></td></tr><tr><td>touchforcechange</td><td>在支持 3D Touch 的 iPhone 设备，重按时会触发</td><td>1.9.90</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>除上表之外的其他组件自定义事件如无特殊声明都是非冒泡事件，如 form 的 <code>submit</code> 事件，input 的 <code>input</code> 事件，scroll-view 的 <code>scroll</code> 事件。(详见各个组件)</p></div>',5),b={id:"普通事件绑定",tabindex:"-1"},q=a("a",{class:"header-anchor",href:"#普通事件绑定","aria-hidden":"true"},"#",-1),x=s(`<p>事件绑定的写法类似于组件的属性，如:</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Click here!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>如果用户点击这个 view ，则页面的 <code>handleTap</code> 会被调用。</p><p>事件绑定函数可以是一个数据绑定，如:</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ handlerName }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Click here!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>此时，页面的 <code>this.data.handlerName</code> 必须是一个字符串，指定事件处理函数名；如果它是个空字符串，则这个绑定会失效(可以利用这个特性来暂时禁用一些事件)。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>自基础库版本 1.5.0 起，在大多数组件和自定义组件中， <code>bind</code> 后可以紧跟一个冒号，其含义不变，如 <code>bind:tap</code> 。基础库版本 2.8.1 起，在所有组件中开始提供这个支持。</p></div>`,7),f={id:"绑定并阻止事件冒泡",tabindex:"-1"},w=a("a",{class:"header-anchor",href:"#绑定并阻止事件冒泡","aria-hidden":"true"},"#",-1),_=s(`<p>除 <code>bind</code> 外，也可以用 <code>catch</code> 来绑定事件。与 <code>bind</code> 不同， <code>catch</code> 会阻止事件向上冒泡。</p><p>例如在下边这个例子中，点击 inner view 会先后调用 <code>handleTap3</code> 和 <code>handleTap2</code> (因为 tap 事件会冒泡到 middle view，而 middle view 阻止了 tap 事件冒泡，不再向父节点传递)，点击 middle view 会触发 <code>handleTap2</code>，点击 outer view 会触发 <code>handleTap1</code>。</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  outer view
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>middle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">catchtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    middle view
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inner<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      inner view
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,3),y={id:"互斥事件绑定",tabindex:"-1"},T=a("a",{class:"header-anchor",href:"#互斥事件绑定","aria-hidden":"true"},"#",-1),X=s(`<p>自基础库版本 2.8.2 起，除 <code>bind</code> 和 <code>catch</code> 外，还可以使用 <code>mut-bind</code> 来绑定事件。一个 <code>mut-bind</code> 触发后，如果事件冒泡到其他节点上，其他节点上的 <code>mut-bind</code> 绑定函数不会被触发，但 <code>bind</code> 绑定函数和 <code>catch</code> 绑定函数依旧会被触发。</p><p>换而言之，所有 <code>mut-bind</code> 是“互斥”的，只会有其中一个绑定函数被触发。同时，它完全不影响 <code>bind</code> 和 <code>catch</code> 的绑定效果。</p><p>例如在下边这个例子中，点击 inner view 会先后调用 <code>handleTap3</code> 和 <code>handleTap2</code> ，点击 middle view 会调用 <code>handleTap2</code> 和 <code>handleTap1</code>。</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outer<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">mut-bind:</span>tap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  outer view
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>middle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    middle view
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inner<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">mut-bind:</span>tap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleTap3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      inner view
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,4),S={id:"事件的捕获阶段",tabindex:"-1"},j=a("a",{class:"header-anchor",href:"#事件的捕获阶段","aria-hidden":"true"},"#",-1),N=a("p",null,[n("这是一个很重要的内容，但不适合初学者直接学习，建议先了解其他内容。具体内容见脚注"),a("sup",{class:"footnote-ref"},[a("a",{href:"#footnote2"},"[2]"),a("a",{class:"footnote-anchor",id:"footnote-ref2"})]),n("。")],-1),W={id:"事件对象",tabindex:"-1"},C=a("a",{class:"header-anchor",href:"#事件对象","aria-hidden":"true"},"#",-1),B=s(`<p>如无特殊说明，当组件触发事件时，逻辑层绑定该事件的处理函数会收到一个事件对象。</p><p>BaseEvent 基础事件对象属性列表:</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>基础库版本</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>事件类型</td><td></td></tr><tr><td>timeStamp</td><td>Integer</td><td>事件生成时的时间戳</td><td></td></tr><tr><td>target</td><td>Object</td><td>触发事件的组件的一些属性值集合</td><td></td></tr><tr><td>currentTarget</td><td>Object</td><td>当前组件的一些属性值集合</td><td></td></tr><tr><td>mark</td><td>Object</td><td>事件标记数据</td><td>2.7.1</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>canvas 中的触摸事件不可冒泡，所以没有 <code>currentTarget</code>。</p></div><h4 id="customevent" tabindex="-1"><a class="header-anchor" href="#customevent" aria-hidden="true">#</a> CustomEvent</h4><p>自定义事件对象属性列表(继承 BaseEvent):</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>detail</td><td>Object</td><td>额外的信息</td></tr></tbody></table><h4 id="touchevent" tabindex="-1"><a class="header-anchor" href="#touchevent" aria-hidden="true">#</a> TouchEvent</h4><p>触摸事件对象属性列表(继承 BaseEvent):</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>touches</td><td>Array</td><td>触摸事件，当前停留在屏幕中的触摸点信息的数组</td></tr><tr><td>changedTouches</td><td>Array</td><td>触摸事件，当前变化的触摸点信息的数组</td></tr></tbody></table><h4 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h4><p>代表事件的类型。</p><h4 id="timestamp" tabindex="-1"><a class="header-anchor" href="#timestamp" aria-hidden="true">#</a> timeStamp</h4><p>页面打开到触发事件所经过的毫秒数。</p><h4 id="target" tabindex="-1"><a class="header-anchor" href="#target" aria-hidden="true">#</a> target</h4><p>触发事件的源组件。</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>String</td><td>事件源组件的 <code>id</code></td></tr><tr><td>dataset</td><td>Object</td><td>事件源组件上由 <code>data-</code> 开头的自定义属性组成的集合</td></tr></tbody></table><h4 id="currenttarget" tabindex="-1"><a class="header-anchor" href="#currenttarget" aria-hidden="true">#</a> currentTarget</h4><p>事件绑定的当前组件。</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>String</td><td>当前组件的 <code>id</code></td></tr><tr><td>dataset</td><td>Object</td><td>当前组件上由 <code>data-</code> 开头的自定义属性组成的集合</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>target</code> 和 <code>currentTarget</code> 可以参考上例中，点击 inner view <code>时，handleTap3</code> 收到的事件对象 <code>target</code> 和 <code>currentTarget</code> 都是 <code>inner，而</code> <code>handleTap2</code> 收到的事件对象 <code>target</code> 就是 <code>inner</code>，<code>currentTarget</code> 就是 <code>middle</code>。</p></div><h4 id="dataset" tabindex="-1"><a class="header-anchor" href="#dataset" aria-hidden="true">#</a> dataset</h4><p>在组件节点中可以附加一些自定义数据。这样，在事件中可以获取这些自定义的节点数据，用于事件的逻辑处理。</p><p>在 WXML 中，这些自定义数据以 <code>data-</code> 开头，多个单词由连字符 <code>-</code> 连接。这种写法中，连字符写法会转换成驼峰写法，而大写字符会自动转成小写字符。如:</p><ul><li><code>data-element-type</code>: 最终会呈现为 <code>event.currentTarget.dataset.elementType</code></li><li><code>data-elementType</code>: 最终会呈现为 <code>event.currentTarget.dataset.elementtype</code></li></ul><details class="hint-container details"><summary>例子</summary><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">data-alpha-beta</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-alphaBeta</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bindViewTap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> DataSet Test <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">bindViewTap</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>alphaBeta <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// - 会转为驼峰写法</span>
    event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>alphabeta <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 大写会转为小写</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></details><h4 id="mark" tabindex="-1"><a class="header-anchor" href="#mark" aria-hidden="true">#</a> mark</h4><p>在基础库版本 2.7.1 以上，可以使用 mark 来识别具体触发事件的 <code>target</code> 节点。此外， mark 还可以用于承载一些自定义数据(类似于 <code>dataset</code> )。</p><p>当事件触发时，事件冒泡路径上所有的 mark 会被合并，并返回给事件回调函数。(即使事件不是冒泡事件，也会 mark)</p>`,29),Y={class:"hint-container details"},M=a("summary",null,"例子",-1),V={href:"https://developers.weixin.qq.com/s/boDQoKmu7M7G",target:"_blank",rel:"noopener noreferrer"},E=s(`<div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">mark:</span>myMark</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>last<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bindViewTap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">mark:</span>anotherMark</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leaf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bindButtonTap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>在上述 WXML 中，如果按钮被点击，将触发 <code>bindViewTap</code> 和 <code>bindButtonTap</code> 两个事件，事件携带的 <code>event.mark</code> 将包含 <code>myMark</code> 和 <code>anotherMark</code> 两项。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">bindViewTap</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>myMark <span class="token operator">===</span> <span class="token string">&quot;last&quot;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
    e<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>anotherMark <span class="token operator">===</span> <span class="token string">&quot;leaf&quot;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,3),O=s('<p><code>mark</code> 和 <code>dataset</code> 很相似，主要区别在于: <code>mark</code> 会包含从触发事件的节点到根节点上所有的 <code>mark</code>: 属性值；而 <code>dataset</code> 仅包含一个节点的 <code>data-</code> 属性值。</p><p>细节注意事项:</p><ul><li>如果存在同名的 <code>mark</code> ，父节点的 <code>mark</code> 会被子节点覆盖。</li><li>在自定义组件中接收事件时， <code>mark</code> 不包含自定义组件外的节点的 <code>mark</code> 。</li><li>不同于 <code>dataset</code> ，节点的 <code>mark</code> 不会做连字符和大小写转换。</li></ul><h4 id="touches" tabindex="-1"><a class="header-anchor" href="#touches" aria-hidden="true">#</a> touches</h4><p>touches 是一个数组，每个元素为一个 Touch 对象(canvas 触摸事件中携带的 touches 是 CanvasTouch 数组)。表示当前停留在屏幕上的触摸点。</p><h4 id="touch-对象" tabindex="-1"><a class="header-anchor" href="#touch-对象" aria-hidden="true">#</a> Touch 对象</h4><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>identifier</td><td>Number</td><td>触摸点的标识符</td></tr><tr><td>pageX, pageY</td><td>Number</td><td>距离文档左上角的距离，文档的左上角为原点 ，横向为 X 轴，纵向为 Y 轴</td></tr><tr><td>clientX, clientY</td><td>Number</td><td>距离页面可显示区域(屏幕除去导航条)左上角距离，横向为 X 轴，纵向为 Y 轴</td></tr></tbody></table><h4 id="canvastouch-对象" tabindex="-1"><a class="header-anchor" href="#canvastouch-对象" aria-hidden="true">#</a> CanvasTouch 对象</h4><table><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>特殊说明</th></tr></thead><tbody><tr><td>identifier</td><td>Number</td><td>触摸点的标识符</td><td></td></tr><tr><td>x, y</td><td>Number</td><td>距离 Canvas 左上角的距离，Canvas 的左上角为原点 ，横向为 X 轴，纵向为 Y 轴</td><td></td></tr></tbody></table><h4 id="changedtouches" tabindex="-1"><a class="header-anchor" href="#changedtouches" aria-hidden="true">#</a> changedTouches</h4><p><code>changedTouches</code> 数据格式同 <code>touches</code>。表示有变化的触摸点，如从无变有(<code>touchstart</code>)，位置变化(<code>touchmove</code>)，从有变无(<code>touchend</code>、<code>touchcancel</code>)。</p><h4 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> detail</h4><p>自定义事件所携带的数据，如表单组件的提交事件会携带用户的输入，媒体的错误事件会携带错误信息，详见组件定义中各个事件的定义。</p><p>点击事件的 <code>detail</code> 带有的 <code>x</code>, <code>y</code> 同 <code>pageX</code>, <code>pageY</code> 代表距离文档左上角的距离。</p><hr class="footnotes-sep">',15),I=a("section",{class:"footnotes"},[a("ol",{class:"footnotes-list"},[a("li",{id:"footnote1",class:"footnote-item"},[a("p",null,[n("从基础库版本 2.4.4 开始，支持使用 WXS 函数绑定事件，WXS 函数接受 2 个参数，第一个是 "),a("code",null,"event"),n("，在原有的 "),a("code",null,"event"),n(" 的基础上加了 "),a("code",null,"event.instance"),n(" 对象，第二个参数是 "),a("code",null,"ownerInstance"),n("，和 "),a("code",null,"event.instance"),n(" 一样是一个 "),a("code",null,"ComponentDescriptor"),n(" 对象。具体使用如下:")]),a("p",null,"在组件中绑定和注册事件处理的 WXS 函数。"),a("div",{class:"language-xml","data-ext":"xml"},[a("pre",{class:"language-xml"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("wxs")]),n(),a("span",{class:"token attr-name"},"module"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("wxs"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},"src"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("./test.wxs"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("wxs")]),a("span",{class:"token punctuation"},">")]),n(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("view")]),n(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("tapTest"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},"data-hi"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("WeChat"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},"bindtap"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("{{wxs.tapName}}"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),n(" Click me! "),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("view")]),a("span",{class:"token punctuation"},">")]),n(`
`)])])]),a("div",null,[a("p",null,[a("strong",null,[n("绑定的 WXS 函数必须用 "),a("code",{"v-pre":""},"{{}}"),n(" 括起来")])])]),a("p",null,[a("code",null,"test.wxs"),n(" 文件实现 "),a("code",null,"tapName"),n(" 函数")]),a("div",{class:"language-javascript","data-ext":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token keyword"},"const"),n(),a("span",{class:"token function-variable function"},"tapName"),n(),a("span",{class:"token operator"},"="),n(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[n("event"),a("span",{class:"token punctuation"},","),n(" ownerInstance")]),a("span",{class:"token punctuation"},")"),n(),a("span",{class:"token operator"},"=>"),n(),a("span",{class:"token punctuation"},"{"),n(`
  console`),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"log"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"tap wechat"'),a("span",{class:"token punctuation"},","),n(),a("span",{class:"token constant"},"JSON"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"stringify"),a("span",{class:"token punctuation"},"("),n("event"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),n(`
`),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),n(`

module`),a("span",{class:"token punctuation"},"."),n("exports "),a("span",{class:"token operator"},"="),n(),a("span",{class:"token punctuation"},"{"),n(`
  `),a("span",{class:"token literal-property property"},"tapName"),a("span",{class:"token operator"},":"),n(" tapName"),a("span",{class:"token punctuation"},","),n(`
`),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},";"),n(`
`)])])]),a("p",null,[a("code",null,"ownerInstance"),n(" 包含了一些方法，可以设置组件的样式和 class，具体包含的方法以及为什么要用 WXS 函数响应事件，请点击查看 详情。 "),a("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎")])]),a("li",{id:"footnote2",class:"footnote-item"},[a("p",null,[n("自基础库版本 1.5.0 起，触摸类事件支持捕获阶段。捕获阶段位于冒泡阶段之前，且在捕获阶段中，事件到达节点的顺序与冒泡阶段恰好相反。需要在捕获阶段监听事件时，可以采用 "),a("code",null,"capture-bind"),n("、"),a("code",null,"capture-catch"),n(" 关键字，后者将中断捕获阶段和取消冒泡阶段。")]),a("p",null,[n("在下面的代码中，点击 inner view 会先后调用 "),a("code",null,"handleTap2"),n("、"),a("code",null,"handleTap4"),n("、"),a("code",null,"handleTap3"),n("、"),a("code",null,"handleTap1"),n("。")]),a("div",{class:"language-xml","data-ext":"xml"},[a("pre",{class:"language-xml"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("view")]),n(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("outer"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap1"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"capture-bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap2"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),n(`
  outer view
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("view")]),n(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("inner"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap3"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"capture-bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap4"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),n(`
    inner view
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("view")]),a("span",{class:"token punctuation"},">")]),n(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("view")]),a("span",{class:"token punctuation"},">")]),n(`
`)])])]),a("p",null,[n("如果将上面代码中的第一个 "),a("code",null,"capture-bind"),n(" 改为 "),a("code",null,"capture-catch"),n("，将只触发 "),a("code",null,"handleTap2"),n("。")]),a("div",{class:"language-xml","data-ext":"xml"},[a("pre",{class:"language-xml"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("view")]),n(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("outer"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap1"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"capture-catch:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap2"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),n(`
  outer view
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("view")]),n(),a("span",{class:"token attr-name"},"id"),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("inner"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap3"),a("span",{class:"token punctuation"},'"')]),n(),a("span",{class:"token attr-name"},[a("span",{class:"token namespace"},"capture-bind:"),n("touchstart")]),a("span",{class:"token attr-value"},[a("span",{class:"token punctuation attr-equals"},"="),a("span",{class:"token punctuation"},'"'),n("handleTap4"),a("span",{class:"token punctuation"},'"')]),a("span",{class:"token punctuation"},">")]),n(`
    inner view
  `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("view")]),a("span",{class:"token punctuation"},">")]),n(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("view")]),a("span",{class:"token punctuation"},">")]),n(`
`)])])]),n(),a("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎")])])],-1);function P(L,D){const e=p("Badge"),o=p("ExternalLinkIcon");return l(),u("div",null,[i,a("h2",r,[k,n(" 使用 WXS 函数响应事件 "),t(e,{type:"warning",text:"高级"})]),h,a("h3",m,[v,n(" 事件分类 "),t(e,{text:"重要",type:"error"})]),g,a("h3",b,[q,n(" 普通事件绑定 "),t(e,{text:"重要",type:"error"})]),x,a("h3",f,[w,n(" 绑定并阻止事件冒泡 "),t(e,{text:"重要",type:"error"})]),_,a("h3",y,[T,n(" 互斥事件绑定 "),t(e,{text:"初学无需掌握",type:"warn"})]),X,a("h3",S,[j,n(" 事件的捕获阶段 "),t(e,{text:"初学无需掌握",type:"warn"})]),N,a("h3",W,[C,n(" 事件对象 "),t(e,{text:"了解"}),n(),t(e,{text:"文档"})]),B,a("details",Y,[M,a("p",null,[a("a",V,[n("在开发者工具中预览效果"),t(o)])]),E]),O,I])}const G=c(d,[["render",P],["__file","event.html.vue"]]);export{G as default};
