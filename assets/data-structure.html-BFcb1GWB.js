import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as t,e as c,d as l,a as n,w as a,f as s,r as d,o as i}from"./app-BGIrljxn.js";const u={};function y(g,e){const o=d("RouteLink");return i(),r("div",null,[e[9]||(e[9]=t("<p>JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。</p><ul><li>数值 (number): 整数和小数(比如 <code>1</code> 和 <code>3.14</code>)</li><li>字符串 (string): 文本(比如 <code>Hello World</code>)。</li><li>布尔值 (boolean): 表示真伪的两个特殊值，即 <code>true</code> (真) 和 <code>false</code> (假)</li><li><code>undefined</code>: 表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值</li><li><code>null</code>: 表示空值，即此处的值为空。</li><li>对象 (object): 各种值组成的集合。</li></ul>",2)),c(" more "),l("ul",null,[l("li",null,[n(o,{to:"/code/language/js/types/"},{default:a(()=>e[0]||(e[0]=[s("深入了解数据类型")])),_:1})])]),e[10]||(e[10]=t(`<h2 id="number" tabindex="-1"><a class="header-anchor" href="#number"><span>Number</span></a></h2><p>JavaScript 不区分整数和浮点数，统一用 <code>Number</code> 表示，以下都是合法的 <code>Number</code> 类型:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#B48EAD;">123</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 整数 123</span></span>
<span class="line"><span style="color:#B48EAD;">0.456</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 浮点数 0.456</span></span>
<span class="line"><span style="color:#B48EAD;">1.2345e3</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 科学计数法表示 1.2345x1000，等同于 1234.5</span></span>
<span class="line"><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">99</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 负数</span></span>
<span class="line"><span style="color:#81A1C1;">NaN;</span><span style="color:#616E88;"> // NaN 表示 Not a Number，当无法计算结果时用 NaN 表示</span></span>
<span class="line"><span style="color:#81A1C1;">Infinity;</span><span style="color:#616E88;"> // Infinity 表示无限大，当数值超过了 JavaScript 的 Number 所能表示的最大值时，就表示为 Infinity</span></span></code></pre></div>`,3)),l("ul",null,[l("li",null,[n(o,{to:"/code/language/js/types/number.html"},{default:a(()=>e[1]||(e[1]=[s("深入了解 Number")])),_:1})])]),e[11]||(e[11]=l("h2",{id:"字符串",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#字符串"},[l("span",null,"字符串")])],-1)),e[12]||(e[12]=l("p",null,[s("字符串 (String) 是以单引号 "),l("code",null,"'"),s(" 或双引号 "),l("code",null,'"'),s(" 括起来的任意文本，比如 "),l("code",null,"'abc'"),s("，"),l("code",null,'"xyz"'),s(" 等等。")],-1)),l("ul",null,[l("li",null,[n(o,{to:"/code/language/js/guide/string.html"},{default:a(()=>e[2]||(e[2]=[s("字符串入门")])),_:1})]),l("li",null,[n(o,{to:"/code/language/js/types/string.html"},{default:a(()=>e[3]||(e[3]=[s("深入了解 String")])),_:1})])]),e[13]||(e[13]=t(`<h2 id="布尔值" tabindex="-1"><a class="header-anchor" href="#布尔值"><span>布尔值</span></a></h2><p>布尔值 (Boolean) 和布尔代数的表示完全一致，一个布尔值只有 <code>true</code>、<code>false</code> 两种值，要么是 <code>true</code>，要么是 <code>false</code>，可以直接用 <code>true</code>、<code>false</code> 表示布尔值，也可以通过布尔运算计算出来:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">true;</span><span style="color:#616E88;"> // 这是一个 true 值</span></span>
<span class="line"><span style="color:#81A1C1;">false;</span><span style="color:#616E88;"> // 这是一个 false 值</span></span>
<span class="line"><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;"> &gt;</span><span style="color:#B48EAD;"> 1</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 这是一个 true 值</span></span>
<span class="line"><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;"> &gt;=</span><span style="color:#B48EAD;"> 3</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // 这是一个 false 值</span></span></code></pre></div><p>下列运算符会返回布尔值:</p><ul><li>前置逻辑运算符: <code>!</code> (Not)</li><li>相等运算符: <code>===</code>，<code>!==</code>，<code>==</code>，<code>!=</code></li><li>比较运算符: <code>&gt;</code>，<code>&gt;=</code>，<code>&lt;</code>，<code>&lt;=</code></li></ul><hr>`,6)),l("ul",null,[l("li",null,[n(o,{to:"/code/language/js/guide/boolean.html"},{default:a(()=>e[4]||(e[4]=[s("布尔值入门")])),_:1})])]),e[14]||(e[14]=t('<h2 id="null-和-undefined" tabindex="-1"><a class="header-anchor" href="#null-和-undefined"><span>null 和 undefined</span></a></h2><p><code>null</code> 表示一个 “空” 的值，它和 <code>0</code> 以及空字符串 <code>&#39;&#39;</code> 不同，<code>0</code> 是一个数值，<code>&#39;&#39;</code> 表示长度为 0 的字符串，而 <code>null</code> 表示“空”。</p><p>在其他语言中，也有类似 JavaScript 的 <code>null</code> 的表示，例如 Java 也用 <code>null</code>，Swift 用 <code>nil</code>，Python 用 <code>None</code> 表示。但是，在 JavaScript 中，还有一个和 <code>null</code> 类似的 <code>undefined</code>，它表示 “未定义”。</p><p>JavaScript 的设计者希望用 <code>null</code> 表示一个空的值，而 <code>undefined</code> 表示值未定义。事实证明，这并没有什么卵用，区分两者的意义不大。大多数情况下，我们都应该用 <code>null</code>。<code>undefined</code> 仅仅在判断函数参数是否传递的情况下有用。</p><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h2><p>数组 (Array) 是一组<strong>按顺序</strong>排列的<strong>集合</strong>，集合的每个值称为<strong>元素</strong>。JavaScript 的数组可以包括任意数据类型。例如:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">[</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3.14</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Hello</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> true</span><span style="color:#D8DEE9FF;">]</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>上述数组包含 6 个元素。数组用 <code>[]</code> 表示，元素之间用 <code>,</code> 分隔。</p>',8)),l("ul",null,[l("li",null,[n(o,{to:"/code/language/js/guide/array.html"},{default:a(()=>e[5]||(e[5]=[s("数组入门")])),_:1})]),l("li",null,[n(o,{to:"/code/language/js/types/array.html"},{default:a(()=>e[6]||(e[6]=[s("深入了解 Array")])),_:1})])]),e[15]||(e[15]=t(`<h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象"><span>对象</span></a></h2><p>JavaScript 的对象 (Object) 是一组由 <strong><code>键-值</code></strong> 组成的<strong>无序</strong>集合，例如:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">let</span><span style="color:#D8DEE9;"> person</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#88C0D0;">  name</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">Mr.Hope</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  isHandsome</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> true</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  birth</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1998</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  school</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">No.1 Middle School</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  height</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 1.76</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  weight</span><span style="color:#ECEFF4;">:</span><span style="color:#B48EAD;"> 50</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#88C0D0;">  car</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">,</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span></code></pre></div><p>JavaScript 对象的键都是字符串类型，值可以是任意数据类型。上述 <code>person</code> 对象一共定义了 6 个键值对，其中每个键又称为对象的属性，例如，<code>person</code> 的 <code>name</code> 属性为 <code>&#39;Bob&#39;</code>，<code>zipcode</code> 属性为 <code>null</code>。</p><p>要获取一个对象的属性，我们用 <code>Object.Key</code> 的方式:</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9;">person</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">name</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // &#39;Mr.Hope&#39;</span></span>
<span class="line"><span style="color:#D8DEE9;">person</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">zipcode</span><span style="color:#81A1C1;">;</span><span style="color:#616E88;"> // null</span></span></code></pre></div>`,6)),l("ul",null,[l("li",null,[n(o,{to:"/code/language/js/guide/object.html"},{default:a(()=>e[7]||(e[7]=[s("对象入门")])),_:1})]),l("li",null,[n(o,{to:"/code/language/js/types/object.html"},{default:a(()=>e[8]||(e[8]=[s("深入了解 Object")])),_:1})])])])}const f=p(u,[["render",y],["__file","data-structure.html.vue"]]),h=JSON.parse('{"path":"/code/language/js/guide/data-structure.html","title":"数据类型","lang":"zh-CN","frontmatter":{"title":"数据类型","icon":"type","date":"2019-09-15T00:00:00.000Z","category":"JavaScript","tag":["快速上手"],"description":"JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。 数值 (number): 整数和小数(比如 1 和 3.14) 字符串 (string): 文本(比如 Hello World)。 布尔值 (boolean): 表示真伪的两个特殊值，即 true (真) 和 false (假) undefined...","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/js/guide/data-structure.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"数据类型"}],["meta",{"property":"og:description","content":"JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。 数值 (number): 整数和小数(比如 1 和 3.14) 字符串 (string): 文本(比如 Hello World)。 布尔值 (boolean): 表示真伪的两个特殊值，即 true (真) 和 false (假) undefined..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:46:58.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"快速上手"}],["meta",{"property":"article:published_time","content":"2019-09-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-09-15T00:00:00.000Z\\",\\"dateModified\\":\\"2022-02-06T16:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"Number","slug":"number","link":"#number","children":[]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":2,"title":"布尔值","slug":"布尔值","link":"#布尔值","children":[]},{"level":2,"title":"null 和 undefined","slug":"null-和-undefined","link":"#null-和-undefined","children":[]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"对象","slug":"对象","link":"#对象","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1644166018000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":6}]},"readingTime":{"minutes":2.79,"words":836},"filePathRelative":"code/language/js/guide/data-structure.md","localizedDate":"2019年9月15日","excerpt":"<p>JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。</p>\\n<ul>\\n<li>数值 (number): 整数和小数(比如 <code>1</code> 和 <code>3.14</code>)</li>\\n<li>字符串 (string): 文本(比如 <code>Hello World</code>)。</li>\\n<li>布尔值 (boolean): 表示真伪的两个特殊值，即 <code>true</code> (真) 和 <code>false</code> (假)</li>\\n<li><code>undefined</code>: 表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值</li>\\n<li><code>null</code>: 表示空值，即此处的值为空。</li>\\n<li>对象 (object): 各种值组成的集合。</li>\\n</ul>\\n","autoDesc":true}');export{f as comp,h as data};
