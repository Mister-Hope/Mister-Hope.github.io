import{_ as e,X as p,Y as o,$ as s,a0 as a,Z as t,a3 as l,C as c}from"./framework-a91f7991.js";const r="/assets/flush-privileges-1d83c17a.png",d="/assets/result-08745d47.png",k={},i=s("p",null,"MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，属于 Oracle 旗下产品。",-1),u=s("p",null,"它是最流行的关系型数据库管理系统之一，是最好的 RDBMS 关系数据库管理系统应用软件之一",-1),m=s("p",null,"MySQL 使用 SQL 语言，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站都选择 MySQL 作为网站数据库。",-1),y=s("h2",{id:"安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),a(" 安装")],-1),v={href:"https://dev.mysql.com/downloads/",target:"_blank",rel:"noopener noreferrer"},g=l(`<p>在这个下载界面会有几个版本的选择,</p><ol><li><p>MySQL Community Server 社区版本，开源免费，但不提供官方技术支持。</p></li><li><p>MySQL Enterprise Edition 企业版本，需付费，可以试用 30 天。</p></li><li><p>MySQL Cluster 集群版，开源免费。可将几个 MySQL Server 封装成一个 Server。</p></li><li><p>MySQL Cluster CGE 高级集群版，需付费。</p></li><li><p>MySQL Workbench ( GUITOOL )一款专为 MySQL 设计的 ER/数据库建模工具。它是著名的数据库设计工具 DBDesigner4 的继任者。</p><p>MySQL Workbench 又分为两个版本，分别是社区版( MySQL Workbench OSS )、商用版( MySQL WorkbenchSE )。</p></li></ol><p>MySQL Community Server 是开源免费的，这也是我们通常用的 MySQL 的版本。</p><ol><li><p>下载后得到 <code>.zip</code> 压缩包.</p></li><li><p>解压到自己想要安装到的目录</p></li><li><p>添加环境变量: 我的电脑 → 属性 → 高级 → 环境变量</p><p>选择 PATH，在其后面添加: mysql 安装文件下面的 bin 文件夹</p></li><li><p>新建 mysql 配置文件</p><p>在 mysql 文件夹中新建 <code>my.ini</code> 文件,编辑 <code>my.ini</code> 文件,注意替换路径位置</p><div class="language-ini" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysqld</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">basedir</span><span class="token punctuation">=</span><span class="token value attr-value">D:\\Program Files\\mysql-5.7\\</span>
<span class="token key attr-name">datadir</span><span class="token punctuation">=</span><span class="token value attr-value">D:\\Program Files\\mysql-5.7\\data\\</span>
<span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">3306</span>
skip-grant-tables
</code></pre></div></li><li><p>启动管理员模式下的 CMD，输入 <code>cd /d bin目录路径</code> 将路径切换至 mysql 下的 bin 目录，然后输入 <code>mysqld –install</code> (安装 mysql )</p></li><li><p>再输入 <code>mysqld --initialize-insecure --user=mysql</code> 初始化数据文件</p></li><li><p>然后输入 <code>net start mysql</code> 再次启动 mysql,然后用命令 <code>mysql –u root –p</code> 进入 mysql 管理界面 (密码可为空)</p></li><li><p>进入界面后更改 root 密码</p><p><code>update mysql.user set authentication_string=password(&#39;123456&#39;) where user=&#39;root&#39; and Host = &#39;localhost&#39;;</code></p></li><li><p>刷新权限 <code>flush privileges;</code></p></li></ol><p><img src="`+r+`" alt="flush privileges"></p><ol><li><p>修改 <code>my.ini</code> 文件删除最后一句 <code>skip-grant-tables</code></p><div class="language-ini" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysqld</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">basedir</span><span class="token punctuation">=</span><span class="token value attr-value">D:\\work\\mysql-5.7.19\\</span>
<span class="token key attr-name">datadir</span><span class="token punctuation">=</span><span class="token value attr-value">D:\\work\\mysql-5.7.19\\data\\</span>
<span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">3306</span>
<span class="token comment">#skip-grant-tables</span>
</code></pre></div></li><li><p>重启 mysql 即可正常使用</p><div class="language-SQL" data-ext="SQL"><pre class="language-SQL"><code>net stop mysql
net start mysql
</code></pre></div></li><li><p>连接上测试出现以下结果就安装好了 <img src="`+d+`" alt="result"></p></li></ol><h2 id="连接数据库" tabindex="-1"><a class="header-anchor" href="#连接数据库" aria-hidden="true">#</a> 连接数据库</h2><ol><li><p>打开 MySQL 命令窗口</p><ul><li>在 DOS 命令行窗口进入 安装目录 <code>\\mysql\\bin</code></li><li>可设置环境变量，设置了环境变量，可以在任意目录打开</li></ul></li><li><p>输入连接数据库语句: <code>mysql -h 服务器主机地址 -u 用户名 -p 用户密码</code></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>-p</code> 后面不能多加空格，否则会被当做密码的内容，导致登录失败。</p></div></li></ol><h2 id="几个基本的数据库操作命令" tabindex="-1"><a class="header-anchor" href="#几个基本的数据库操作命令" aria-hidden="true">#</a> 几个基本的数据库操作命令</h2><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>mysql -h 服务器主机地址 -u 用户名 -p 用户密码 连接数据库

update user set password=password(&#39;123456&#39;)where user=&#39;root&#39;; 修改密码

flush privileges; 刷新数据库

show databases; 显示所有数据库

use dbname；打开某个数据库

show tables; 显示数据库 mysql 中所有的表

describe user; 显示表 mysql 数据库中 user 表的列信息

create database name; 创建数据库

use databasename; 选择数据库

exit; 退出 Mysql

? 命令关键词 : 寻求帮助

-- 表示注释
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库基本操作" tabindex="-1"><a class="header-anchor" href="#数据库基本操作" aria-hidden="true">#</a> 数据库基本操作</h2><h3 id="操作数据库" tabindex="-1"><a class="header-anchor" href="#操作数据库" aria-hidden="true">#</a> 操作数据库</h3><ol><li><p>创建数据库</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> name<span class="token punctuation">;</span>
</code></pre></div></li><li><p>显示数据库</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
</code></pre></div><p>注意: 为了不再显示的时候乱码，要修改数据库默认编码。以下以 <code>GBK</code> 编码页面为例进行说明:</p><ol><li><p>修改 MYSQL 的配置文件: <code>my.ini</code> 里面修改 <code>default-character-set=gbk</code></p></li><li><p>代码运行时修改:</p><ol><li>Java 代码: <code>jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=gbk</code></li><li>PHP 代码: <code>header(&quot;Content-Type:text/html;charset=gb2312&quot;);</code></li><li>C 语言代码: <code>int mysql_set_character_set( MYSQL * mysql, char * csname)；</code> 该函数用于为当前连接设置默认的字符集。字符串 <code>csname</code> 指定了 1 个有效的字符集名称。连接校对成为字符集的默认校对。该函数的工作方式与 <code>SET NAMES</code> 语句类似，但它还能设置 mysql → charset 的值，从而影响了由 <code>mysql_real_escape_string()</code> 设置的字符集。</li></ol></li></ol></li><li><p>删除数据库</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> name<span class="token punctuation">;</span>
</code></pre></div><ul><li>删除一个已经确定存在的数据库</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> name<span class="token punctuation">;</span>
</code></pre></div><ul><li>删除一个不确定存在的数据库</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> name<span class="token punctuation">;</span>
</code></pre></div></li><li><p>选择数据库</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> name<span class="token punctuation">;</span>
</code></pre></div><p>use 语句可以通过 MySQL 把 name 数据库作为默认 (当前) 数据库使用，用于后续语句。该数据库保持为默认数据库，直到语段的结尾，或者直到发布一个不同的 USE 语句</p><p>使用 use 语句为一个特定的当前的数据库做标记，不会阻碍您访问其它数据库中的表。下面的例子可以从 db1 数据库访问作者表，并从 db2 数据库访问编辑表</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">USE</span> db1<span class="token punctuation">;</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> author_name<span class="token punctuation">,</span>editor_name <span class="token keyword">FROM</span> author<span class="token punctuation">,</span>db2<span class="token punctuation">.</span>editor
    <span class="token operator">-</span><span class="token operator">&gt;</span>        <span class="token keyword">WHERE</span> author<span class="token punctuation">.</span>editor_id <span class="token operator">=</span> db2<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>editor_id<span class="token punctuation">;</span>
</code></pre></div><p>USE 语句被设立出来，用于与 Sybase 相兼容。</p><p>use 数据库后，使用 <code>show databases</code> 就能查询所有数据库，如果想跳到其他数据库，用 use 其他数据库名字就可以了。</p></li><li><p>当前选择的数据库</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>MySQL 中 <code>SELECT</code> 命令类似于其他编程语言里的 <code>print</code> 或者 <code>write</code>，您可以用它来显示一个字符串、数字、数学表达式的结果等等,</p><ol><li><p>显示 MYSQL 的版本</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token operator">|</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token operator">|</span> <span class="token number">6.0</span><span class="token number">.4</span><span class="token operator">-</span>alpha<span class="token operator">-</span>community <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>
</code></pre></div></li><li><p>显示当前时间</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> <span class="token number">2009</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">15</span> <span class="token number">22</span>:<span class="token number">35</span>:<span class="token number">32</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>
</code></pre></div></li><li><p>显示年月日</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> DAYOFMONTH<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span> DAYOFMONTH<span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token operator">|</span>                       <span class="token number">15</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
</code></pre></div><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">MONTH</span><span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span> <span class="token keyword">MONTH</span><span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token operator">|</span>                   <span class="token number">9</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre></div><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token keyword">CURRENT_DATE</span><span class="token punctuation">)</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token operator">|</span>               <span class="token number">2009</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">--------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre></div></li><li><p>显示字符串</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token string">&quot;welecome to my blog!&quot;</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------------+</span>
<span class="token operator">|</span> welecome <span class="token keyword">to</span> my blog<span class="token operator">!</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+</span>
<span class="token operator">|</span> welecome <span class="token keyword">to</span> my blog<span class="token operator">!</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre></div></li><li><p>当计算器用</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">25</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----------------------+</span>
<span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">25</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+</span>
<span class="token operator">|</span>                <span class="token number">26.60</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----------------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre></div></li><li><p>串接字符串</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span>f_name<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> l_name<span class="token punctuation">)</span>
<span class="token keyword">AS</span> Name
<span class="token keyword">from</span> employee_data
<span class="token keyword">where</span> title <span class="token operator">=</span> <span class="token string">&#39;Marketing Executive&#39;</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">---------------+</span>
<span class="token operator">|</span> Name          <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------+</span>
<span class="token operator">|</span> Monica Sehgal <span class="token operator">|</span>
<span class="token operator">|</span> Hal Simlai    <span class="token operator">|</span>
<span class="token operator">|</span> Joseph Irvine <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">---------------+</span>
<span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意: 这里用到<code>CONCAT()</code>函数，用来把字符串串接起来。另外，用 <code>AS</code> 给结果列 &#39;CONCAT(f_name, &quot; &quot;, l_name)&#39; 起了个假名。</p></li></ol></li></ol><h3 id="操作数据表" tabindex="-1"><a class="header-anchor" href="#操作数据表" aria-hidden="true">#</a> 操作数据表</h3><ol><li><p>创建数据表</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span> <span class="token operator">&lt;</span>字段名<span class="token number">1</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span>类型<span class="token number">1</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>字段名n<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>类型n<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>例如，建立一个名为 User 的表，</p><table><thead><tr><th>字段名</th><th>数字类型</th><th>数据宽度</th><th>是否为空</th><th>是否主键</th><th>自动增加</th><th>默认值</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>4</td><td>否</td><td>primary key</td><td>auto_increment</td><td></td></tr><tr><td>name</td><td>char</td><td>20</td><td>否</td><td></td><td></td><td></td></tr><tr><td>sex</td><td>int</td><td>4</td><td>否</td><td></td><td></td><td>0</td></tr></tbody></table><div class="language-SQL" data-ext="SQL"><pre class="language-SQL"><code>mysql&gt; create table MyClass(
    -&gt; id int(4) not null primary key auto_increment,
    -&gt; name char(20) not null,
    -&gt; sex int(4) not null default &#39;0&#39;);
</code></pre></div></li><li><p>删除数据表</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span>
</code></pre></div><ul><li><p><code>DROP TABLE</code> 用于取消一个或多个表。您必须有每个表的 <code>DROP</code> 权限。所有的表数据和表定义会被取消，所以使用本语句要小心!</p></li><li><p>注意: 对于一个带分区的表，<code>DROP TABLE</code> 会永久性地取消表定义，取消各分区，并取消储存在这些分区中的所有数据。<code>DROP TABLE</code> 还会取消与被取消的表有关联的分区定义 (.par) 文件。</p></li><li><p>对于不存在的表，使用<code>IF EXISTS</code>用于防止错误发生。当使用<code>IF EXISTS</code>时，对于每个不存在的表，会生成一个<code>NOTE</code>。</p></li></ul></li><li><p>向表中插入数据</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span> <span class="token operator">&lt;</span>字段名<span class="token number">1</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>字段名n <span class="token operator">&gt;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">values</span> <span class="token punctuation">(</span> 值<span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">(</span> 值n <span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre></div><p>例如: 往表 MyClass 中插入二条记录, 编号为 1 的名为 Tom 的性别为 0, 编号为 2 的名为 Joan 的性别为 1</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> MyClass <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;Joan&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>注意: <code>insert into</code> 每次只能向表中插入一条记录。</p></li><li><p>查询数据表中的数据</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">&lt;</span>字段<span class="token number">1</span>，字段<span class="token number">2</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span> 表名 <span class="token operator">&gt;</span> <span class="token keyword">where</span> <span class="token operator">&lt;</span> 表达式 <span class="token operator">&gt;</span>
</code></pre></div><ol><li><p>查询所有行 例如: 查看表 MyClass 中所有数据</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> MyClass<span class="token punctuation">;</span>
</code></pre></div></li><li><p>查询前几行数据 例如: 查看表 MyClass 中前 2 行数据</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> MyClass <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre></div></li></ol><p>select 一般配合 where 使用，以查询更精确更复杂的数据</p></li><li><p>删除数据表中的数据</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 表达式
</code></pre></div><p>例如: 删除表 MyClass 中编号为 1 的记录</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">delete</span> <span class="token keyword">from</span> MyClass <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre></div><p>下面是一个删除数据前后表的对比。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> MyClass<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> sex <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> Tom  <span class="token operator">|</span>   <span class="token number">0</span> <span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> Joan <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">delete</span> <span class="token keyword">from</span> MyClass <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> MyClass<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> sex <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> Joan <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改数据表中的数据</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 字段<span class="token operator">=</span>新值<span class="token punctuation">,</span>… <span class="token keyword">where</span> 条件
</code></pre></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> MyClass<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> sex <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> Joan <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">update</span> MyClass <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">&#39;Mary&#39;</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
<span class="token keyword">Rows</span> <span class="token keyword">matched</span>: <span class="token number">1</span>  Changed: <span class="token number">1</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>

mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> MyClass<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> sex <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> Mary <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">----+------+-----+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>UPDATE</code>语法可以用新值更新原有表行中的各列。</li><li><code>SET</code>子句指示要修改哪些列和要给予哪些值。</li><li><code>WHERE</code>子句指定应更新哪些行。如果没有<code>WHERE</code>子句，则更新所有的行。</li></ul></li><li><p>增加数据</p><ol><li><p>增加字段</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 字段 类型 其他<span class="token punctuation">;</span>
</code></pre></div><p>例如: 在表 MyClass 中添加了一个字段 age，类型为 int(4)，默认值为 0</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">alter</span> <span class="token keyword">table</span> MyClass <span class="token keyword">add</span> age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;0&#39;</span>
</code></pre></div></li><li><p>修改原字段名称及类型:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name CHANGE old_field_name new_field_name field_type<span class="token punctuation">;</span>
</code></pre></div></li><li><p>删除字段:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>MySQL <span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">DROP</span> field_name<span class="token punctuation">;</span>
</code></pre></div></li><li><p>加索引</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> <span class="token keyword">index</span> 索引名 <span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">[</span>，字段名<span class="token number">2</span> …<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>例子:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">alter</span> <span class="token keyword">table</span> employee <span class="token keyword">add</span> <span class="token keyword">index</span> emp_name <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>加主关键字的索引</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>例子:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">alter</span> <span class="token keyword">table</span> employee <span class="token keyword">add</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>加唯一限制条件的索引</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> <span class="token keyword">unique</span> 索引名 <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>例子:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">alter</span> <span class="token keyword">table</span> employee <span class="token keyword">add</span> <span class="token keyword">unique</span> emp_name2<span class="token punctuation">(</span>cardnumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>删除某个索引</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> <span class="token keyword">index</span> 索引名<span class="token punctuation">;</span>
</code></pre></div><p>例子:</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> employee <span class="token keyword">drop</span> <span class="token keyword">index</span> emp_name<span class="token punctuation">;</span>
</code></pre></div></li></ol></li><li><p>修改表名</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">rename</span> <span class="token keyword">table</span> 原表名 <span class="token keyword">to</span> 新表名<span class="token punctuation">;</span>
</code></pre></div><ul><li><p>当您执行 <code>RENAME</code> 时，您不能有任何锁定的表或活动的事务。您同样也必须有对原初表的 <code>ALTER</code> 和 <code>DROP</code> 权限，以及对新表的 <code>CREATE</code> 和 <code>INSERT</code> 权限。</p></li><li><p>如果在多表更名中，MySQL 遭遇到任何错误，它将对所有被更名的表进行倒退更名，将每件事物退回到最初状态。</p></li><li><p><code>RENAME TABLE</code> 在 <code>MySQL 3.23.23</code> 中被加入。</p></li></ul></li></ol>`,15);function b(w,q){const n=c("ExternalLinkIcon");return p(),o("div",null,[i,u,m,y,s("p",null,[a("下载地址: "),s("a",v,[a("https://dev.mysql.com/downloads/"),t(n)])]),g])}const x=e(k,[["render",b],["__file","intro.html.vue"]]);export{x as default};
