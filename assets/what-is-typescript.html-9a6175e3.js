import{_ as c,X as l,Y as o,$ as e,a0 as t,Z as r,a1 as a,a2 as s,a3 as h,C as n}from"./framework-a91f7991.js";const _={},d=e("p",null,"首先，我对 TypeScript 的理解如下:",-1),u={href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},y=e("strong",null,"类型系统",-1),S=e("strong",null,"对 ES6 的支持",-1),f={href:"https://github.com/Microsoft/TypeScript",target:"_blank",rel:"noopener noreferrer"},T={href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},g=e("blockquote",null,[e("p",null,"TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. Any browser. Any host. Any OS. Open source.")],-1),m=e("p",null,"翻译成中文即是:",-1),b=e("blockquote",null,[e("p",null,"TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上。TypeScript 编译工具可以运行在任何服务器和任何系统上。TypeScript 是开源的。")],-1),w=e("h2",{id:"为什么选择-typescript",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为什么选择-typescript","aria-hidden":"true"},"#"),t(" 为什么选择 TypeScript")],-1),x={href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},k=e("h3",{id:"typescript-增加了代码的可读性和可维护性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#typescript-增加了代码的可读性和可维护性","aria-hidden":"true"},"#"),t(" TypeScript 增加了代码的可读性和可维护性")],-1),v=e("ul",null,[e("li",null,"类型系统实际上是最好的文档，大部分的函数看看类型的定义就可以知道如何使用了"),e("li",null,"可以在编译阶段就发现大部分错误，这总比在运行时候出错好"),e("li",null,"增强了编辑器和 IDE 的功能，包括代码补全、接口提示、跳转到定义、重构等")],-1),E=e("h3",{id:"typescript-非常包容",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#typescript-非常包容","aria-hidden":"true"},"#"),t(" TypeScript 非常包容")],-1),J=e("li",null,[t("TypeScript 是 JavaScript 的超集，"),e("code",null,".js"),t(" 文件可以直接重命名为 "),e("code",null,".ts"),t(" 即可")],-1),N=e("li",null,"可以定义从简单到复杂的几乎一切类型",-1),C=e("li",null,"即使 TypeScript 编译报错，也可以生成 JavaScript 文件",-1),I=e("li",null,"兼容第三方库，即使第三方库不是用 TypeScript 写的，也可以编写单独的类型文件供 TypeScript 读取",-1),V=h('<h3 id="typescript-拥有活跃的社区" tabindex="-1"><a class="header-anchor" href="#typescript-拥有活跃的社区" aria-hidden="true">#</a> TypeScript 拥有活跃的社区</h3><ul><li>大部分第三方库都有提供给 TypeScript 的类型定义文件</li><li>Google 开发的 Angular2 就是使用 TypeScript 编写的</li><li>TypeScript 拥抱了 ES6 规范，也支持部分 ESNext 草案的规范</li></ul><h3 id="typescript-的缺点" tabindex="-1"><a class="header-anchor" href="#typescript-的缺点" aria-hidden="true">#</a> TypeScript 的缺点</h3><p>任何事物都是有两面性的，我认为 TypeScript 的弊端在于:</p><ul><li>有一定的学习成本，需要理解接口(Interfaces)、泛型(Generics)、类(Classes)、枚举类型(Enums)等前端工程师可能不是很熟悉的概念</li><li>短期可能会增加一些开发成本，毕竟要多写一些类型的定义，不过对于一个需要长期维护的项目，TypeScript 能够减少其维护成本</li><li>集成到构建流程需要一些工作量</li><li>可能和一些库结合的不是很完美</li></ul><p>大家可以根据自己团队和项目的情况判断是否需要使用 TypeScript。</p>',6);function A(L,B){const i=n("ExternalLinkIcon"),p=n("RouterLink");return l(),o("div",null,[d,e("p",null,[e("a",u,[t("TypeScript"),r(i)]),t(" 是 JavaScript 的一个超集，主要提供了"),y,t("和"),S,t("，它由 Microsoft 开发，代码"),e("a",f,[t("开源于 GitHub"),r(i)]),t(" 上。")]),e("p",null,[t("其次引用"),e("a",T,[t("官网"),r(i)]),t("的定义:")]),g,m,b,a(" more "),w,e("p",null,[e("a",x,[t("TypeScript 官网"),r(i)]),t("列举了一些优势，不过我更愿意自己总结一下:")]),k,v,E,e("ul",null,[J,e("li",null,[t("即使不显式的定义类型，也能够自动做出"),r(p,{to:"/code/language/typescript/basics/type-inference.html"},{default:s(()=>[t("类型推论")]),_:1})]),N,C,I]),V])}const q=c(_,[["render",A],["__file","what-is-typescript.html.vue"]]);export{q as default};
