import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,d as l,e as o,b as p}from"./app-DHOHoluL.js";const e={},t=o("p",null,"列表生成式即 List Comprehensions，是 Python 内置的非常简单却强大的可以用来创建 list 的生成式。",-1),E=p(`<p>举个例子，要生成 list <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code> 可以用 <code>list(range(1, 11))</code>:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#88C0D0;"> list</span><span style="color:#ECEFF4;">(</span><span style="color:#88C0D0;">range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">))</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 5</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 6</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 7</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 8</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 9</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 10</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>但如果要生成 <code>[1x1, 2x2, 3x3, ..., 10x10]</code> 怎么做? 方法一是循环:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#D8DEE9FF;"> L </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> []</span></span>
<span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> for</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">in</span><span style="color:#88C0D0;"> range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">):</span></span>
<span class="line"><span style="color:#D8DEE9FF;">...    L</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">append</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> x</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">...</span></span>
<span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#D8DEE9FF;"> L</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 9</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 16</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 25</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 36</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 49</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 64</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 81</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 100</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>但是循环太繁琐，而列表生成式则可以用一行语句代替循环生成上面的 list:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">in</span><span style="color:#88C0D0;"> range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 9</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 16</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 25</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 36</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 49</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 64</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 81</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 100</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>写列表生成式时，把要生成的元素 <code>x * x</code> 放到前面，后面跟 for 循环，就可以把 list 创建出来，十分有用，多写几次，很快就可以熟悉这种语法。</p><p>for 循环后面还可以加上 if 判断，这样我们就可以筛选出仅偶数的平方:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">*</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">in</span><span style="color:#88C0D0;"> range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">%</span><span style="color:#B48EAD;"> 2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">4</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 16</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 36</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 64</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 100</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>还可以使用两层循环，可以生成全排列:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">m </span><span style="color:#81A1C1;">+</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> m </span><span style="color:#81A1C1;">in</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">ABC</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;"> for</span><span style="color:#D8DEE9FF;"> n </span><span style="color:#81A1C1;">in</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">XYZ</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">AX</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">AY</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">AZ</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">BX</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">BY</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">BZ</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">CX</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">CY</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">CZ</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>三层和三层以上的循环就很少用到了。</p><p>运用列表生成式，可以写出非常简洁的代码。例如，列出当前目录下的所有文件和目录名，可以通过一行代码实现:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> import</span><span style="color:#D8DEE9FF;"> os </span><span style="color:#616E88;"># 导入os模块，模块的概念后面讲到</span></span>
<span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">d </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> d </span><span style="color:#81A1C1;">in</span><span style="color:#D8DEE9FF;"> os</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">listdir</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">.</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">)]</span><span style="color:#616E88;"> # os.listdir可以列出文件和目录</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">.emacs.d</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">.ssh</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">.Trash</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Adlm</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Applications</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Desktop</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Documents</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Downloads</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Library</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Movies</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Music</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Pictures</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Public</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">VirtualBox VMs</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Workspace</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">XCode</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>for 循环其实可以同时使用两个甚至多个变量，比如 dict 的 <code>items()</code> 可以同时迭代 key 和 value:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#D8DEE9FF;"> d </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">x</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">A</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">y</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">B</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">z</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">C</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;"> }</span></span>
<span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#81A1C1;"> for</span><span style="color:#D8DEE9FF;"> k</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> v </span><span style="color:#81A1C1;">in</span><span style="color:#D8DEE9FF;"> d</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">items</span><span style="color:#ECEFF4;">():</span></span>
<span class="line"><span style="color:#D8DEE9FF;">...     </span><span style="color:#88C0D0;">print</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">k</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">=</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> v</span><span style="color:#ECEFF4;">)</span></span>
<span class="line"><span style="color:#D8DEE9FF;">...</span></span>
<span class="line"><span style="color:#D8DEE9FF;">y </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> B</span></span>
<span class="line"><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> A</span></span>
<span class="line"><span style="color:#D8DEE9FF;">z </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> C</span></span></code></pre></div><p>因此，列表生成式也可以使用两个变量来生成 list:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#D8DEE9FF;"> d </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> {</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">x</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">A</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">y</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">B</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">z</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">C</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;"> }</span></span>
<span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">k </span><span style="color:#81A1C1;">+</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">=</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;"> +</span><span style="color:#D8DEE9FF;"> v </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> k</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> v </span><span style="color:#81A1C1;">in</span><span style="color:#D8DEE9FF;"> d</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">items</span><span style="color:#ECEFF4;">()]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">y=B</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">x=A</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">z=C</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>最后把一个 list 中所有的字符串变成小写:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#D8DEE9FF;"> L </span><span style="color:#81A1C1;">=</span><span style="color:#ECEFF4;"> [</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">Hello</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">World</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">IBM</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">Apple</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">s</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">lower</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;"> for</span><span style="color:#D8DEE9FF;"> s </span><span style="color:#81A1C1;">in</span><span style="color:#D8DEE9FF;"> L</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">hello</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">world</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">ibm</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#ECEFF4;"> &#39;</span><span style="color:#A3BE8C;">apple</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> ... </span><span style="color:#81A1C1;">else</span></span></code></pre></div><p>使用列表生成式的时候，有些童鞋经常搞不清楚 if...else 的用法。</p><p>例如，以下代码正常输出偶数:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">in</span><span style="color:#88C0D0;"> range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">%</span><span style="color:#B48EAD;"> 2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#B48EAD;">2</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 6</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 8</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 10</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>但是，我们不能在最后的 if 加上 else:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">x for x in range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> x % </span><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;"> else</span><span style="color:#D8DEE9FF;"> 0</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#88C0D0;">  File</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">&lt;stdin&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">,</span><span style="color:#A3BE8C;"> line</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">    [</span><span style="color:#D8DEE9FF;">x for x in range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;"> if</span><span style="color:#D8DEE9FF;"> x % </span><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;"> else</span><span style="color:#D8DEE9FF;"> 0</span><span style="color:#ECEFF4;">]</span></span>
<span class="line"><span style="color:#88C0D0;">                                              ^</span></span>
<span class="line"><span style="color:#88C0D0;">SyntaxError:</span><span style="color:#A3BE8C;"> invalid</span><span style="color:#A3BE8C;"> syntax</span></span></code></pre></div><p>这是因为跟在 for 后面的 if 是一个筛选条件，不能带 else，否则如何筛选?</p><p>另一些童鞋发现把 if 写在 for 前面必须加 else，否则报错:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">&gt;&gt;&gt; </span><span style="color:#ECEFF4;">[</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> x % </span><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;"> for x in range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)]</span></span>
<span class="line"><span style="color:#88C0D0;">  File</span><span style="color:#ECEFF4;"> &quot;</span><span style="color:#A3BE8C;">&lt;stdin&gt;</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">,</span><span style="color:#A3BE8C;"> line</span><span style="color:#B48EAD;"> 1</span></span>
<span class="line"><span style="color:#ECEFF4;">    [</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> x % </span><span style="color:#B48EAD;">2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#D8DEE9FF;"> for x in range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#81A1C1;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)]</span></span>
<span class="line"><span style="color:#88C0D0;">                       ^</span></span>
<span class="line"><span style="color:#88C0D0;">SyntaxError:</span><span style="color:#A3BE8C;"> invalid</span><span style="color:#A3BE8C;"> syntax</span></span></code></pre></div><p>这是因为 for 前面的部分是一个表达式，它必须根据 x 计算出一个结果。因此，考察表达式: <code>x if x % 2 == 0</code>，它无法根据 x 计算出结果，因为缺少 else，必须加上 else:</p><div class="language-py" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#81A1C1;">&gt;&gt;&gt;</span><span style="color:#ECEFF4;"> [</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">%</span><span style="color:#B48EAD;"> 2</span><span style="color:#81A1C1;"> ==</span><span style="color:#B48EAD;"> 0</span><span style="color:#81A1C1;"> else</span><span style="color:#81A1C1;"> -</span><span style="color:#D8DEE9FF;">x </span><span style="color:#81A1C1;">for</span><span style="color:#D8DEE9FF;"> x </span><span style="color:#81A1C1;">in</span><span style="color:#88C0D0;"> range</span><span style="color:#ECEFF4;">(</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 11</span><span style="color:#ECEFF4;">)]</span></span>
<span class="line"><span style="color:#ECEFF4;">[</span><span style="color:#81A1C1;">-</span><span style="color:#B48EAD;">1</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 2</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;">3</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 4</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;">5</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 6</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;">7</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 8</span><span style="color:#ECEFF4;">,</span><span style="color:#81A1C1;"> -</span><span style="color:#B48EAD;">9</span><span style="color:#ECEFF4;">,</span><span style="color:#B48EAD;"> 10</span><span style="color:#ECEFF4;">]</span></span></code></pre></div><p>上述 for 前面的表达式 <code>x if x % 2 == 0 else -x</code> 才能根据 x 计算出确定的结果。</p><p>可见，在一个列表生成式中，for 前面的 <code>if ... else</code> 是表达式，而 for 后面的 if 是过滤条件，不能带 else。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>运用列表生成式，可以快速生成 list，可以通过一个 list 推导出另一个 list，而代码却十分简洁。</p>`,34);function c(r,F){return a(),n("div",null,[t,l(" more "),E])}const i=s(e,[["render",c],["__file","list-comprehensions.html.vue"]]),A=JSON.parse('{"path":"/code/language/python/advance/list-comprehensions.html","title":"列表生成式","lang":"zh-CN","frontmatter":{"title":"列表生成式","icon":"list","date":"2020-05-29T00:00:00.000Z","category":"Python","description":"列表生成式即 List Comprehensions，是 Python 内置的非常简单却强大的可以用来创建 list 的生成式。","head":[["meta",{"property":"og:url","content":"https://mister-hope.com/code/language/python/advance/list-comprehensions.html"}],["meta",{"property":"og:site_name","content":"Mr.Hope"}],["meta",{"property":"og:title","content":"列表生成式"}],["meta",{"property":"og:description","content":"列表生成式即 List Comprehensions，是 Python 内置的非常简单却强大的可以用来创建 list 的生成式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-02-06T16:46:58.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:published_time","content":"2020-05-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-02-06T16:46:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"列表生成式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-29T00:00:00.000Z\\",\\"dateModified\\":\\"2022-02-06T16:46:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://mister-hope.com/atom.xml","title":"Mr.Hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://mister-hope.com/feed.json","title":"Mr.Hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://mister-hope.com/rss.xml","title":"Mr.Hope RSS Feed"}]]},"headers":[{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1591204114000,"updatedTime":1644166018000,"contributors":[{"name":"Mr.Hope","email":"zhangbowang1998@gmail.com","commits":3}]},"readingTime":{"minutes":3.11,"words":934},"filePathRelative":"code/language/python/advance/list-comprehensions.md","localizedDate":"2020年5月29日","excerpt":"<p>列表生成式即 List Comprehensions，是 Python 内置的非常简单却强大的可以用来创建 list 的生成式。</p>\\n","autoDesc":true}');export{i as comp,A as data};
